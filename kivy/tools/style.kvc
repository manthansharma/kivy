# -*- coding: utf-8 -*-

# Compiled from /Users/manthansharma/Projects/PycharmProjects/kivy/kivy/tools/style.kv at 2017-03-18 13:14:27.455993
__version__ = "0.1"
__kivy_version__ = "1.9.2-dev0"
__source_file__ = r"/Users/manthansharma/Projects/PycharmProjects/kivy/kivy/tools/style.kv"
__source_hash__ = b"7d4203c02ef7493c911144dccc617c1eebfe5e066d87b9f00c76ae3c57c4adba"

import kivy.metrics as __Metrics
from kivy.factory import Factory
from kivy.lang import (
    ParserSelectorName as __ParserSelectorName, _handlers as __handlers,
    ProxyApp as __ProxyApp, delayed_call_fn as __delayed_call_fn,
    Builder as __Builder)
from kivy import require as __require
from functools import partial as __partial
from kivy.event import EventDispatcher as __EventDispatcher, Observable as __Observable

app = __ProxyApp()
pt = __Metrics.pt
inch = __Metrics.inch
cm = __Metrics.cm
mm = __Metrics.mm
dp = __Metrics.dp
sp = __Metrics.sp

__mc = [None, ] * 72


def __rebind_callback(bound, i, instance, value):
    # bound is the list containing all the binds associated with a particular
    # root instance and its children nodes, e.g. `prop: root.obj`, bound
    # will contain all the binds that start with `root`. i is the bind index in
    # bound that triggered the rebind callback.
    # bound[i] and p cannot be None b/c it dispatched
    s, e, pidx, p, key, _, _, _ = bound[i]
    # we need to rebind all children of root (p.key). First check if the value
    # actually changed - i.e. whether p.key is the same as `value`. p.key is
    # the parent of p.key.x and is stored as the parent of the first child of
    # p.key, so find the first child of p.key (p.key.x) and use its 1st child
    # `s` is the first direct child of p.key (s, e) are all the (indirect)
    # children
    try:
        if value == bound[s][3]:
            return
    except ReferenceError:
        pass
    # now, everything must have a non-None parent idx since p.key is the root
    # also, since p.key was rebind, every node below it will have bound[node]
    # not be None, even if it was not bound in case it would have rebind

    # now unbind all the children, and along the way set each parent value
    # to be the new parent in the p.key.x.y.z... tree. cache the values here.
    # keys are the index of the parent
    parent = {}
    p = getattr(p, key)  # next parent
    if p is None or not isinstance(p, (__EventDispatcher, __Observable)):
        parent[i] = p, None, None, None
    else:
        parent[i] = p, p.proxy_ref, p.fast_bind, p.rebind_property

    dispatch = {}

    for k, node in enumerate(range(s, e)):
        # get the info stored for this bind
        node_s, node_e, pidx, p, key, buid, f, args = blist = bound[node]
        # node_s/e being None means it's a leaf with no children
        if buid:  # unbind parent's rebind
            try:
                p.unbind_uid(key, buid)
            except ReferenceError:
                pass

        p, pref, bind, rebind_prop = parent[pidx]
        # decide whether we can bind to this object
        if bind is not None and node_s is None:  # a leaf
            # replace the previous bind with the new object and bind
            blist[3] = pref  # new object ref
            blist[5] = bind(key, f, *args)  # bind leaf again
            dispatch[f] = args
            continue
        elif bind is not None and rebind_prop(key):  # a rebind node
            blist[3] = pref
            blist[5] = bind(key, f, *args)
        else:  # either None obj, or obj but no rebind and it's not a leaf
            blist[3] = blist[5] = None
            if node_s is None:
                continue

        # if the key is a leaf, don't save the key as a parent b/c it has no
        # children, hence the continue above so now, we are at rebind node
        # so we need to save this node for our children as their parent
        if node not in parent:
            if p is None:  # our parent is already None
                parent[node] = (None, None, None, None)
            else:
                p = getattr(p, key)  # next parent
                if p is None or not isinstance(p, (__EventDispatcher, __Observable)):
                    parent[node] = p, None, None, None, None
                else:
                    parent[node] = (
                        p, p.proxy_ref, p.fast_bind, p.rebind_property)

    for f, args in dispatch.items():
        f(*(args + (None, None)))



def __return_args(args):
    return args


# directives
__require("1.0")

def __h0_rgba(g1, root, *args):
    '''Line 5: <Label> -> Color @ rgba: self.disabled_color if self.disabled else (self.color if not self.markup else (1, 1, 1, 1)) '''
    root = root.__self__
    g1.rgba = root.disabled_color if root.disabled else (root.color if not root.markup else (1, 1, 1, 1))

def __h1_texture(g2, root, *args):
    '''Line 7: <Label> -> Rectangle @ texture: self.texture '''
    root = root.__self__
    g2.texture = root.texture

def __h2_size(g2, root, *args):
    '''Line 8: <Label> -> Rectangle @ size: self.texture_size '''
    root = root.__self__
    g2.size = root.texture_size

def __h3_pos(g2, root, *args):
    '''Line 9: <Label> -> Rectangle @ pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.) '''
    root = root.__self__
    g2.pos = int(root.center_x - root.texture_size[0] / 2.), int(root.center_y - root.texture_size[1] / 2.)


# <Label> L2
def __r0(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __add_root_canvas_root = root.canvas.add

    '''Line 4: <Label> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 6: <Label> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_root(g2)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b0(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b0, app, g1, g2, root))

def __b0(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 5: <Label> -> Color @ rgba: self.disabled_color if self.disabled else (self.color if not self.markup else (1, 1, 1, 1)) '''
    __delayed___h0_rgba = [__h0_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h0_rgba, None, None)

    '''Line 7: <Label> -> Rectangle @ texture: self.texture '''
    __delayed___h1_texture = [__h1_texture, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h1_texture, None, None)

    '''Line 8: <Label> -> Rectangle @ size: self.texture_size '''
    __delayed___h2_size = [__h2_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h2_size, None, None)

    '''Line 9: <Label> -> Rectangle @ pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.) '''
    __delayed___h3_pos = [__h3_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h3_pos, None, None)

    __bound = [None, ] * 9
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h0_rgba), __delayed_call_fn, (__delayed___h0_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "color", __bind_root("color", __delayed_call_fn, __delayed___h0_rgba), __delayed_call_fn, (__delayed___h0_rgba, )]
    __bound[2] = [None, None, None, __ref_root, "markup", __bind_root("markup", __delayed_call_fn, __delayed___h0_rgba), __delayed_call_fn, (__delayed___h0_rgba, )]
    __bound[3] = [None, None, None, __ref_root, "disabled_color", __bind_root("disabled_color", __delayed_call_fn, __delayed___h0_rgba), __delayed_call_fn, (__delayed___h0_rgba, )]
    __bound[4] = [None, None, None, __ref_root, "texture", __bind_root("texture", __delayed_call_fn, __delayed___h1_texture), __delayed_call_fn, (__delayed___h1_texture, )]
    __bound[5] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __delayed_call_fn, __delayed___h2_size), __delayed_call_fn, (__delayed___h2_size, )]
    __bound[6] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __delayed_call_fn, __delayed___h3_pos), __delayed_call_fn, (__delayed___h3_pos, )]
    __bound[7] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h3_pos), __delayed_call_fn, (__delayed___h3_pos, )]
    __bound[8] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h3_pos), __delayed_call_fn, (__delayed___h3_pos, )]
    __handlers[g2.uid].append((__bound, (4, 5, 6, 7, 8)))
    __handlers[g1.uid].append((__bound, (0, 1, 2, 3)))

    return tuple


def __h4_state_image(root, *args):
    '''Line 12: <-Button,-ToggleButton> @ state_image: self.background_normal if self.state == 'normal' else self.background_down '''
    root = root.__self__
    root.state_image = root.background_normal if root.state == 'normal' else root.background_down

def __h5_disabled_image(root, *args):
    '''Line 13: <-Button,-ToggleButton> @ disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down '''
    root = root.__self__
    root.disabled_image = root.background_disabled_normal if root.state == 'normal' else root.background_disabled_down

def __h6_rgba(g1, root, *args):
    '''Line 16: <-Button,-ToggleButton> -> Color @ rgba: self.background_color '''
    root = root.__self__
    g1.rgba = root.background_color

def __h7_border(g2, root, *args):
    '''Line 18: <-Button,-ToggleButton> -> BorderImage @ border: self.border '''
    root = root.__self__
    g2.border = root.border

def __h8_pos(g2, root, *args):
    '''Line 19: <-Button,-ToggleButton> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h9_size(g2, root, *args):
    '''Line 20: <-Button,-ToggleButton> -> BorderImage @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h10_source(g2, root, *args):
    '''Line 21: <-Button,-ToggleButton> -> BorderImage @ source: self.disabled_image if self.disabled else self.state_image '''
    root = root.__self__
    g2.source = root.disabled_image if root.disabled else root.state_image

def __h11_rgba(g3, root, *args):
    '''Line 23: <-Button,-ToggleButton> -> Color @ rgba: self.disabled_color if self.disabled else self.color '''
    root = root.__self__
    g3.rgba = root.disabled_color if root.disabled else root.color

def __h12_texture(g4, root, *args):
    '''Line 25: <-Button,-ToggleButton> -> Rectangle @ texture: self.texture '''
    root = root.__self__
    g4.texture = root.texture

def __h13_size(g4, root, *args):
    '''Line 26: <-Button,-ToggleButton> -> Rectangle @ size: self.texture_size '''
    root = root.__self__
    g4.size = root.texture_size

def __h14_pos(g4, root, *args):
    '''Line 27: <-Button,-ToggleButton> -> Rectangle @ pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.) '''
    root = root.__self__
    g4.pos = int(root.center_x - root.texture_size[0] / 2.), int(root.center_y - root.texture_size[1] / 2.)


# <-Button,-ToggleButton> L11
__mc[1] = set()
def __r1(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Color = Factory.Color

    __add_root_canvas_root = root.canvas.add

    '''Line 15: <-Button,-ToggleButton> -> Color'''
    g1 = __cls_Color()
    __add_root_canvas_root(g1)

    '''Line 17: <-Button,-ToggleButton> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_root(g2)

    '''Line 22: <-Button,-ToggleButton> -> Color'''
    g3 = __cls_Color()
    __add_root_canvas_root(g3)

    '''Line 24: <-Button,-ToggleButton> -> Rectangle'''
    g4 = Factory.Rectangle()
    __add_root_canvas_root(g4)

    if root.__class__ not in __mc[1]:
        __create_property_root = root.create_property
        '''Line 12: <-Button,-ToggleButton> @ state_image: self.background_normal if self.state == 'normal' else self.background_down '''
        if not hasattr(root, "state_image"):
            __create_property_root("state_image", (None))
        '''Line 13: <-Button,-ToggleButton> @ disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down '''
        if not hasattr(root, "disabled_image"):
            __create_property_root("disabled_image", (None))

        __mc[1].add(root.__class__)

    '''Line 12: <-Button,-ToggleButton> @ state_image: self.background_normal if self.state == 'normal' else self.background_down '''
    root.state_image = root.background_normal if root.state == 'normal' else root.background_down

    '''Line 13: <-Button,-ToggleButton> @ disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down '''
    root.disabled_image = root.background_disabled_normal if root.state == 'normal' else root.background_disabled_down

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b1(app, g1, g2, g3, g4, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b1, app, g1, g2, g3, g4, root))

def __b1(app, g1, g2, g3, g4, root):
    __ref_g2 = g2.proxy_ref
    __ref_g4 = g4.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 16: <-Button,-ToggleButton> -> Color @ rgba: self.background_color '''
    __delayed___h6_rgba = [__h6_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h6_rgba, None, None)

    '''Line 18: <-Button,-ToggleButton> -> BorderImage @ border: self.border '''
    __delayed___h7_border = [__h7_border, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h7_border, None, None)

    '''Line 19: <-Button,-ToggleButton> -> BorderImage @ pos: self.pos '''
    __delayed___h8_pos = [__h8_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h8_pos, None, None)

    '''Line 20: <-Button,-ToggleButton> -> BorderImage @ size: self.size '''
    __delayed___h9_size = [__h9_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h9_size, None, None)

    '''Line 21: <-Button,-ToggleButton> -> BorderImage @ source: self.disabled_image if self.disabled else self.state_image '''
    __delayed___h10_source = [__h10_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h10_source, None, None)

    '''Line 23: <-Button,-ToggleButton> -> Color @ rgba: self.disabled_color if self.disabled else self.color '''
    __delayed___h11_rgba = [__h11_rgba, g3.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h11_rgba, None, None)

    '''Line 25: <-Button,-ToggleButton> -> Rectangle @ texture: self.texture '''
    __delayed___h12_texture = [__h12_texture, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h12_texture, None, None)

    '''Line 26: <-Button,-ToggleButton> -> Rectangle @ size: self.texture_size '''
    __delayed___h13_size = [__h13_size, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h13_size, None, None)

    '''Line 27: <-Button,-ToggleButton> -> Rectangle @ pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.) '''
    __delayed___h14_pos = [__h14_pos, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h14_pos, None, None)

    __bound = [None, ] * 21
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "background_normal", __bind_root("background_normal", __h4_state_image, __ref_root), __h4_state_image, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "state", __bind_root("state", __h4_state_image, __ref_root), __h4_state_image, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "background_down", __bind_root("background_down", __h4_state_image, __ref_root), __h4_state_image, (__ref_root, )]
    __bound[3] = [None, None, None, __ref_root, "background_disabled_normal", __bind_root("background_disabled_normal", __h5_disabled_image, __ref_root), __h5_disabled_image, (__ref_root, )]
    __bound[4] = [None, None, None, __ref_root, "state", __bind_root("state", __h5_disabled_image, __ref_root), __h5_disabled_image, (__ref_root, )]
    __bound[5] = [None, None, None, __ref_root, "background_disabled_down", __bind_root("background_disabled_down", __h5_disabled_image, __ref_root), __h5_disabled_image, (__ref_root, )]
    __bound[6] = [None, None, None, __ref_root, "background_color", __bind_root("background_color", __delayed_call_fn, __delayed___h6_rgba), __delayed_call_fn, (__delayed___h6_rgba, )]
    __bound[7] = [None, None, None, __ref_root, "border", __bind_root("border", __delayed_call_fn, __delayed___h7_border), __delayed_call_fn, (__delayed___h7_border, )]
    __bound[8] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h8_pos), __delayed_call_fn, (__delayed___h8_pos, )]
    __bound[9] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h9_size), __delayed_call_fn, (__delayed___h9_size, )]
    __bound[10] = [None, None, None, __ref_root, "disabled_image", __bind_root("disabled_image", __delayed_call_fn, __delayed___h10_source), __delayed_call_fn, (__delayed___h10_source, )]
    __bound[11] = [None, None, None, __ref_root, "state_image", __bind_root("state_image", __delayed_call_fn, __delayed___h10_source), __delayed_call_fn, (__delayed___h10_source, )]
    __bound[12] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h10_source), __delayed_call_fn, (__delayed___h10_source, )]
    __bound[13] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h11_rgba), __delayed_call_fn, (__delayed___h11_rgba, )]
    __bound[14] = [None, None, None, __ref_root, "color", __bind_root("color", __delayed_call_fn, __delayed___h11_rgba), __delayed_call_fn, (__delayed___h11_rgba, )]
    __bound[15] = [None, None, None, __ref_root, "disabled_color", __bind_root("disabled_color", __delayed_call_fn, __delayed___h11_rgba), __delayed_call_fn, (__delayed___h11_rgba, )]
    __bound[16] = [None, None, None, __ref_root, "texture", __bind_root("texture", __delayed_call_fn, __delayed___h12_texture), __delayed_call_fn, (__delayed___h12_texture, )]
    __bound[17] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __delayed_call_fn, __delayed___h13_size), __delayed_call_fn, (__delayed___h13_size, )]
    __bound[18] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __delayed_call_fn, __delayed___h14_pos), __delayed_call_fn, (__delayed___h14_pos, )]
    __bound[19] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h14_pos), __delayed_call_fn, (__delayed___h14_pos, )]
    __bound[20] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h14_pos), __delayed_call_fn, (__delayed___h14_pos, )]
    __handlers[g3.uid].append((__bound, (13, 14, 15)))
    __handlers[g4.uid].append((__bound, (16, 17, 18, 19, 20)))
    __handlers[root.uid].append((__bound, (0, 1, 2, 3, 4, 5)))
    __handlers[g2.uid].append((__bound, (7, 8, 9, 10, 11, 12)))
    __handlers[g1.uid].append((__bound, (6, )))

    return __partial(__d1, app, g1, g2, g3, g4, root)

def __d1(app, g1, g2, g3, g4, root):
    args = None, None

    '''Line 12: <-Button,-ToggleButton> @ state_image: self.background_normal if self.state == 'normal' else self.background_down '''
    root.state_image = root.background_normal if root.state == 'normal' else root.background_down

    '''Line 13: <-Button,-ToggleButton> @ disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down '''
    root.disabled_image = root.background_disabled_normal if root.state == 'normal' else root.background_disabled_down

    return ()


def __h15_opacity(root, *args):
    '''Line 30: <BubbleContent> @ opacity: .7 if self.disabled else 1 '''
    root = root.__self__
    root.opacity = .7 if root.disabled else 1

def __h16_rgba(g1, root, *args):
    '''Line 34: <BubbleContent> -> Color @ rgba: self.parent.background_color if self.parent else (1, 1, 1, 1) '''
    root = root.__self__
    g1.rgba = root.parent.background_color if root.parent else (1, 1, 1, 1)

def __h17_border(g2, root, *args):
    '''Line 36: <BubbleContent> -> BorderImage @ border: self.parent.border if self.parent else (16, 16, 16, 16) '''
    root = root.__self__
    g2.border = root.parent.border if root.parent else (16, 16, 16, 16)

def __h18_texture(g2, root, *args):
    '''Line 37: <BubbleContent> -> BorderImage @ texture: root.parent._bk_img.texture if root.parent else None '''
    root = root.__self__
    g2.texture = root.parent._bk_img.texture if root.parent else None

def __h19_size(g2, root, *args):
    '''Line 38: <BubbleContent> -> BorderImage @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h20_pos(g2, root, *args):
    '''Line 39: <BubbleContent> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos


# <BubbleContent> L29
__mc[2] = set()
def __r2(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 33: <BubbleContent> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 35: <BubbleContent> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_root(g2)

    if root.__class__ not in __mc[2]:
        __create_property_root = root.create_property
        '''Line 30: <BubbleContent> @ opacity: .7 if self.disabled else 1 '''
        if not hasattr(root, "opacity"):
            __create_property_root("opacity", (None))
        '''Line 31: <BubbleContent> @ rows: 1 '''
        if not hasattr(root, "rows"):
            __create_property_root("rows", (1))

        __mc[2].add(root.__class__)

    '''Line 31: <BubbleContent> @ rows: 1 '''
    root.rows = 1

    '''Line 30: <BubbleContent> @ opacity: .7 if self.disabled else 1 '''
    root.opacity = .7 if root.disabled else 1

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b2(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b2, app, g1, g2, root))

def __b2(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 34: <BubbleContent> -> Color @ rgba: self.parent.background_color if self.parent else (1, 1, 1, 1) '''
    __delayed___h16_rgba = [__h16_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h16_rgba, None, None)

    '''Line 36: <BubbleContent> -> BorderImage @ border: self.parent.border if self.parent else (16, 16, 16, 16) '''
    __delayed___h17_border = [__h17_border, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h17_border, None, None)

    '''Line 37: <BubbleContent> -> BorderImage @ texture: root.parent._bk_img.texture if root.parent else None '''
    __delayed___h18_texture = [__h18_texture, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h18_texture, None, None)

    '''Line 38: <BubbleContent> -> BorderImage @ size: self.size '''
    __delayed___h19_size = [__h19_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h19_size, None, None)

    '''Line 39: <BubbleContent> -> BorderImage @ pos: self.pos '''
    __delayed___h20_pos = [__h20_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h20_pos, None, None)

    __bound = [None, ] * 10
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __h15_opacity, __ref_root), __h15_opacity, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h16_rgba), __delayed_call_fn, (__delayed___h16_rgba, )]
    __bound[2] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h17_border), __delayed_call_fn, (__delayed___h17_border, )]
    __bound[3] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h18_texture), __delayed_call_fn, (__delayed___h18_texture, )]
    __bound[4] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h19_size), __delayed_call_fn, (__delayed___h19_size, )]
    __bound[5] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h20_pos), __delayed_call_fn, (__delayed___h20_pos, )]
    if root.rebind_property("parent"):
        __bound[6] = [7, 10, None, __ref_root, "parent", __bind_root("parent", __rebind_callback, __bound, 6), __rebind_callback, (__bound, 6)]

    obj_root_parent = root.parent
    if obj_root_parent is not None and isinstance(obj_root_parent, (__EventDispatcher, __Observable)):
        __ref_obj_root_parent = obj_root_parent.proxy_ref
        __bind_obj_root_parent = obj_root_parent.fast_bind
        __bound[7] = [None, None, 6, __ref_obj_root_parent, "background_color", __bind_obj_root_parent("background_color", __delayed_call_fn, __delayed___h16_rgba), __delayed_call_fn, (__delayed___h16_rgba, )]
        __bound[8] = [None, None, 6, __ref_obj_root_parent, "border", __bind_obj_root_parent("border", __delayed_call_fn, __delayed___h17_border), __delayed_call_fn, (__delayed___h17_border, )]
        if obj_root_parent.rebind_property("_bk_img"):
            __bound[9] = [10, 11, 6, __ref_obj_root_parent, "_bk_img", __bind_obj_root_parent("_bk_img", __rebind_callback, __bound, 9), __rebind_callback, (__bound, 9)]
        else:
            __bound[9] = [10, 11, 6, None, "_bk_img", None, __rebind_callback, (__bound, 9)]
    if __bound[6] is not None and __bound[7] is None:
        __bound[7] = [None, None, 6, None, "background_color", None, __delayed_call_fn, (__delayed___h16_rgba, )]
        __bound[8] = [None, None, 6, None, "border", None, __delayed_call_fn, (__delayed___h17_border, )]
        __bound[9] = [10, 11, 6, None, "_bk_img", None, __rebind_callback, (__bound, 9)]

    if obj_root_parent is not None:
        obj_root_parent__bk_img = obj_root_parent._bk_img
        if obj_root_parent__bk_img is not None and isinstance(obj_root_parent__bk_img, (__EventDispatcher, __Observable)):
            __bind_obj_root_parent__bk_img = obj_root_parent__bk_img.fast_bind
            __bound[10] = [None, None, 9, obj_root_parent__bk_img.proxy_ref, "texture", __bind_obj_root_parent__bk_img("texture", __delayed_call_fn, __delayed___h18_texture), __delayed_call_fn, (__delayed___h18_texture, )]
    if __bound[9] is not None and __bound[10] is None:
        __bound[10] = [None, None, 9, None, "texture", None, __delayed_call_fn, (__delayed___h18_texture, )]
    __handlers[root.uid].append((__bound, (0, )))
    __handlers[g2.uid].append((__bound, (2, 3, 4, 5, 8, 10)))
    __handlers[g1.uid].append((__bound, (1, 7)))

    return __partial(__d2, app, g1, g2, root)

def __d2(app, g1, g2, root):
    args = None, None

    '''Line 30: <BubbleContent> @ opacity: .7 if self.disabled else 1 '''
    root.opacity = .7 if root.disabled else 1

    return ()


# <BubbleButton> L41
__mc[3] = set()
def __r3(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[3]:
        __create_property_root = root.create_property
        '''Line 42: <BubbleButton> @ background_normal: 'atlas://data/images/defaulttheme/bubble_btn' '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", ('atlas://data/images/defaulttheme/bubble_btn'))
        '''Line 43: <BubbleButton> @ background_down: 'atlas://data/images/defaulttheme/bubble_btn_pressed' '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", ('atlas://data/images/defaulttheme/bubble_btn_pressed'))
        '''Line 44: <BubbleButton> @ background_disabled_normal: 'atlas://data/images/defaulttheme/bubble_btn' '''
        if not hasattr(root, "background_disabled_normal"):
            __create_property_root("background_disabled_normal", ('atlas://data/images/defaulttheme/bubble_btn'))
        '''Line 45: <BubbleButton> @ background_disabled_down: 'atlas://data/images/defaulttheme/bubble_btn_pressed' '''
        if not hasattr(root, "background_disabled_down"):
            __create_property_root("background_disabled_down", ('atlas://data/images/defaulttheme/bubble_btn_pressed'))
        '''Line 46: <BubbleButton> @ border: (0, 0, 0, 0) '''
        if not hasattr(root, "border"):
            __create_property_root("border", ((0, 0, 0, 0)))

        __mc[3].add(root.__class__)

    '''Line 42: <BubbleButton> @ background_normal: 'atlas://data/images/defaulttheme/bubble_btn' '''
    root.background_normal = 'atlas://data/images/defaulttheme/bubble_btn'

    '''Line 43: <BubbleButton> @ background_down: 'atlas://data/images/defaulttheme/bubble_btn_pressed' '''
    root.background_down = 'atlas://data/images/defaulttheme/bubble_btn_pressed'

    '''Line 44: <BubbleButton> @ background_disabled_normal: 'atlas://data/images/defaulttheme/bubble_btn' '''
    root.background_disabled_normal = 'atlas://data/images/defaulttheme/bubble_btn'

    '''Line 45: <BubbleButton> @ background_disabled_down: 'atlas://data/images/defaulttheme/bubble_btn_pressed' '''
    root.background_disabled_down = 'atlas://data/images/defaulttheme/bubble_btn_pressed'

    '''Line 46: <BubbleButton> @ border: (0, 0, 0, 0) '''
    root.border = (0, 0, 0, 0)


def __h21_border(g2, root, *args):
    '''Line 53: <Slider> -> BorderImage @ border: (0, 18, 0, 18) if self.orientation == 'horizontal' else (18, 0, 18, 0) '''
    root = root.__self__
    g2.border = (0, 18, 0, 18) if root.orientation == 'horizontal' else (18, 0, 18, 0)

def __h22_pos(g2, root, *args):
    '''Line 54: <Slider> -> BorderImage @ pos: (self.x + self.padding, self.center_y - sp(18)) if self.orientation == 'horizontal' else (self.center_x - 18, self.y + self.padding) '''
    root = root.__self__
    g2.pos = (root.x + root.padding, root.center_y - sp(18)) if root.orientation == 'horizontal' else (root.center_x - 18, root.y + root.padding)

def __h23_size(g2, root, *args):
    '''Line 55: <Slider> -> BorderImage @ size: (self.width - self.padding * 2, sp(36)) if self.orientation == 'horizontal' else (sp(36), self.height - self.padding * 2) '''
    root = root.__self__
    g2.size = (root.width - root.padding * 2, sp(36)) if root.orientation == 'horizontal' else (sp(36), root.height - root.padding * 2)

def __h24_source(g2, root, *args):
    '''Line 56: <Slider> -> BorderImage @ source: 'atlas://data/images/defaulttheme/slider{}_background{}'.format(self.orientation[0], '_disabled' if self.disabled else '') '''
    root = root.__self__
    g2.source = 'atlas://data/images/defaulttheme/slider{}_background{}'.format(root.orientation[0], '_disabled' if root.disabled else '')

def __h25_pos(g3, root, *args):
    '''Line 58: <Slider> -> Rectangle @ pos: (self.value_pos[0] - sp(16), self.center_y - sp(17)) if self.orientation == 'horizontal' else (self.center_x - (16), self.value_pos[1] - sp(16)) '''
    root = root.__self__
    g3.pos = (root.value_pos[0] - sp(16), root.center_y - sp(17)) if root.orientation == 'horizontal' else (root.center_x - (16), root.value_pos[1] - sp(16))

def __h26_source(g3, root, *args):
    '''Line 60: <Slider> -> Rectangle @ source: 'atlas://data/images/defaulttheme/slider_cursor{}'.format('_disabled' if self.disabled else '') '''
    root = root.__self__
    g3.source = 'atlas://data/images/defaulttheme/slider_cursor{}'.format('_disabled' if root.disabled else '')


# <Slider> L48
def __r4(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 50: <Slider> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 52: <Slider> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_root(g2)

    '''Line 57: <Slider> -> Rectangle'''
    g3 = Factory.Rectangle()
    __add_root_canvas_root(g3)

    '''Line 51: <Slider> -> Color @ rgb: 1, 1, 1 '''
    g1.rgb = 1, 1, 1

    '''Line 59: <Slider> -> Rectangle @ size: (sp(32), sp(32)) '''
    g3.size = (sp(32), sp(32))

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b4(app, g1, g2, g3, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b4, app, g1, g2, g3, root))

def __b4(app, g1, g2, g3, root):
    __ref_g2 = g2.proxy_ref
    __ref_g3 = g3.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 53: <Slider> -> BorderImage @ border: (0, 18, 0, 18) if self.orientation == 'horizontal' else (18, 0, 18, 0) '''
    __delayed___h21_border = [__h21_border, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h21_border, None, None)

    '''Line 54: <Slider> -> BorderImage @ pos: (self.x + self.padding, self.center_y - sp(18)) if self.orientation == 'horizontal' else (self.center_x - 18, self.y + self.padding) '''
    __delayed___h22_pos = [__h22_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h22_pos, None, None)

    '''Line 55: <Slider> -> BorderImage @ size: (self.width - self.padding * 2, sp(36)) if self.orientation == 'horizontal' else (sp(36), self.height - self.padding * 2) '''
    __delayed___h23_size = [__h23_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h23_size, None, None)

    '''Line 56: <Slider> -> BorderImage @ source: 'atlas://data/images/defaulttheme/slider{}_background{}'.format(self.orientation[0], '_disabled' if self.disabled else '') '''
    __delayed___h24_source = [__h24_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h24_source, None, None)

    '''Line 58: <Slider> -> Rectangle @ pos: (self.value_pos[0] - sp(16), self.center_y - sp(17)) if self.orientation == 'horizontal' else (self.center_x - (16), self.value_pos[1] - sp(16)) '''
    __delayed___h25_pos = [__h25_pos, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h25_pos, None, None)

    '''Line 60: <Slider> -> Rectangle @ source: 'atlas://data/images/defaulttheme/slider_cursor{}'.format('_disabled' if self.disabled else '') '''
    __delayed___h26_source = [__h26_source, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h26_source, None, None)

    __bound = [None, ] * 18
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __delayed_call_fn, __delayed___h21_border), __delayed_call_fn, (__delayed___h21_border, )]
    __bound[1] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h22_pos), __delayed_call_fn, (__delayed___h22_pos, )]
    __bound[2] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h22_pos), __delayed_call_fn, (__delayed___h22_pos, )]
    __bound[3] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h22_pos), __delayed_call_fn, (__delayed___h22_pos, )]
    __bound[4] = [None, None, None, __ref_root, "padding", __bind_root("padding", __delayed_call_fn, __delayed___h22_pos), __delayed_call_fn, (__delayed___h22_pos, )]
    __bound[5] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __delayed_call_fn, __delayed___h22_pos), __delayed_call_fn, (__delayed___h22_pos, )]
    __bound[6] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h22_pos), __delayed_call_fn, (__delayed___h22_pos, )]
    __bound[7] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h23_size), __delayed_call_fn, (__delayed___h23_size, )]
    __bound[8] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __delayed_call_fn, __delayed___h23_size), __delayed_call_fn, (__delayed___h23_size, )]
    __bound[9] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h23_size), __delayed_call_fn, (__delayed___h23_size, )]
    __bound[10] = [None, None, None, __ref_root, "padding", __bind_root("padding", __delayed_call_fn, __delayed___h23_size), __delayed_call_fn, (__delayed___h23_size, )]
    __bound[11] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h24_source), __delayed_call_fn, (__delayed___h24_source, )]
    __bound[12] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __delayed_call_fn, __delayed___h24_source), __delayed_call_fn, (__delayed___h24_source, )]
    __bound[13] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __delayed_call_fn, __delayed___h25_pos), __delayed_call_fn, (__delayed___h25_pos, )]
    __bound[14] = [None, None, None, __ref_root, "value_pos", __bind_root("value_pos", __delayed_call_fn, __delayed___h25_pos), __delayed_call_fn, (__delayed___h25_pos, )]
    __bound[15] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h25_pos), __delayed_call_fn, (__delayed___h25_pos, )]
    __bound[16] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h25_pos), __delayed_call_fn, (__delayed___h25_pos, )]
    __bound[17] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h26_source), __delayed_call_fn, (__delayed___h26_source, )]
    __handlers[g3.uid].append((__bound, (13, 14, 15, 16, 17)))
    __handlers[g2.uid].append((__bound, (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)))

    return tuple


def __h27_pos(g2, root, *args):
    '''Line 68: <ProgressBar> -> BorderImage @ pos: self.x, self.center_y - 12 '''
    root = root.__self__
    g2.pos = root.x, root.center_y - 12

def __h28_size(g2, root, *args):
    '''Line 69: <ProgressBar> -> BorderImage @ size: self.width, 24 '''
    root = root.__self__
    g2.size = root.width, 24

def __h29_border(g3, root, *args):
    '''Line 72: <ProgressBar> -> BorderImage @ border: [int(min(self.width * (self.value / float(self.max)) if self.max else 0, 12))] * 4 '''
    root = root.__self__
    g3.border = [int(min(root.width * (root.value / float(root.max)) if root.max else 0, 12))] * 4

def __h30_pos(g3, root, *args):
    '''Line 73: <ProgressBar> -> BorderImage @ pos: self.x, self.center_y - 12 '''
    root = root.__self__
    g3.pos = root.x, root.center_y - 12

def __h31_size(g3, root, *args):
    '''Line 74: <ProgressBar> -> BorderImage @ size: self.width * (self.value / float(self.max)) if self.max else 0, 24 '''
    root = root.__self__
    g3.size = root.width * (root.value / float(root.max)) if root.max else 0, 24


# <ProgressBar> L62
def __r5(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_BorderImage = Factory.BorderImage

    __add_root_canvas_root = root.canvas.add

    '''Line 64: <ProgressBar> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 66: <ProgressBar> -> BorderImage'''
    g2 = __cls_BorderImage()
    __add_root_canvas_root(g2)

    '''Line 71: <ProgressBar> -> BorderImage'''
    g3 = __cls_BorderImage()
    __add_root_canvas_root(g3)

    '''Line 65: <ProgressBar> -> Color @ rgb: 1, 1, 1 '''
    g1.rgb = 1, 1, 1

    '''Line 67: <ProgressBar> -> BorderImage @ border: (12, 12, 12, 12) '''
    g2.border = (12, 12, 12, 12)

    '''Line 70: <ProgressBar> -> BorderImage @ source: 'atlas://data/images/defaulttheme/progressbar_background' '''
    g2.source = 'atlas://data/images/defaulttheme/progressbar_background'

    '''Line 75: <ProgressBar> -> BorderImage @ source: 'atlas://data/images/defaulttheme/progressbar' '''
    g3.source = 'atlas://data/images/defaulttheme/progressbar'

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b5(app, g1, g2, g3, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b5, app, g1, g2, g3, root))

def __b5(app, g1, g2, g3, root):
    __ref_g2 = g2.proxy_ref
    __ref_g3 = g3.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 68: <ProgressBar> -> BorderImage @ pos: self.x, self.center_y - 12 '''
    __delayed___h27_pos = [__h27_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h27_pos, None, None)

    '''Line 69: <ProgressBar> -> BorderImage @ size: self.width, 24 '''
    __delayed___h28_size = [__h28_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h28_size, None, None)

    '''Line 72: <ProgressBar> -> BorderImage @ border: [int(min(self.width * (self.value / float(self.max)) if self.max else 0, 12))] * 4 '''
    __delayed___h29_border = [__h29_border, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h29_border, None, None)

    '''Line 73: <ProgressBar> -> BorderImage @ pos: self.x, self.center_y - 12 '''
    __delayed___h30_pos = [__h30_pos, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h30_pos, None, None)

    '''Line 74: <ProgressBar> -> BorderImage @ size: self.width * (self.value / float(self.max)) if self.max else 0, 24 '''
    __delayed___h31_size = [__h31_size, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h31_size, None, None)

    __bound = [None, ] * 11
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h27_pos), __delayed_call_fn, (__delayed___h27_pos, )]
    __bound[1] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h27_pos), __delayed_call_fn, (__delayed___h27_pos, )]
    __bound[2] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h28_size), __delayed_call_fn, (__delayed___h28_size, )]
    __bound[3] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h29_border), __delayed_call_fn, (__delayed___h29_border, )]
    __bound[4] = [None, None, None, __ref_root, "value", __bind_root("value", __delayed_call_fn, __delayed___h29_border), __delayed_call_fn, (__delayed___h29_border, )]
    __bound[5] = [None, None, None, __ref_root, "max", __bind_root("max", __delayed_call_fn, __delayed___h29_border), __delayed_call_fn, (__delayed___h29_border, )]
    __bound[6] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h30_pos), __delayed_call_fn, (__delayed___h30_pos, )]
    __bound[7] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h30_pos), __delayed_call_fn, (__delayed___h30_pos, )]
    __bound[8] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h31_size), __delayed_call_fn, (__delayed___h31_size, )]
    __bound[9] = [None, None, None, __ref_root, "value", __bind_root("value", __delayed_call_fn, __delayed___h31_size), __delayed_call_fn, (__delayed___h31_size, )]
    __bound[10] = [None, None, None, __ref_root, "max", __bind_root("max", __delayed_call_fn, __delayed___h31_size), __delayed_call_fn, (__delayed___h31_size, )]
    __handlers[g3.uid].append((__bound, (3, 4, 5, 6, 7, 8, 9, 10)))
    __handlers[g2.uid].append((__bound, (0, 1, 2)))

    return tuple


def __h32_border(root, *args):
    '''Line 78: <SplitterStrip> @ border: self.parent.border if self.parent else (3, 3, 3, 3) '''
    root = root.__self__
    root.border = root.parent.border if root.parent else (3, 3, 3, 3)

def __h33_horizontal(root, *args):
    '''Line 79: <SplitterStrip> @ horizontal: '_h' if self.parent and self.parent.sizable_from[0] in  ('t', 'b') else '' '''
    root = root.__self__
    root.horizontal = '_h' if root.parent and root.parent.sizable_from[0] in  ('t', 'b') else ''

def __h34_background_normal(root, *args):
    '''Line 80: <SplitterStrip> @ background_normal: 'atlas://data/images/defaulttheme/splitter{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
    root = root.__self__
    root.background_normal = 'atlas://data/images/defaulttheme/splitter{}{}'.format('_disabled' if root.disabled else '', root.horizontal)

def __h35_background_down(root, *args):
    '''Line 81: <SplitterStrip> @ background_down: 'atlas://data/images/defaulttheme/splitter_down{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
    root = root.__self__
    root.background_down = 'atlas://data/images/defaulttheme/splitter_down{}{}'.format('_disabled' if root.disabled else '', root.horizontal)

def __h36_pos(root, w1, *args):
    '''Line 83: <SplitterStrip> -> Image @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos

def __h37_size(root, w1, *args):
    '''Line 84: <SplitterStrip> -> Image @ size: root.size '''
    root = root.__self__
    w1.size = root.size

def __h38_source(root, w1, *args):
    '''Line 86: <SplitterStrip> -> Image @ source: 'atlas://data/images/defaulttheme/splitter_grip' + root.horizontal '''
    root = root.__self__
    w1.source = 'atlas://data/images/defaulttheme/splitter_grip' + root.horizontal


# <SplitterStrip> L77
__mc[6] = set()
def __r6(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 82: <SplitterStrip> -> Image'''
    w1 = Factory.Image(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[6]:
        __create_property_root = root.create_property
        '''Line 78: <SplitterStrip> @ border: self.parent.border if self.parent else (3, 3, 3, 3) '''
        if not hasattr(root, "border"):
            __create_property_root("border", (None))
        '''Line 79: <SplitterStrip> @ horizontal: '_h' if self.parent and self.parent.sizable_from[0] in  ('t', 'b') else '' '''
        if not hasattr(root, "horizontal"):
            __create_property_root("horizontal", (None))
        '''Line 80: <SplitterStrip> @ background_normal: 'atlas://data/images/defaulttheme/splitter{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", (None))
        '''Line 81: <SplitterStrip> @ background_down: 'atlas://data/images/defaulttheme/splitter_down{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", (None))

        __create_property_w1 = w1.create_property
        '''Line 83: <SplitterStrip> -> Image @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 84: <SplitterStrip> -> Image @ size: root.size '''
        if not hasattr(w1, "size"):
            __create_property_w1("size", (None))
        '''Line 85: <SplitterStrip> -> Image @ allow_stretch: True '''
        if not hasattr(w1, "allow_stretch"):
            __create_property_w1("allow_stretch", (None))
        '''Line 86: <SplitterStrip> -> Image @ source: 'atlas://data/images/defaulttheme/splitter_grip' + root.horizontal '''
        if not hasattr(w1, "source"):
            __create_property_w1("source", (None))

        __mc[6].add(root.__class__)

    '''Line 85: <SplitterStrip> -> Image @ allow_stretch: True '''
    w1.allow_stretch = True

    '''Line 78: <SplitterStrip> @ border: self.parent.border if self.parent else (3, 3, 3, 3) '''
    root.border = root.parent.border if root.parent else (3, 3, 3, 3)

    '''Line 79: <SplitterStrip> @ horizontal: '_h' if self.parent and self.parent.sizable_from[0] in  ('t', 'b') else '' '''
    root.horizontal = '_h' if root.parent and root.parent.sizable_from[0] in  ('t', 'b') else ''

    '''Line 80: <SplitterStrip> @ background_normal: 'atlas://data/images/defaulttheme/splitter{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
    root.background_normal = 'atlas://data/images/defaulttheme/splitter{}{}'.format('_disabled' if root.disabled else '', root.horizontal)

    '''Line 81: <SplitterStrip> @ background_down: 'atlas://data/images/defaulttheme/splitter_down{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
    root.background_down = 'atlas://data/images/defaulttheme/splitter_down{}{}'.format('_disabled' if root.disabled else '', root.horizontal)

    '''Line 83: <SplitterStrip> -> Image @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 84: <SplitterStrip> -> Image @ size: root.size '''
    w1.size = root.size

    '''Line 86: <SplitterStrip> -> Image @ source: 'atlas://data/images/defaulttheme/splitter_grip' + root.horizontal '''
    w1.source = 'atlas://data/images/defaulttheme/splitter_grip' + root.horizontal

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b6(app, root, w1))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b6, app, root, w1))

def __b6(app, root, w1):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    __bound = [None, ] * 12
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "parent", __bind_root("parent", __h32_border, __ref_root), __h32_border, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "parent", __bind_root("parent", __h33_horizontal, __ref_root), __h33_horizontal, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __h34_background_normal, __ref_root), __h34_background_normal, (__ref_root, )]
    __bound[3] = [None, None, None, __ref_root, "horizontal", __bind_root("horizontal", __h34_background_normal, __ref_root), __h34_background_normal, (__ref_root, )]
    __bound[4] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __h35_background_down, __ref_root), __h35_background_down, (__ref_root, )]
    __bound[5] = [None, None, None, __ref_root, "horizontal", __bind_root("horizontal", __h35_background_down, __ref_root), __h35_background_down, (__ref_root, )]
    __bound[6] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h36_pos, __ref_root, __ref_w1), __h36_pos, [__ref_root, __ref_w1]]
    __bound[7] = [None, None, None, __ref_root, "size", __bind_root("size", __h37_size, __ref_root, __ref_w1), __h37_size, [__ref_root, __ref_w1]]
    __bound[8] = [None, None, None, __ref_root, "horizontal", __bind_root("horizontal", __h38_source, __ref_root, __ref_w1), __h38_source, [__ref_root, __ref_w1]]
    if root.rebind_property("parent"):
        __bound[9] = [10, 12, None, __ref_root, "parent", __bind_root("parent", __rebind_callback, __bound, 9), __rebind_callback, (__bound, 9)]

    obj_root_parent = root.parent
    if obj_root_parent is not None and isinstance(obj_root_parent, (__EventDispatcher, __Observable)):
        __ref_obj_root_parent = obj_root_parent.proxy_ref
        __bind_obj_root_parent = obj_root_parent.fast_bind
        __bound[10] = [None, None, 9, __ref_obj_root_parent, "border", __bind_obj_root_parent("border", __h32_border, __ref_root), __h32_border, (__ref_root, )]
        __bound[11] = [None, None, 9, __ref_obj_root_parent, "sizable_from", __bind_obj_root_parent("sizable_from", __h33_horizontal, __ref_root), __h33_horizontal, (__ref_root, )]
    if __bound[9] is not None and __bound[10] is None:
        __bound[10] = [None, None, 9, None, "border", None, __h32_border, (__ref_root, )]
        __bound[11] = [None, None, 9, None, "sizable_from", None, __h33_horizontal, (__ref_root, )]
    __handlers[root.uid].append((__bound, (0, 1, 2, 3, 4, 5, 10, 11)))
    __handlers[w1.uid].append((__bound, (6, 7, 8)))

    return __partial(__d6, app, root, w1)

def __d6(app, root, w1):
    args = None, None

    '''Line 78: <SplitterStrip> @ border: self.parent.border if self.parent else (3, 3, 3, 3) '''
    root.border = root.parent.border if root.parent else (3, 3, 3, 3)

    '''Line 79: <SplitterStrip> @ horizontal: '_h' if self.parent and self.parent.sizable_from[0] in  ('t', 'b') else '' '''
    root.horizontal = '_h' if root.parent and root.parent.sizable_from[0] in  ('t', 'b') else ''

    '''Line 80: <SplitterStrip> @ background_normal: 'atlas://data/images/defaulttheme/splitter{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
    root.background_normal = 'atlas://data/images/defaulttheme/splitter{}{}'.format('_disabled' if root.disabled else '', root.horizontal)

    '''Line 81: <SplitterStrip> @ background_down: 'atlas://data/images/defaulttheme/splitter_down{}{}'.format('_disabled' if self.disabled else '', self.horizontal) '''
    root.background_down = 'atlas://data/images/defaulttheme/splitter_down{}{}'.format('_disabled' if root.disabled else '', root.horizontal)

    '''Line 83: <SplitterStrip> -> Image @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 84: <SplitterStrip> -> Image @ size: root.size '''
    w1.size = root.size

    '''Line 86: <SplitterStrip> -> Image @ source: 'atlas://data/images/defaulttheme/splitter_grip' + root.horizontal '''
    w1.source = 'atlas://data/images/defaulttheme/splitter_grip' + root.horizontal

    return (w1, )


def __h39_matrix(g2, root, *args):
    '''Line 92: <Scatter> -> MatrixInstruction @ matrix: self.transform '''
    root = root.__self__
    g2.matrix = root.transform


# <Scatter> L88
def __r7(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __add_root_canvas_before = root.canvas.before.add

    '''Line 90: <Scatter> -> PushMatrix'''
    g1 = Factory.PushMatrix()
    __add_root_canvas_before(g1)

    '''Line 91: <Scatter> -> MatrixInstruction'''
    g2 = Factory.MatrixInstruction()
    __add_root_canvas_before(g2)

    '''Line 94: <Scatter> -> PopMatrix'''
    g3 = Factory.PopMatrix()
    root.canvas.after.add(g3)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b7(app, g1, g2, g3, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b7, app, g1, g2, g3, root))

def __b7(app, g1, g2, g3, root):
    __ref_root = root.proxy_ref

    '''Line 92: <Scatter> -> MatrixInstruction @ matrix: self.transform '''
    __delayed___h39_matrix = [__h39_matrix, g2.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h39_matrix, None, None)

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_root, "transform", root.fast_bind("transform", __delayed_call_fn, __delayed___h39_matrix), __delayed_call_fn, (__delayed___h39_matrix, )]
    __handlers[g2.uid].append((__bound, (0, )))

    return tuple


def __h40_xy(g2, root, *args):
    '''Line 101: <RelativeLayout> -> Translate @ xy: self.pos '''
    root = root.__self__
    g2.xy = root.pos


# <RelativeLayout> L97
def __r8(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __add_root_canvas_before = root.canvas.before.add

    '''Line 99: <RelativeLayout> -> PushMatrix'''
    g1 = Factory.PushMatrix()
    __add_root_canvas_before(g1)

    '''Line 100: <RelativeLayout> -> Translate'''
    g2 = Factory.Translate()
    __add_root_canvas_before(g2)

    '''Line 103: <RelativeLayout> -> PopMatrix'''
    g3 = Factory.PopMatrix()
    root.canvas.after.add(g3)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b8(app, g1, g2, g3, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b8, app, g1, g2, g3, root))

def __b8(app, g1, g2, g3, root):
    __ref_root = root.proxy_ref

    '''Line 101: <RelativeLayout> -> Translate @ xy: self.pos '''
    __delayed___h40_xy = [__h40_xy, g2.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h40_xy, None, None)

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_root, "pos", root.fast_bind("pos", __delayed_call_fn, __delayed___h40_xy), __delayed_call_fn, (__delayed___h40_xy, )]
    __handlers[g2.uid].append((__bound, (0, )))

    return tuple


def __h41_rgba(g1, root, *args):
    '''Line 108: <Image,AsyncImage> -> Color @ rgba: self.color '''
    root = root.__self__
    g1.rgba = root.color

def __h42_texture(g2, root, *args):
    '''Line 110: <Image,AsyncImage> -> Rectangle @ texture: self.texture '''
    root = root.__self__
    g2.texture = root.texture

def __h43_size(g2, root, *args):
    '''Line 111: <Image,AsyncImage> -> Rectangle @ size: self.norm_image_size '''
    root = root.__self__
    g2.size = root.norm_image_size

def __h44_pos(g2, root, *args):
    '''Line 112: <Image,AsyncImage> -> Rectangle @ pos: self.center_x - self.norm_image_size[0] / 2., self.center_y - self.norm_image_size[1] / 2. '''
    root = root.__self__
    g2.pos = root.center_x - root.norm_image_size[0] / 2., root.center_y - root.norm_image_size[1] / 2.


# <Image,AsyncImage> L105
def __r9(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __add_root_canvas_root = root.canvas.add

    '''Line 107: <Image,AsyncImage> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 109: <Image,AsyncImage> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_root(g2)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b9(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b9, app, g1, g2, root))

def __b9(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 108: <Image,AsyncImage> -> Color @ rgba: self.color '''
    __delayed___h41_rgba = [__h41_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h41_rgba, None, None)

    '''Line 110: <Image,AsyncImage> -> Rectangle @ texture: self.texture '''
    __delayed___h42_texture = [__h42_texture, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h42_texture, None, None)

    '''Line 111: <Image,AsyncImage> -> Rectangle @ size: self.norm_image_size '''
    __delayed___h43_size = [__h43_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h43_size, None, None)

    '''Line 112: <Image,AsyncImage> -> Rectangle @ pos: self.center_x - self.norm_image_size[0] / 2., self.center_y - self.norm_image_size[1] / 2. '''
    __delayed___h44_pos = [__h44_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h44_pos, None, None)

    __bound = [None, ] * 6
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "color", __bind_root("color", __delayed_call_fn, __delayed___h41_rgba), __delayed_call_fn, (__delayed___h41_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "texture", __bind_root("texture", __delayed_call_fn, __delayed___h42_texture), __delayed_call_fn, (__delayed___h42_texture, )]
    __bound[2] = [None, None, None, __ref_root, "norm_image_size", __bind_root("norm_image_size", __delayed_call_fn, __delayed___h43_size), __delayed_call_fn, (__delayed___h43_size, )]
    __bound[3] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h44_pos), __delayed_call_fn, (__delayed___h44_pos, )]
    __bound[4] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h44_pos), __delayed_call_fn, (__delayed___h44_pos, )]
    __bound[5] = [None, None, None, __ref_root, "norm_image_size", __bind_root("norm_image_size", __delayed_call_fn, __delayed___h44_pos), __delayed_call_fn, (__delayed___h44_pos, )]
    __handlers[g2.uid].append((__bound, (1, 2, 3, 4, 5)))
    __handlers[g1.uid].append((__bound, (0, )))

    return tuple


def __h45_xy(g1, root, *args):
    '''Line 117: <EffectWidget> -> Translate @ xy: -self.x, -self.y '''
    root = root.__self__
    g1.xy = -root.x, -root.y

def __h46_texture(g3, root, *args):
    '''Line 122: <EffectWidget> -> Rectangle @ texture: self.texture '''
    root = root.__self__
    g3.texture = root.texture

def __h47_pos(g3, root, *args):
    '''Line 123: <EffectWidget> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g3.pos = root.pos

def __h48_size(g3, root, *args):
    '''Line 124: <EffectWidget> -> Rectangle @ size: self.size '''
    root = root.__self__
    g3.size = root.size


# <EffectWidget> L114
def __r10(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 116: <EffectWidget> -> Translate'''
    g1 = Factory.Translate()
    root.canvas.before.add(g1)

    '''Line 119: <EffectWidget> -> Color'''
    g2 = Factory.Color()
    __add_root_canvas_root(g2)

    '''Line 121: <EffectWidget> -> Rectangle'''
    g3 = Factory.Rectangle()
    __add_root_canvas_root(g3)

    '''Line 120: <EffectWidget> -> Color @ rgba: 1, 1, 1, 1 '''
    g2.rgba = 1, 1, 1, 1

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b10(app, g1, g2, g3, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b10, app, g1, g2, g3, root))

def __b10(app, g1, g2, g3, root):
    __ref_g3 = g3.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 117: <EffectWidget> -> Translate @ xy: -self.x, -self.y '''
    __delayed___h45_xy = [__h45_xy, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h45_xy, None, None)

    '''Line 122: <EffectWidget> -> Rectangle @ texture: self.texture '''
    __delayed___h46_texture = [__h46_texture, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h46_texture, None, None)

    '''Line 123: <EffectWidget> -> Rectangle @ pos: self.pos '''
    __delayed___h47_pos = [__h47_pos, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h47_pos, None, None)

    '''Line 124: <EffectWidget> -> Rectangle @ size: self.size '''
    __delayed___h48_size = [__h48_size, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h48_size, None, None)

    __bound = [None, ] * 5
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h45_xy), __delayed_call_fn, (__delayed___h45_xy, )]
    __bound[1] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h45_xy), __delayed_call_fn, (__delayed___h45_xy, )]
    __bound[2] = [None, None, None, __ref_root, "texture", __bind_root("texture", __delayed_call_fn, __delayed___h46_texture), __delayed_call_fn, (__delayed___h46_texture, )]
    __bound[3] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h47_pos), __delayed_call_fn, (__delayed___h47_pos, )]
    __bound[4] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h48_size), __delayed_call_fn, (__delayed___h48_size, )]
    __handlers[g3.uid].append((__bound, (2, 3, 4)))
    __handlers[g1.uid].append((__bound, (0, 1)))

    return tuple


def __h49_rgba(g1, root, *args):
    '''Line 131: <TabbedPanelContent> -> Color @ rgba: self.parent.background_color if self.parent else (1, 1, 1, 1) '''
    root = root.__self__
    g1.rgba = root.parent.background_color if root.parent else (1, 1, 1, 1)

def __h50_border(g2, root, *args):
    '''Line 133: <TabbedPanelContent> -> BorderImage @ border: self.parent.border if self.parent else (16, 16, 16, 16) '''
    root = root.__self__
    g2.border = root.parent.border if root.parent else (16, 16, 16, 16)

def __h51_source(g2, root, *args):
    '''Line 134: <TabbedPanelContent> -> BorderImage @ source: (root.parent.background_disabled_image if self.disabled else root.parent.background_image) if root.parent else None '''
    root = root.__self__
    g2.source = (root.parent.background_disabled_image if root.disabled else root.parent.background_image) if root.parent else None

def __h52_size(g2, root, *args):
    '''Line 135: <TabbedPanelContent> -> BorderImage @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h53_pos(g2, root, *args):
    '''Line 136: <TabbedPanelContent> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos


# <TabbedPanelContent> L126
__mc[11] = set()
def __r11(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 130: <TabbedPanelContent> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 132: <TabbedPanelContent> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_root(g2)

    if root.__class__ not in __mc[11]:
        __create_property_root = root.create_property
        '''Line 127: <TabbedPanelContent> @ rows: 1 '''
        if not hasattr(root, "rows"):
            __create_property_root("rows", (1))
        '''Line 128: <TabbedPanelContent> @ padding: 3 '''
        if not hasattr(root, "padding"):
            __create_property_root("padding", (3))

        __mc[11].add(root.__class__)

    '''Line 127: <TabbedPanelContent> @ rows: 1 '''
    root.rows = 1

    '''Line 128: <TabbedPanelContent> @ padding: 3 '''
    root.padding = 3

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b11(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b11, app, g1, g2, root))

def __b11(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 131: <TabbedPanelContent> -> Color @ rgba: self.parent.background_color if self.parent else (1, 1, 1, 1) '''
    __delayed___h49_rgba = [__h49_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h49_rgba, None, None)

    '''Line 133: <TabbedPanelContent> -> BorderImage @ border: self.parent.border if self.parent else (16, 16, 16, 16) '''
    __delayed___h50_border = [__h50_border, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h50_border, None, None)

    '''Line 134: <TabbedPanelContent> -> BorderImage @ source: (root.parent.background_disabled_image if self.disabled else root.parent.background_image) if root.parent else None '''
    __delayed___h51_source = [__h51_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h51_source, None, None)

    '''Line 135: <TabbedPanelContent> -> BorderImage @ size: self.size '''
    __delayed___h52_size = [__h52_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h52_size, None, None)

    '''Line 136: <TabbedPanelContent> -> BorderImage @ pos: self.pos '''
    __delayed___h53_pos = [__h53_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h53_pos, None, None)

    __bound = [None, ] * 11
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h49_rgba), __delayed_call_fn, (__delayed___h49_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h50_border), __delayed_call_fn, (__delayed___h50_border, )]
    __bound[2] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h51_source), __delayed_call_fn, (__delayed___h51_source, )]
    __bound[3] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h51_source), __delayed_call_fn, (__delayed___h51_source, )]
    __bound[4] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h52_size), __delayed_call_fn, (__delayed___h52_size, )]
    __bound[5] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h53_pos), __delayed_call_fn, (__delayed___h53_pos, )]
    if root.rebind_property("parent"):
        __bound[6] = [7, 11, None, __ref_root, "parent", __bind_root("parent", __rebind_callback, __bound, 6), __rebind_callback, (__bound, 6)]

    obj_root_parent = root.parent
    if obj_root_parent is not None and isinstance(obj_root_parent, (__EventDispatcher, __Observable)):
        __ref_obj_root_parent = obj_root_parent.proxy_ref
        __bind_obj_root_parent = obj_root_parent.fast_bind
        __bound[7] = [None, None, 6, __ref_obj_root_parent, "background_color", __bind_obj_root_parent("background_color", __delayed_call_fn, __delayed___h49_rgba), __delayed_call_fn, (__delayed___h49_rgba, )]
        __bound[8] = [None, None, 6, __ref_obj_root_parent, "border", __bind_obj_root_parent("border", __delayed_call_fn, __delayed___h50_border), __delayed_call_fn, (__delayed___h50_border, )]
        __bound[9] = [None, None, 6, __ref_obj_root_parent, "background_image", __bind_obj_root_parent("background_image", __delayed_call_fn, __delayed___h51_source), __delayed_call_fn, (__delayed___h51_source, )]
        __bound[10] = [None, None, 6, __ref_obj_root_parent, "background_disabled_image", __bind_obj_root_parent("background_disabled_image", __delayed_call_fn, __delayed___h51_source), __delayed_call_fn, (__delayed___h51_source, )]
    if __bound[6] is not None and __bound[7] is None:
        __bound[7] = [None, None, 6, None, "background_color", None, __delayed_call_fn, (__delayed___h49_rgba, )]
        __bound[8] = [None, None, 6, None, "border", None, __delayed_call_fn, (__delayed___h50_border, )]
        __bound[9] = [None, None, 6, None, "background_image", None, __delayed_call_fn, (__delayed___h51_source, )]
        __bound[10] = [None, None, 6, None, "background_disabled_image", None, __delayed_call_fn, (__delayed___h51_source, )]
    __handlers[g2.uid].append((__bound, (1, 2, 3, 4, 5, 8, 9, 10)))
    __handlers[g1.uid].append((__bound, (0, 7)))

    return tuple


# <TabbedPanelStrip> L138
__mc[12] = set()
def __r12(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[12]:
        '''Line 139: <TabbedPanelStrip> @ rows: 1 '''
        if not hasattr(root, "rows"):
            root.create_property("rows", (1))

        __mc[12].add(root.__class__)

    '''Line 139: <TabbedPanelStrip> @ rows: 1 '''
    root.rows = 1


def __h54_pos(g1, root, *args):
    '''Line 145: <StripLayout> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g1.pos = root.pos

def __h55_size(g1, root, *args):
    '''Line 146: <StripLayout> -> BorderImage @ size: self.size '''
    root = root.__self__
    g1.size = root.size

def __h56_border(g1, root, *args):
    '''Line 147: <StripLayout> -> BorderImage @ border: root.border '''
    root = root.__self__
    g1.border = root.border

def __h57_source(g1, root, *args):
    '''Line 148: <StripLayout> -> BorderImage @ source: root.background_image '''
    root = root.__self__
    g1.source = root.background_image


# <StripLayout> L141
__mc[13] = set()
def __r13(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 144: <StripLayout> -> BorderImage'''
    g1 = Factory.BorderImage()
    root.canvas.before.add(g1)

    if root.__class__ not in __mc[13]:
        '''Line 142: <StripLayout> @ padding: '2dp', '2dp', '2dp', '2dp' '''
        if not hasattr(root, "padding"):
            root.create_property("padding", ('2dp', '2dp', '2dp', '2dp'))

        __mc[13].add(root.__class__)

    '''Line 142: <StripLayout> @ padding: '2dp', '2dp', '2dp', '2dp' '''
    root.padding = '2dp', '2dp', '2dp', '2dp'

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b13(app, g1, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b13, app, g1, root))

def __b13(app, g1, root):
    __ref_g1 = g1.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 145: <StripLayout> -> BorderImage @ pos: self.pos '''
    __delayed___h54_pos = [__h54_pos, __ref_g1, __ref_root, None]
    __delayed_call_fn(__delayed___h54_pos, None, None)

    '''Line 146: <StripLayout> -> BorderImage @ size: self.size '''
    __delayed___h55_size = [__h55_size, __ref_g1, __ref_root, None]
    __delayed_call_fn(__delayed___h55_size, None, None)

    '''Line 147: <StripLayout> -> BorderImage @ border: root.border '''
    __delayed___h56_border = [__h56_border, __ref_g1, __ref_root, None]
    __delayed_call_fn(__delayed___h56_border, None, None)

    '''Line 148: <StripLayout> -> BorderImage @ source: root.background_image '''
    __delayed___h57_source = [__h57_source, __ref_g1, __ref_root, None]
    __delayed_call_fn(__delayed___h57_source, None, None)

    __bound = [None, ] * 4
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h54_pos), __delayed_call_fn, (__delayed___h54_pos, )]
    __bound[1] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h55_size), __delayed_call_fn, (__delayed___h55_size, )]
    __bound[2] = [None, None, None, __ref_root, "border", __bind_root("border", __delayed_call_fn, __delayed___h56_border), __delayed_call_fn, (__delayed___h56_border, )]
    __bound[3] = [None, None, None, __ref_root, "background_image", __bind_root("background_image", __delayed_call_fn, __delayed___h57_source), __delayed_call_fn, (__delayed___h57_source, )]
    __handlers[g1.uid].append((__bound, (0, 1, 2, 3)))

    return tuple


# <TabbedPanelHeader> L150
__mc[14] = set()
def __r14(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[14]:
        __create_property_root = root.create_property
        '''Line 151: <TabbedPanelHeader> @ halign: 'center' '''
        if not hasattr(root, "halign"):
            __create_property_root("halign", ('center'))
        '''Line 152: <TabbedPanelHeader> @ valign: 'middle' '''
        if not hasattr(root, "valign"):
            __create_property_root("valign", ('middle'))
        '''Line 153: <TabbedPanelHeader> @ background_normal: 'atlas://data/images/defaulttheme/tab_btn' '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", ('atlas://data/images/defaulttheme/tab_btn'))
        '''Line 154: <TabbedPanelHeader> @ background_disabled_normal: 'atlas://data/images/defaulttheme/tab_btn_disabled' '''
        if not hasattr(root, "background_disabled_normal"):
            __create_property_root("background_disabled_normal", ('atlas://data/images/defaulttheme/tab_btn_disabled'))
        '''Line 155: <TabbedPanelHeader> @ background_down: 'atlas://data/images/defaulttheme/tab_btn_pressed' '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", ('atlas://data/images/defaulttheme/tab_btn_pressed'))
        '''Line 156: <TabbedPanelHeader> @ background_disabled_down: 'atlas://data/images/defaulttheme/tab_btn_pressed' '''
        if not hasattr(root, "background_disabled_down"):
            __create_property_root("background_disabled_down", ('atlas://data/images/defaulttheme/tab_btn_pressed'))
        '''Line 157: <TabbedPanelHeader> @ border: (8, 8, 8, 8) '''
        if not hasattr(root, "border"):
            __create_property_root("border", ((8, 8, 8, 8)))
        '''Line 158: <TabbedPanelHeader> @ font_size: '15sp' '''
        if not hasattr(root, "font_size"):
            __create_property_root("font_size", ('15sp'))

        __mc[14].add(root.__class__)

    '''Line 151: <TabbedPanelHeader> @ halign: 'center' '''
    root.halign = 'center'

    '''Line 152: <TabbedPanelHeader> @ valign: 'middle' '''
    root.valign = 'middle'

    '''Line 153: <TabbedPanelHeader> @ background_normal: 'atlas://data/images/defaulttheme/tab_btn' '''
    root.background_normal = 'atlas://data/images/defaulttheme/tab_btn'

    '''Line 154: <TabbedPanelHeader> @ background_disabled_normal: 'atlas://data/images/defaulttheme/tab_btn_disabled' '''
    root.background_disabled_normal = 'atlas://data/images/defaulttheme/tab_btn_disabled'

    '''Line 155: <TabbedPanelHeader> @ background_down: 'atlas://data/images/defaulttheme/tab_btn_pressed' '''
    root.background_down = 'atlas://data/images/defaulttheme/tab_btn_pressed'

    '''Line 156: <TabbedPanelHeader> @ background_disabled_down: 'atlas://data/images/defaulttheme/tab_btn_pressed' '''
    root.background_disabled_down = 'atlas://data/images/defaulttheme/tab_btn_pressed'

    '''Line 157: <TabbedPanelHeader> @ border: (8, 8, 8, 8) '''
    root.border = (8, 8, 8, 8)

    '''Line 158: <TabbedPanelHeader> @ font_size: '15sp' '''
    root.font_size = '15sp'


# <Selector> L160
__mc[15] = set()
def __r15(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[15]:
        '''Line 161: <Selector> @ allow_stretch: True '''
        if not hasattr(root, "allow_stretch"):
            root.create_property("allow_stretch", (None))

        __mc[15].add(root.__class__)

    '''Line 161: <Selector> @ allow_stretch: True '''
    root.allow_stretch = True


def __h58_rgba(g1, root, *args):
    '''Line 166: <TextInput> -> Color @ rgba: self.background_color '''
    root = root.__self__
    g1.rgba = root.background_color

def __h59_border(g2, root, *args):
    '''Line 168: <TextInput> -> BorderImage @ border: self.border '''
    root = root.__self__
    g2.border = root.border

def __h60_pos(g2, root, *args):
    '''Line 169: <TextInput> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h61_size(g2, root, *args):
    '''Line 170: <TextInput> -> BorderImage @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h62_source(g2, root, *args):
    '''Line 171: <TextInput> -> BorderImage @ source: (self.background_disabled_active if self.disabled else self.background_active) if self.focus else (self.background_disabled_normal if self.disabled else self.background_normal) '''
    root = root.__self__
    g2.source = (root.background_disabled_active if root.disabled else root.background_active) if root.focus else (root.background_disabled_normal if root.disabled else root.background_normal)

def __h63_rgba(g3, root, *args):
    '''Line 173: <TextInput> -> Color @ rgba: (self.cursor_color if self.focus and not self.cursor_blink else (0, 0, 0, 0)) '''
    root = root.__self__
    g3.rgba = (root.cursor_color if root.focus and not root.cursor_blink else (0, 0, 0, 0))

def __h64_pos(g4, root, *args):
    '''Line 175: <TextInput> -> Rectangle @ pos: [int(x) for x in self.cursor_pos] '''
    root = root.__self__
    g4.pos = [int(x) for x in root.cursor_pos]

def __h65_size(g4, root, *args):
    '''Line 176: <TextInput> -> Rectangle @ size: 1, -self.line_height '''
    root = root.__self__
    g4.size = 1, -root.line_height

def __h66_rgba(g5, root, *args):
    '''Line 178: <TextInput> -> Color @ rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text and not self.focus else self.foreground_color) '''
    root = root.__self__
    g5.rgba = root.disabled_foreground_color if root.disabled else (root.hint_text_color if not root.text and not root.focus else root.foreground_color)


# <TextInput> L163
def __r16(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __cls_Color = Factory.Color

    __add_root_canvas_before = root.canvas.before.add

    '''Line 165: <TextInput> -> Color'''
    g1 = __cls_Color()
    __add_root_canvas_before(g1)

    '''Line 167: <TextInput> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_before(g2)

    '''Line 172: <TextInput> -> Color'''
    g3 = __cls_Color()
    __add_root_canvas_before(g3)

    '''Line 174: <TextInput> -> Rectangle'''
    g4 = Factory.Rectangle()
    __add_root_canvas_before(g4)

    '''Line 177: <TextInput> -> Color'''
    g5 = __cls_Color()
    __add_root_canvas_before(g5)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b16(app, g1, g2, g3, g4, g5, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b16, app, g1, g2, g3, g4, g5, root))

def __b16(app, g1, g2, g3, g4, g5, root):
    __ref_g2 = g2.proxy_ref
    __ref_g4 = g4.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 166: <TextInput> -> Color @ rgba: self.background_color '''
    __delayed___h58_rgba = [__h58_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h58_rgba, None, None)

    '''Line 168: <TextInput> -> BorderImage @ border: self.border '''
    __delayed___h59_border = [__h59_border, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h59_border, None, None)

    '''Line 169: <TextInput> -> BorderImage @ pos: self.pos '''
    __delayed___h60_pos = [__h60_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h60_pos, None, None)

    '''Line 170: <TextInput> -> BorderImage @ size: self.size '''
    __delayed___h61_size = [__h61_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h61_size, None, None)

    '''Line 171: <TextInput> -> BorderImage @ source: (self.background_disabled_active if self.disabled else self.background_active) if self.focus else (self.background_disabled_normal if self.disabled else self.background_normal) '''
    __delayed___h62_source = [__h62_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h62_source, None, None)

    '''Line 173: <TextInput> -> Color @ rgba: (self.cursor_color if self.focus and not self.cursor_blink else (0, 0, 0, 0)) '''
    __delayed___h63_rgba = [__h63_rgba, g3.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h63_rgba, None, None)

    '''Line 175: <TextInput> -> Rectangle @ pos: [int(x) for x in self.cursor_pos] '''
    __delayed___h64_pos = [__h64_pos, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h64_pos, None, None)

    '''Line 176: <TextInput> -> Rectangle @ size: 1, -self.line_height '''
    __delayed___h65_size = [__h65_size, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h65_size, None, None)

    '''Line 178: <TextInput> -> Color @ rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text and not self.focus else self.foreground_color) '''
    __delayed___h66_rgba = [__h66_rgba, g5.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h66_rgba, None, None)

    __bound = [None, ] * 21
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "background_color", __bind_root("background_color", __delayed_call_fn, __delayed___h58_rgba), __delayed_call_fn, (__delayed___h58_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "border", __bind_root("border", __delayed_call_fn, __delayed___h59_border), __delayed_call_fn, (__delayed___h59_border, )]
    __bound[2] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h60_pos), __delayed_call_fn, (__delayed___h60_pos, )]
    __bound[3] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h61_size), __delayed_call_fn, (__delayed___h61_size, )]
    __bound[4] = [None, None, None, __ref_root, "background_disabled_normal", __bind_root("background_disabled_normal", __delayed_call_fn, __delayed___h62_source), __delayed_call_fn, (__delayed___h62_source, )]
    __bound[5] = [None, None, None, __ref_root, "background_active", __bind_root("background_active", __delayed_call_fn, __delayed___h62_source), __delayed_call_fn, (__delayed___h62_source, )]
    __bound[6] = [None, None, None, __ref_root, "background_normal", __bind_root("background_normal", __delayed_call_fn, __delayed___h62_source), __delayed_call_fn, (__delayed___h62_source, )]
    __bound[7] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h62_source), __delayed_call_fn, (__delayed___h62_source, )]
    __bound[8] = [None, None, None, __ref_root, "focus", __bind_root("focus", __delayed_call_fn, __delayed___h62_source), __delayed_call_fn, (__delayed___h62_source, )]
    __bound[9] = [None, None, None, __ref_root, "background_disabled_active", __bind_root("background_disabled_active", __delayed_call_fn, __delayed___h62_source), __delayed_call_fn, (__delayed___h62_source, )]
    __bound[10] = [None, None, None, __ref_root, "cursor_blink", __bind_root("cursor_blink", __delayed_call_fn, __delayed___h63_rgba), __delayed_call_fn, (__delayed___h63_rgba, )]
    __bound[11] = [None, None, None, __ref_root, "focus", __bind_root("focus", __delayed_call_fn, __delayed___h63_rgba), __delayed_call_fn, (__delayed___h63_rgba, )]
    __bound[12] = [None, None, None, __ref_root, "cursor_color", __bind_root("cursor_color", __delayed_call_fn, __delayed___h63_rgba), __delayed_call_fn, (__delayed___h63_rgba, )]
    __bound[13] = [None, None, None, __ref_root, "cursor_pos", __bind_root("cursor_pos", __delayed_call_fn, __delayed___h64_pos), __delayed_call_fn, (__delayed___h64_pos, )]
    __bound[14] = [None, None, None, __ref_root, "line_height", __bind_root("line_height", __delayed_call_fn, __delayed___h65_size), __delayed_call_fn, (__delayed___h65_size, )]
    __bound[15] = [None, None, None, __ref_root, "text", __bind_root("text", __delayed_call_fn, __delayed___h66_rgba), __delayed_call_fn, (__delayed___h66_rgba, )]
    __bound[16] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __delayed_call_fn, __delayed___h66_rgba), __delayed_call_fn, (__delayed___h66_rgba, )]
    __bound[17] = [None, None, None, __ref_root, "hint_text_color", __bind_root("hint_text_color", __delayed_call_fn, __delayed___h66_rgba), __delayed_call_fn, (__delayed___h66_rgba, )]
    __bound[18] = [None, None, None, __ref_root, "disabled_foreground_color", __bind_root("disabled_foreground_color", __delayed_call_fn, __delayed___h66_rgba), __delayed_call_fn, (__delayed___h66_rgba, )]
    __bound[19] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h66_rgba), __delayed_call_fn, (__delayed___h66_rgba, )]
    __bound[20] = [None, None, None, __ref_root, "focus", __bind_root("focus", __delayed_call_fn, __delayed___h66_rgba), __delayed_call_fn, (__delayed___h66_rgba, )]
    __handlers[g5.uid].append((__bound, (15, 16, 17, 18, 19, 20)))
    __handlers[g4.uid].append((__bound, (13, 14)))
    __handlers[g3.uid].append((__bound, (10, 11, 12)))
    __handlers[g2.uid].append((__bound, (1, 2, 3, 4, 5, 6, 7, 8, 9)))
    __handlers[g1.uid].append((__bound, (0, )))

    return tuple


def __h67_but_cut(root, w1_cut, *args):
    '''Line 181: <TextInputCutCopyPaste> @ but_cut: cut.__self__ '''
    w1_cut = w1_cut.__self__
    root.but_cut = w1_cut.__self__

def __h68_but_copy(root, w2_copy, *args):
    '''Line 182: <TextInputCutCopyPaste> @ but_copy: copy.__self__ '''
    w2_copy = w2_copy.__self__
    root.but_copy = w2_copy.__self__

def __h69_but_paste(root, w3_paste, *args):
    '''Line 183: <TextInputCutCopyPaste> @ but_paste: paste.__self__ '''
    w3_paste = w3_paste.__self__
    root.but_paste = w3_paste.__self__

def __h70_but_selectall(root, w4_selectall, *args):
    '''Line 184: <TextInputCutCopyPaste> @ but_selectall: selectall.__self__ '''
    w4_selectall = w4_selectall.__self__
    root.but_selectall = w4_selectall.__self__

def __h0_on_release(root, *args):
    '''Line 191: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('cut') '''
    root = root.__self__
    root.do('cut')

def __h1_on_release(root, *args):
    '''Line 195: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('copy') '''
    root = root.__self__
    root.do('copy')

def __h2_on_release(root, *args):
    '''Line 199: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('paste') '''
    root = root.__self__
    root.do('paste')

def __h3_on_release(root, *args):
    '''Line 203: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('selectall') '''
    root = root.__self__
    root.do('selectall')


# <TextInputCutCopyPaste> L180
__mc[17] = set()
def __r17(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_BubbleButton = Factory.BubbleButton

    '''Line 188: <TextInputCutCopyPaste> -> BubbleButton'''
    w1_cut = __cls_BubbleButton(parent=root, __builder_created=__bfuncs)

    '''Line 192: <TextInputCutCopyPaste> -> BubbleButton'''
    w2_copy = __cls_BubbleButton(parent=root, __builder_created=__bfuncs)

    '''Line 196: <TextInputCutCopyPaste> -> BubbleButton'''
    w3_paste = __cls_BubbleButton(parent=root, __builder_created=__bfuncs)

    '''Line 200: <TextInputCutCopyPaste> -> BubbleButton'''
    w4_selectall = __cls_BubbleButton(parent=root, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["cut"] = w1_cut.proxy_ref
    __ids["copy"] = w2_copy.proxy_ref
    __ids["paste"] = w3_paste.proxy_ref
    __ids["selectall"] = w4_selectall.proxy_ref

    if root.__class__ not in __mc[17]:
        __create_property_root = root.create_property
        '''Line 181: <TextInputCutCopyPaste> @ but_cut: cut.__self__ '''
        if not hasattr(root, "but_cut"):
            __create_property_root("but_cut", (None))
        '''Line 182: <TextInputCutCopyPaste> @ but_copy: copy.__self__ '''
        if not hasattr(root, "but_copy"):
            __create_property_root("but_copy", (None))
        '''Line 183: <TextInputCutCopyPaste> @ but_paste: paste.__self__ '''
        if not hasattr(root, "but_paste"):
            __create_property_root("but_paste", (None))
        '''Line 184: <TextInputCutCopyPaste> @ but_selectall: selectall.__self__ '''
        if not hasattr(root, "but_selectall"):
            __create_property_root("but_selectall", (None))
        '''Line 186: <TextInputCutCopyPaste> @ size_hint: None, None '''
        if not hasattr(root, "size_hint"):
            __create_property_root("size_hint", (None))
        '''Line 187: <TextInputCutCopyPaste> @ size: '150sp', '50sp' '''
        if not hasattr(root, "size"):
            __create_property_root("size", ('150sp', '50sp'))

        '''Line 190: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Cut' '''
        if not hasattr(w1_cut, "text"):
            w1_cut.create_property("text", ('Cut'))

        '''Line 194: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Copy' '''
        if not hasattr(w2_copy, "text"):
            w2_copy.create_property("text", ('Copy'))

        '''Line 198: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Paste' '''
        if not hasattr(w3_paste, "text"):
            w3_paste.create_property("text", ('Paste'))

        '''Line 202: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Select All' '''
        if not hasattr(w4_selectall, "text"):
            w4_selectall.create_property("text", ('Select All'))

        __mc[17].add(root.__class__)

    __on_init = [None, ] * 4

    '''Line 191: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('cut') '''
    __prop = w1_cut.property("release", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(w1_cut), None]

    '''Line 195: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('copy') '''
    __prop = w2_copy.property("release", quiet=True)
    if __prop is not None:
        __on_init[1] = [__prop, __prop.dispatch_count(w2_copy), None]

    '''Line 199: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('paste') '''
    __prop = w3_paste.property("release", quiet=True)
    if __prop is not None:
        __on_init[2] = [__prop, __prop.dispatch_count(w3_paste), None]

    '''Line 203: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('selectall') '''
    __prop = w4_selectall.property("release", quiet=True)
    if __prop is not None:
        __on_init[3] = [__prop, __prop.dispatch_count(w4_selectall), None]

    '''Line 186: <TextInputCutCopyPaste> @ size_hint: None, None '''
    root.size_hint = None, None

    '''Line 187: <TextInputCutCopyPaste> @ size: '150sp', '50sp' '''
    root.size = '150sp', '50sp'

    '''Line 190: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Cut' '''
    w1_cut.text = 'Cut'

    '''Line 194: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Copy' '''
    w2_copy.text = 'Copy'

    '''Line 198: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Paste' '''
    w3_paste.text = 'Paste'

    '''Line 202: <TextInputCutCopyPaste> -> BubbleButton @ text: 'Select All' '''
    w4_selectall.text = 'Select All'

    '''Line 181: <TextInputCutCopyPaste> @ but_cut: cut.__self__ '''
    root.but_cut = w1_cut.__self__

    '''Line 182: <TextInputCutCopyPaste> @ but_copy: copy.__self__ '''
    root.but_copy = w2_copy.__self__

    '''Line 183: <TextInputCutCopyPaste> @ but_paste: paste.__self__ '''
    root.but_paste = w3_paste.__self__

    '''Line 184: <TextInputCutCopyPaste> @ but_selectall: selectall.__self__ '''
    root.but_selectall = w4_selectall.__self__

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b17(app, root, w1_cut, w2_copy, w3_paste, w4_selectall, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b17, app, root, w1_cut, w2_copy, w3_paste, w4_selectall, __on_init))

def __b17(app, root, w1_cut, w2_copy, w3_paste, w4_selectall, __on_init):
    __ref_root = root.proxy_ref
    __ref_w1_cut = w1_cut.proxy_ref
    __ref_w2_copy = w2_copy.proxy_ref
    __ref_w3_paste = w3_paste.proxy_ref
    __ref_w4_selectall = w4_selectall.proxy_ref

    __bound = [None, ] * 1
    __bind_w1_cut = w1_cut.fast_bind
    __bound[0] = [None, None, None, __ref_w1_cut, "__self__", __bind_w1_cut("__self__", __h67_but_cut, __ref_root, __ref_w1_cut), __h67_but_cut, [__ref_root, __ref_w1_cut]]
    __handlers[root.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bind_w2_copy = w2_copy.fast_bind
    __bound[0] = [None, None, None, __ref_w2_copy, "__self__", __bind_w2_copy("__self__", __h68_but_copy, __ref_root, __ref_w2_copy), __h68_but_copy, [__ref_root, __ref_w2_copy]]
    __handlers[root.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bind_w3_paste = w3_paste.fast_bind
    __bound[0] = [None, None, None, __ref_w3_paste, "__self__", __bind_w3_paste("__self__", __h69_but_paste, __ref_root, __ref_w3_paste), __h69_but_paste, [__ref_root, __ref_w3_paste]]
    __handlers[root.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bind_w4_selectall = w4_selectall.fast_bind
    __bound[0] = [None, None, None, __ref_w4_selectall, "__self__", __bind_w4_selectall("__self__", __h70_but_selectall, __ref_root, __ref_w4_selectall), __h70_but_selectall, [__ref_root, __ref_w4_selectall]]
    __handlers[root.uid].append((__bound, (0, )))

    '''Line 191: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('cut') '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        __bind_w1_cut("on_release", __h0_on_release, __ref_root)
    else:
        __bind_w1_cut("release", __h0_on_release, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w1_cut)

    '''Line 195: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('copy') '''
    __prop_init = __on_init[1]
    if __prop_init is None:
        __bind_w2_copy("on_release", __h1_on_release, __ref_root)
    else:
        __bind_w2_copy("release", __h1_on_release, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w2_copy)

    '''Line 199: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('paste') '''
    __prop_init = __on_init[2]
    if __prop_init is None:
        __bind_w3_paste("on_release", __h2_on_release, __ref_root)
    else:
        __bind_w3_paste("release", __h2_on_release, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w3_paste)

    '''Line 203: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('selectall') '''
    __prop_init = __on_init[3]
    if __prop_init is None:
        __bind_w4_selectall("on_release", __h3_on_release, __ref_root)
    else:
        __bind_w4_selectall("release", __h3_on_release, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w4_selectall)

    return __partial(__d17, app, root, w1_cut, w2_copy, w3_paste, w4_selectall, __on_init)

def __d17(app, root, w1_cut, w2_copy, w3_paste, w4_selectall, __on_init):
    args = None, None

    '''Line 181: <TextInputCutCopyPaste> @ but_cut: cut.__self__ '''
    root.but_cut = w1_cut.__self__

    '''Line 182: <TextInputCutCopyPaste> @ but_copy: copy.__self__ '''
    root.but_copy = w2_copy.__self__

    '''Line 183: <TextInputCutCopyPaste> @ but_paste: paste.__self__ '''
    root.but_paste = w3_paste.__self__

    '''Line 184: <TextInputCutCopyPaste> @ but_selectall: selectall.__self__ '''
    root.but_selectall = w4_selectall.__self__

    args = None,

    '''Line 191: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('cut') '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(w1_cut) == e:
            root.do('cut')

    '''Line 195: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('copy') '''
    if __on_init[1] is not None:
        __prop, s, e = __on_init[1]
        if s != e and __prop.dispatch_count(w2_copy) == e:
            root.do('copy')

    '''Line 199: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('paste') '''
    if __on_init[2] is not None:
        __prop, s, e = __on_init[2]
        if s != e and __prop.dispatch_count(w3_paste) == e:
            root.do('paste')

    '''Line 203: <TextInputCutCopyPaste> -> BubbleButton @ on_release: root.do('selectall') '''
    if __on_init[3] is not None:
        __prop, s, e = __on_init[3]
        if s != e and __prop.dispatch_count(w4_selectall) == e:
            root.do('selectall')

    return (w1_cut, w2_copy, w3_paste, w4_selectall)


# <CodeInput> L205
__mc[18] = set()
def __r18(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[18]:
        '''Line 206: <CodeInput> @ font_name: 'data/fonts/RobotoMono-Regular.ttf' '''
        if not hasattr(root, "font_name"):
            root.create_property("font_name", ('data/fonts/RobotoMono-Regular.ttf'))

        __mc[18].add(root.__class__)

    '''Line 206: <CodeInput> @ font_name: 'data/fonts/RobotoMono-Regular.ttf' '''
    root.font_name = 'data/fonts/RobotoMono-Regular.ttf'


def __h71_rgba(g1, root, *args):
    '''Line 212: <TreeViewNode> -> Color @ rgba: self.color_selected if self.is_selected else self.odd_color if self.odd else self.even_color '''
    root = root.__self__
    g1.rgba = root.color_selected if root.is_selected else root.odd_color if root.odd else root.even_color

def __h72_pos(g2, root, *args):
    '''Line 214: <TreeViewNode> -> Rectangle @ pos: [self.parent.x, self.y] if self.parent else [0, 0] '''
    root = root.__self__
    g2.pos = [root.parent.x, root.y] if root.parent else [0, 0]

def __h73_size(g2, root, *args):
    '''Line 215: <TreeViewNode> -> Rectangle @ size: [self.parent.width, self.height] if self.parent else [1, 1] '''
    root = root.__self__
    g2.size = [root.parent.width, root.height] if root.parent else [1, 1]

def __h74_rgba(g3, root, *args):
    '''Line 217: <TreeViewNode> -> Color @ rgba: 1, 1, 1, int(not self.is_leaf) '''
    root = root.__self__
    g3.rgba = 1, 1, 1, int(not root.is_leaf)

def __h75_source(g4, root, *args):
    '''Line 219: <TreeViewNode> -> Rectangle @ source: 'atlas://data/images/defaulttheme/tree_%s' % ('opened' if self.is_open else 'closed') '''
    root = root.__self__
    g4.source = 'atlas://data/images/defaulttheme/tree_%s' % ('opened' if root.is_open else 'closed')

def __h76_pos(g4, root, *args):
    '''Line 221: <TreeViewNode> -> Rectangle @ pos: self.x - 20, self.center_y - 8 '''
    root = root.__self__
    g4.pos = root.x - 20, root.center_y - 8

def __h77_points(g6, root, *args):
    '''Line 226: <TreeViewNode> -> Line @ points: [self.parent.x, self.y, self.parent.right, self.y] if self.parent else [] '''
    root = root.__self__
    g6.points = [root.parent.x, root.y, root.parent.right, root.y] if root.parent else []


# <TreeViewNode> L209
def __r19(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Color = Factory.Color
    __cls_Rectangle = Factory.Rectangle

    __add_root_canvas_before = root.canvas.before.add
    __add_root_canvas_after = root.canvas.after.add

    '''Line 211: <TreeViewNode> -> Color'''
    g1 = __cls_Color()
    __add_root_canvas_before(g1)

    '''Line 213: <TreeViewNode> -> Rectangle'''
    g2 = __cls_Rectangle()
    __add_root_canvas_before(g2)

    '''Line 216: <TreeViewNode> -> Color'''
    g3 = __cls_Color()
    __add_root_canvas_before(g3)

    '''Line 218: <TreeViewNode> -> Rectangle'''
    g4 = __cls_Rectangle()
    __add_root_canvas_before(g4)

    '''Line 223: <TreeViewNode> -> Color'''
    g5 = __cls_Color()
    __add_root_canvas_after(g5)

    '''Line 225: <TreeViewNode> -> Line'''
    g6 = Factory.Line()
    __add_root_canvas_after(g6)

    '''Line 220: <TreeViewNode> -> Rectangle @ size: 16, 16 '''
    g4.size = 16, 16

    '''Line 224: <TreeViewNode> -> Color @ rgba: .5, .5, .5, .2 '''
    g5.rgba = .5, .5, .5, .2

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b19(app, g1, g2, g3, g4, g5, g6, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b19, app, g1, g2, g3, g4, g5, g6, root))

def __b19(app, g1, g2, g3, g4, g5, g6, root):
    __ref_g2 = g2.proxy_ref
    __ref_g4 = g4.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 212: <TreeViewNode> -> Color @ rgba: self.color_selected if self.is_selected else self.odd_color if self.odd else self.even_color '''
    __delayed___h71_rgba = [__h71_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h71_rgba, None, None)

    '''Line 214: <TreeViewNode> -> Rectangle @ pos: [self.parent.x, self.y] if self.parent else [0, 0] '''
    __delayed___h72_pos = [__h72_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h72_pos, None, None)

    '''Line 215: <TreeViewNode> -> Rectangle @ size: [self.parent.width, self.height] if self.parent else [1, 1] '''
    __delayed___h73_size = [__h73_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h73_size, None, None)

    '''Line 217: <TreeViewNode> -> Color @ rgba: 1, 1, 1, int(not self.is_leaf) '''
    __delayed___h74_rgba = [__h74_rgba, g3.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h74_rgba, None, None)

    '''Line 219: <TreeViewNode> -> Rectangle @ source: 'atlas://data/images/defaulttheme/tree_%s' % ('opened' if self.is_open else 'closed') '''
    __delayed___h75_source = [__h75_source, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h75_source, None, None)

    '''Line 221: <TreeViewNode> -> Rectangle @ pos: self.x - 20, self.center_y - 8 '''
    __delayed___h76_pos = [__h76_pos, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h76_pos, None, None)

    '''Line 226: <TreeViewNode> -> Line @ points: [self.parent.x, self.y, self.parent.right, self.y] if self.parent else [] '''
    __delayed___h77_points = [__h77_points, g6.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h77_points, None, None)

    __bound = [None, ] * 20
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "is_selected", __bind_root("is_selected", __delayed_call_fn, __delayed___h71_rgba), __delayed_call_fn, (__delayed___h71_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "odd_color", __bind_root("odd_color", __delayed_call_fn, __delayed___h71_rgba), __delayed_call_fn, (__delayed___h71_rgba, )]
    __bound[2] = [None, None, None, __ref_root, "odd", __bind_root("odd", __delayed_call_fn, __delayed___h71_rgba), __delayed_call_fn, (__delayed___h71_rgba, )]
    __bound[3] = [None, None, None, __ref_root, "color_selected", __bind_root("color_selected", __delayed_call_fn, __delayed___h71_rgba), __delayed_call_fn, (__delayed___h71_rgba, )]
    __bound[4] = [None, None, None, __ref_root, "even_color", __bind_root("even_color", __delayed_call_fn, __delayed___h71_rgba), __delayed_call_fn, (__delayed___h71_rgba, )]
    __bound[5] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h72_pos), __delayed_call_fn, (__delayed___h72_pos, )]
    __bound[6] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h72_pos), __delayed_call_fn, (__delayed___h72_pos, )]
    __bound[7] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h73_size), __delayed_call_fn, (__delayed___h73_size, )]
    __bound[8] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h73_size), __delayed_call_fn, (__delayed___h73_size, )]
    __bound[9] = [None, None, None, __ref_root, "is_leaf", __bind_root("is_leaf", __delayed_call_fn, __delayed___h74_rgba), __delayed_call_fn, (__delayed___h74_rgba, )]
    __bound[10] = [None, None, None, __ref_root, "is_open", __bind_root("is_open", __delayed_call_fn, __delayed___h75_source), __delayed_call_fn, (__delayed___h75_source, )]
    __bound[11] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h76_pos), __delayed_call_fn, (__delayed___h76_pos, )]
    __bound[12] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h76_pos), __delayed_call_fn, (__delayed___h76_pos, )]
    __bound[13] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h77_points), __delayed_call_fn, (__delayed___h77_points, )]
    __bound[14] = [None, None, None, __ref_root, "parent", __bind_root("parent", __delayed_call_fn, __delayed___h77_points), __delayed_call_fn, (__delayed___h77_points, )]
    if root.rebind_property("parent"):
        __bound[15] = [16, 20, None, __ref_root, "parent", __bind_root("parent", __rebind_callback, __bound, 15), __rebind_callback, (__bound, 15)]

    obj_root_parent = root.parent
    if obj_root_parent is not None and isinstance(obj_root_parent, (__EventDispatcher, __Observable)):
        __ref_obj_root_parent = obj_root_parent.proxy_ref
        __bind_obj_root_parent = obj_root_parent.fast_bind
        __bound[16] = [None, None, 15, __ref_obj_root_parent, "x", __bind_obj_root_parent("x", __delayed_call_fn, __delayed___h72_pos), __delayed_call_fn, (__delayed___h72_pos, )]
        __bound[17] = [None, None, 15, __ref_obj_root_parent, "width", __bind_obj_root_parent("width", __delayed_call_fn, __delayed___h73_size), __delayed_call_fn, (__delayed___h73_size, )]
        __bound[18] = [None, None, 15, __ref_obj_root_parent, "x", __bind_obj_root_parent("x", __delayed_call_fn, __delayed___h77_points), __delayed_call_fn, (__delayed___h77_points, )]
        __bound[19] = [None, None, 15, __ref_obj_root_parent, "right", __bind_obj_root_parent("right", __delayed_call_fn, __delayed___h77_points), __delayed_call_fn, (__delayed___h77_points, )]
    if __bound[15] is not None and __bound[16] is None:
        __bound[16] = [None, None, 15, None, "x", None, __delayed_call_fn, (__delayed___h72_pos, )]
        __bound[17] = [None, None, 15, None, "width", None, __delayed_call_fn, (__delayed___h73_size, )]
        __bound[18] = [None, None, 15, None, "x", None, __delayed_call_fn, (__delayed___h77_points, )]
        __bound[19] = [None, None, 15, None, "right", None, __delayed_call_fn, (__delayed___h77_points, )]
    __handlers[g6.uid].append((__bound, (13, 14, 18, 19)))
    __handlers[g4.uid].append((__bound, (10, 11, 12)))
    __handlers[g3.uid].append((__bound, (9, )))
    __handlers[g2.uid].append((__bound, (5, 6, 7, 8, 16, 17)))
    __handlers[g1.uid].append((__bound, (0, 1, 2, 3, 4)))

    return tuple


def __h78_width(root, *args):
    '''Line 230: <TreeViewLabel> @ width: self.texture_size[0] '''
    root = root.__self__
    root.width = root.texture_size[0]

def __h79_height(root, *args):
    '''Line 231: <TreeViewLabel> @ height: max(self.texture_size[1] + dp(10), dp(24)) '''
    root = root.__self__
    root.height = max(root.texture_size[1] + dp(10), dp(24))

def __h80_text_size(root, *args):
    '''Line 232: <TreeViewLabel> @ text_size: self.width, None '''
    root = root.__self__
    root.text_size = root.width, None


# <TreeViewLabel> L229
__mc[20] = set()
def __r20(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    if root.__class__ not in __mc[20]:
        __create_property_root = root.create_property
        '''Line 230: <TreeViewLabel> @ width: self.texture_size[0] '''
        if not hasattr(root, "width"):
            __create_property_root("width", (None))
        '''Line 231: <TreeViewLabel> @ height: max(self.texture_size[1] + dp(10), dp(24)) '''
        if not hasattr(root, "height"):
            __create_property_root("height", (None))
        '''Line 232: <TreeViewLabel> @ text_size: self.width, None '''
        if not hasattr(root, "text_size"):
            __create_property_root("text_size", (None))

        __mc[20].add(root.__class__)

    '''Line 230: <TreeViewLabel> @ width: self.texture_size[0] '''
    root.width = root.texture_size[0]

    '''Line 231: <TreeViewLabel> @ height: max(self.texture_size[1] + dp(10), dp(24)) '''
    root.height = max(root.texture_size[1] + dp(10), dp(24))

    '''Line 232: <TreeViewLabel> @ text_size: self.width, None '''
    root.text_size = root.width, None

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b20(app, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b20, app, root))

def __b20(app, root):
    __ref_root = root.proxy_ref

    __bound = [None, ] * 3
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h78_width, __ref_root), __h78_width, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h79_height, __ref_root), __h79_height, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "width", __bind_root("width", __h80_text_size, __ref_root), __h80_text_size, (__ref_root, )]
    __handlers[root.uid].append((__bound, (0, 1, 2)))

    return __partial(__d20, app, root)

def __d20(app, root):
    args = None, None

    '''Line 230: <TreeViewLabel> @ width: self.texture_size[0] '''
    root.width = root.texture_size[0]

    '''Line 231: <TreeViewLabel> @ height: max(self.texture_size[1] + dp(10), dp(24)) '''
    root.height = max(root.texture_size[1] + dp(10), dp(24))

    '''Line 232: <TreeViewLabel> @ text_size: self.width, None '''
    root.text_size = root.width, None

    return ()


def __h81_pos(g2, root, *args):
    '''Line 239: <StencilView> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h82_size(g2, root, *args):
    '''Line 240: <StencilView> -> Rectangle @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h83_pos(g5, root, *args):
    '''Line 246: <StencilView> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g5.pos = root.pos

def __h84_size(g5, root, *args):
    '''Line 247: <StencilView> -> Rectangle @ size: self.size '''
    root = root.__self__
    g5.size = root.size


# <StencilView> L235
def __r21(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __cls_Rectangle = Factory.Rectangle

    __add_root_canvas_before = root.canvas.before.add
    __add_root_canvas_after = root.canvas.after.add

    '''Line 237: <StencilView> -> StencilPush'''
    g1 = Factory.StencilPush()
    __add_root_canvas_before(g1)

    '''Line 238: <StencilView> -> Rectangle'''
    g2 = __cls_Rectangle()
    __add_root_canvas_before(g2)

    '''Line 241: <StencilView> -> StencilUse'''
    g3 = Factory.StencilUse()
    __add_root_canvas_before(g3)

    '''Line 244: <StencilView> -> StencilUnUse'''
    g4 = Factory.StencilUnUse()
    __add_root_canvas_after(g4)

    '''Line 245: <StencilView> -> Rectangle'''
    g5 = __cls_Rectangle()
    __add_root_canvas_after(g5)

    '''Line 248: <StencilView> -> StencilPop'''
    g6 = Factory.StencilPop()
    __add_root_canvas_after(g6)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b21(app, g1, g2, g3, g4, g5, g6, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b21, app, g1, g2, g3, g4, g5, g6, root))

def __b21(app, g1, g2, g3, g4, g5, g6, root):
    __ref_g2 = g2.proxy_ref
    __ref_g5 = g5.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 239: <StencilView> -> Rectangle @ pos: self.pos '''
    __delayed___h81_pos = [__h81_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h81_pos, None, None)

    '''Line 240: <StencilView> -> Rectangle @ size: self.size '''
    __delayed___h82_size = [__h82_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h82_size, None, None)

    '''Line 246: <StencilView> -> Rectangle @ pos: self.pos '''
    __delayed___h83_pos = [__h83_pos, __ref_g5, __ref_root, None]
    __delayed_call_fn(__delayed___h83_pos, None, None)

    '''Line 247: <StencilView> -> Rectangle @ size: self.size '''
    __delayed___h84_size = [__h84_size, __ref_g5, __ref_root, None]
    __delayed_call_fn(__delayed___h84_size, None, None)

    __bound = [None, ] * 4
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h81_pos), __delayed_call_fn, (__delayed___h81_pos, )]
    __bound[1] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h82_size), __delayed_call_fn, (__delayed___h82_size, )]
    __bound[2] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h83_pos), __delayed_call_fn, (__delayed___h83_pos, )]
    __bound[3] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h84_size), __delayed_call_fn, (__delayed___h84_size, )]
    __handlers[g5.uid].append((__bound, (2, 3)))
    __handlers[g2.uid].append((__bound, (0, 1)))

    return tuple


def __h85_pos(root, w1, *args):
    '''Line 257: <FileChooserListLayout> -> BoxLayout @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos

def __h86_size(root, w1, *args):
    '''Line 258: <FileChooserListLayout> -> BoxLayout @ size: root.size '''
    root = root.__self__
    w1.size = root.size

def __h87_text_size(w4, *args):
    '''Line 271: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
    w4 = w4.__self__
    w4.text_size = w4.size

def __h88_text_size(w5, *args):
    '''Line 276: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
    w5 = w5.__self__
    w5.text_size = w5.size

def __h89_size(w8, w9_treeview, *args):
    '''Line 291: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ size: treeview.size '''
    w9_treeview = w9_treeview.__self__
    w8.size = w9_treeview.size

def __h90_width(w7_scrollview, w9_treeview, *args):
    '''Line 297: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ width: scrollview.width '''
    w7_scrollview = w7_scrollview.__self__
    w9_treeview.width = w7_scrollview.width

def __h91_height(w9_treeview, *args):
    '''Line 298: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ height: self.minimum_height '''
    w9_treeview = w9_treeview.__self__
    w9_treeview.height = w9_treeview.minimum_height

def __h4_on_entry_added(w9_treeview, *args):
    '''Line 252: <FileChooserListLayout> @ on_entry_added: treeview.add_node(args[1]) '''
    w9_treeview = w9_treeview.__self__
    w9_treeview.add_node(args[1])

def __h5_on_entries_cleared(w9_treeview, *args):
    '''Line 253: <FileChooserListLayout> @ on_entries_cleared: treeview.root.nodes = [] '''
    w9_treeview = w9_treeview.__self__
    w9_treeview.root.nodes = []

def __h6_on_subentry_to_entry(w9_treeview, *args):
    '''Line 254: <FileChooserListLayout> @ on_subentry_to_entry: not args[2].locked and treeview.add_node(args[1], args[2]) '''
    w9_treeview = w9_treeview.__self__
    not args[2].locked and w9_treeview.add_node(args[1], args[2])

def __h7_on_remove_subentry(*args):
    '''Line 255: <FileChooserListLayout> @ on_remove_subentry: args[2].nodes = [] '''
    args[2].nodes = []

def __h8_on_node_expand(root, *args):
    '''Line 299: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_expand: root.controller.entry_subselect(args[1]) '''
    root = root.__self__
    root.controller.entry_subselect(args[1])

def __h9_on_node_collapse(root, *args):
    '''Line 300: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_collapse: root.controller.close_subselection(args[1]) '''
    root = root.__self__
    root.controller.close_subselection(args[1])


# <FileChooserListLayout> L251
__mc[22] = set()
def __r22(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_BoxLayout = Factory.BoxLayout
    __cls_Widget = Factory.Widget
    __cls_Label = Factory.Label

    '''Line 256: <FileChooserListLayout> -> BoxLayout'''
    w1 = __cls_BoxLayout(parent=root, __builder_created=__bfuncs)

    '''Line 261: <FileChooserListLayout> -> BoxLayout -> BoxLayout'''
    w2 = __cls_BoxLayout(parent=w1, __builder_created=__bfuncs)

    '''Line 265: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget'''
    w3 = __cls_Widget(parent=w2, __builder_created=__bfuncs)

    '''Line 269: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label'''
    w4 = __cls_Label(parent=w2, __builder_created=__bfuncs)

    '''Line 274: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label'''
    w5 = __cls_Label(parent=w2, __builder_created=__bfuncs)

    '''Line 280: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget'''
    w6 = __cls_Widget(parent=w2, __builder_created=__bfuncs)

    '''Line 284: <FileChooserListLayout> -> BoxLayout -> ScrollView'''
    w7_scrollview = Factory.ScrollView(parent=w1, __builder_created=__bfuncs)

    '''Line 287: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter'''
    w8 = Factory.Scatter(parent=w7_scrollview, __builder_created=__bfuncs)

    '''Line 293: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView'''
    w9_treeview = Factory.TreeView(parent=w8, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["scrollview"] = w7_scrollview.proxy_ref
    __ids["treeview"] = w9_treeview.proxy_ref

    if root.__class__ not in __mc[22]:
        __create_property_w1 = w1.create_property
        '''Line 257: <FileChooserListLayout> -> BoxLayout @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 258: <FileChooserListLayout> -> BoxLayout @ size: root.size '''
        if not hasattr(w1, "size"):
            __create_property_w1("size", (None))
        '''Line 259: <FileChooserListLayout> -> BoxLayout @ size_hint: None, None '''
        if not hasattr(w1, "size_hint"):
            __create_property_w1("size_hint", (None))
        '''Line 260: <FileChooserListLayout> -> BoxLayout @ orientation: 'vertical' '''
        if not hasattr(w1, "orientation"):
            __create_property_w1("orientation", ('vertical'))

        __create_property_w2 = w2.create_property
        '''Line 262: <FileChooserListLayout> -> BoxLayout -> BoxLayout @ size_hint_y: None '''
        if not hasattr(w2, "size_hint_y"):
            __create_property_w2("size_hint_y", (None))
        '''Line 263: <FileChooserListLayout> -> BoxLayout -> BoxLayout @ height: '30dp' '''
        if not hasattr(w2, "height"):
            __create_property_w2("height", ('30dp'))
        '''Line 264: <FileChooserListLayout> -> BoxLayout -> BoxLayout @ orientation: 'horizontal' '''
        if not hasattr(w2, "orientation"):
            __create_property_w2("orientation", ('horizontal'))

        __create_property_w3 = w3.create_property
        '''Line 267: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ width: '10dp' '''
        if not hasattr(w3, "width"):
            __create_property_w3("width", ('10dp'))
        '''Line 268: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ size_hint_x: None '''
        if not hasattr(w3, "size_hint_x"):
            __create_property_w3("size_hint_x", (None))

        __create_property_w4 = w4.create_property
        '''Line 270: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text: 'Name' '''
        if not hasattr(w4, "text"):
            __create_property_w4("text", ('Name'))
        '''Line 271: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
        if not hasattr(w4, "text_size"):
            __create_property_w4("text_size", (None))
        '''Line 272: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ halign: 'left' '''
        if not hasattr(w4, "halign"):
            __create_property_w4("halign", ('left'))
        '''Line 273: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ bold: True '''
        if not hasattr(w4, "bold"):
            __create_property_w4("bold", (None))

        __create_property_w5 = w5.create_property
        '''Line 275: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text: 'Size' '''
        if not hasattr(w5, "text"):
            __create_property_w5("text", ('Size'))
        '''Line 276: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
        if not hasattr(w5, "text_size"):
            __create_property_w5("text_size", (None))
        '''Line 277: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ size_hint_x: None '''
        if not hasattr(w5, "size_hint_x"):
            __create_property_w5("size_hint_x", (None))
        '''Line 278: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ halign: 'right' '''
        if not hasattr(w5, "halign"):
            __create_property_w5("halign", ('right'))
        '''Line 279: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ bold: True '''
        if not hasattr(w5, "bold"):
            __create_property_w5("bold", (None))

        __create_property_w6 = w6.create_property
        '''Line 282: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ width: '10dp' '''
        if not hasattr(w6, "width"):
            __create_property_w6("width", ('10dp'))
        '''Line 283: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ size_hint_x: None '''
        if not hasattr(w6, "size_hint_x"):
            __create_property_w6("size_hint_x", (None))

        '''Line 286: <FileChooserListLayout> -> BoxLayout -> ScrollView @ do_scroll_x: False '''
        if not hasattr(w7_scrollview, "do_scroll_x"):
            w7_scrollview.create_property("do_scroll_x", (None))

        __create_property_w8 = w8.create_property
        '''Line 288: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ do_rotation: False '''
        if not hasattr(w8, "do_rotation"):
            __create_property_w8("do_rotation", (None))
        '''Line 289: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ do_scale: False '''
        if not hasattr(w8, "do_scale"):
            __create_property_w8("do_scale", (None))
        '''Line 290: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ do_translation: False '''
        if not hasattr(w8, "do_translation"):
            __create_property_w8("do_translation", (None))
        '''Line 291: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ size: treeview.size '''
        if not hasattr(w8, "size"):
            __create_property_w8("size", (None))
        '''Line 292: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ size_hint_y: None '''
        if not hasattr(w8, "size_hint_y"):
            __create_property_w8("size_hint_y", (None))

        __create_property_w9_treeview = w9_treeview.create_property
        '''Line 295: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ hide_root: True '''
        if not hasattr(w9_treeview, "hide_root"):
            __create_property_w9_treeview("hide_root", (None))
        '''Line 296: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ size_hint_y: None '''
        if not hasattr(w9_treeview, "size_hint_y"):
            __create_property_w9_treeview("size_hint_y", (None))
        '''Line 297: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ width: scrollview.width '''
        if not hasattr(w9_treeview, "width"):
            __create_property_w9_treeview("width", (None))
        '''Line 298: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ height: self.minimum_height '''
        if not hasattr(w9_treeview, "height"):
            __create_property_w9_treeview("height", (None))

        __mc[22].add(root.__class__)

    __on_init = [None, ] * 6

    __get_prop_root = root.property

    '''Line 252: <FileChooserListLayout> @ on_entry_added: treeview.add_node(args[1]) '''
    __prop = __get_prop_root("entry_added", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(root), None]

    '''Line 253: <FileChooserListLayout> @ on_entries_cleared: treeview.root.nodes = [] '''
    __prop = __get_prop_root("entries_cleared", quiet=True)
    if __prop is not None:
        __on_init[1] = [__prop, __prop.dispatch_count(root), None]

    '''Line 254: <FileChooserListLayout> @ on_subentry_to_entry: not args[2].locked and treeview.add_node(args[1], args[2]) '''
    __prop = __get_prop_root("subentry_to_entry", quiet=True)
    if __prop is not None:
        __on_init[2] = [__prop, __prop.dispatch_count(root), None]

    '''Line 255: <FileChooserListLayout> @ on_remove_subentry: args[2].nodes = [] '''
    __prop = __get_prop_root("remove_subentry", quiet=True)
    if __prop is not None:
        __on_init[3] = [__prop, __prop.dispatch_count(root), None]

    __get_prop_w9_treeview = w9_treeview.property

    '''Line 299: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_expand: root.controller.entry_subselect(args[1]) '''
    __prop = __get_prop_w9_treeview("node_expand", quiet=True)
    if __prop is not None:
        __on_init[4] = [__prop, __prop.dispatch_count(w9_treeview), None]

    '''Line 300: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_collapse: root.controller.close_subselection(args[1]) '''
    __prop = __get_prop_w9_treeview("node_collapse", quiet=True)
    if __prop is not None:
        __on_init[5] = [__prop, __prop.dispatch_count(w9_treeview), None]

    '''Line 259: <FileChooserListLayout> -> BoxLayout @ size_hint: None, None '''
    w1.size_hint = None, None

    '''Line 260: <FileChooserListLayout> -> BoxLayout @ orientation: 'vertical' '''
    w1.orientation = 'vertical'

    '''Line 262: <FileChooserListLayout> -> BoxLayout -> BoxLayout @ size_hint_y: None '''
    w2.size_hint_y = None

    '''Line 263: <FileChooserListLayout> -> BoxLayout -> BoxLayout @ height: '30dp' '''
    w2.height = '30dp'

    '''Line 264: <FileChooserListLayout> -> BoxLayout -> BoxLayout @ orientation: 'horizontal' '''
    w2.orientation = 'horizontal'

    '''Line 267: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ width: '10dp' '''
    w3.width = '10dp'

    '''Line 268: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ size_hint_x: None '''
    w3.size_hint_x = None

    '''Line 270: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text: 'Name' '''
    w4.text = 'Name'

    '''Line 272: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ halign: 'left' '''
    w4.halign = 'left'

    '''Line 273: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ bold: True '''
    w4.bold = True

    '''Line 275: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text: 'Size' '''
    w5.text = 'Size'

    '''Line 277: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ size_hint_x: None '''
    w5.size_hint_x = None

    '''Line 278: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ halign: 'right' '''
    w5.halign = 'right'

    '''Line 279: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ bold: True '''
    w5.bold = True

    '''Line 282: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ width: '10dp' '''
    w6.width = '10dp'

    '''Line 283: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Widget @ size_hint_x: None '''
    w6.size_hint_x = None

    '''Line 286: <FileChooserListLayout> -> BoxLayout -> ScrollView @ do_scroll_x: False '''
    w7_scrollview.do_scroll_x = False

    '''Line 288: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ do_rotation: False '''
    w8.do_rotation = False

    '''Line 289: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ do_scale: False '''
    w8.do_scale = False

    '''Line 290: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ do_translation: False '''
    w8.do_translation = False

    '''Line 292: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ size_hint_y: None '''
    w8.size_hint_y = None

    '''Line 295: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ hide_root: True '''
    w9_treeview.hide_root = True

    '''Line 296: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ size_hint_y: None '''
    w9_treeview.size_hint_y = None

    '''Line 257: <FileChooserListLayout> -> BoxLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 258: <FileChooserListLayout> -> BoxLayout @ size: root.size '''
    w1.size = root.size

    '''Line 271: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
    w4.text_size = w4.size

    '''Line 276: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
    w5.text_size = w5.size

    '''Line 291: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ size: treeview.size '''
    w8.size = w9_treeview.size

    '''Line 297: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ width: scrollview.width '''
    w9_treeview.width = w7_scrollview.width

    '''Line 298: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ height: self.minimum_height '''
    w9_treeview.height = w9_treeview.minimum_height

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b22(app, root, w1, w2, w3, w4, w5, w6, w7_scrollview, w8, w9_treeview, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b22, app, root, w1, w2, w3, w4, w5, w6, w7_scrollview, w8, w9_treeview, __on_init))

def __b22(app, root, w1, w2, w3, w4, w5, w6, w7_scrollview, w8, w9_treeview, __on_init):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w4 = w4.proxy_ref
    __ref_w5 = w5.proxy_ref
    __ref_w7_scrollview = w7_scrollview.proxy_ref
    __ref_w8 = w8.proxy_ref
    __ref_w9_treeview = w9_treeview.proxy_ref

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h85_pos, __ref_root, __ref_w1), __h85_pos, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "size", __bind_root("size", __h86_size, __ref_root, __ref_w1), __h86_size, [__ref_root, __ref_w1]]
    __handlers[w1.uid].append((__bound, (0, 1)))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w4, "size", w4.fast_bind("size", __h87_text_size, __ref_w4), __h87_text_size, (__ref_w4, )]
    __handlers[w4.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w5, "size", w5.fast_bind("size", __h88_text_size, __ref_w5), __h88_text_size, (__ref_w5, )]
    __handlers[w5.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w7_scrollview, "width", w7_scrollview.fast_bind("width", __h90_width, __ref_w7_scrollview, __ref_w9_treeview), __h90_width, [__ref_w7_scrollview, __ref_w9_treeview]]
    __handlers[w9_treeview.uid].append((__bound, (0, )))

    __bound = [None, ] * 2
    __bind_w9_treeview = w9_treeview.fast_bind
    __bound[0] = [None, None, None, __ref_w9_treeview, "size", __bind_w9_treeview("size", __h89_size, __ref_w8, __ref_w9_treeview), __h89_size, [__ref_w8, __ref_w9_treeview]]
    __bound[1] = [None, None, None, __ref_w9_treeview, "minimum_height", __bind_w9_treeview("minimum_height", __h91_height, __ref_w9_treeview), __h91_height, (__ref_w9_treeview, )]
    __handlers[w9_treeview.uid].append((__bound, (1, )))
    __handlers[w8.uid].append((__bound, (0, )))

    '''Line 252: <FileChooserListLayout> @ on_entry_added: treeview.add_node(args[1]) '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        __bind_root("on_entry_added", __h4_on_entry_added, __ref_w9_treeview)
    else:
        __bind_root("entry_added", __h4_on_entry_added, __ref_w9_treeview)
        __prop_init[2] = __prop_init[0].dispatch_count(root)

    '''Line 253: <FileChooserListLayout> @ on_entries_cleared: treeview.root.nodes = [] '''
    __prop_init = __on_init[1]
    if __prop_init is None:
        __bind_root("on_entries_cleared", __h5_on_entries_cleared, __ref_w9_treeview)
    else:
        __bind_root("entries_cleared", __h5_on_entries_cleared, __ref_w9_treeview)
        __prop_init[2] = __prop_init[0].dispatch_count(root)

    '''Line 254: <FileChooserListLayout> @ on_subentry_to_entry: not args[2].locked and treeview.add_node(args[1], args[2]) '''
    __prop_init = __on_init[2]
    if __prop_init is None:
        __bind_root("on_subentry_to_entry", __h6_on_subentry_to_entry, __ref_w9_treeview)
    else:
        __bind_root("subentry_to_entry", __h6_on_subentry_to_entry, __ref_w9_treeview)
        __prop_init[2] = __prop_init[0].dispatch_count(root)

    '''Line 255: <FileChooserListLayout> @ on_remove_subentry: args[2].nodes = [] '''
    __prop_init = __on_init[3]
    if __prop_init is None:
        __bind_root("on_remove_subentry", __h7_on_remove_subentry)
    else:
        __bind_root("remove_subentry", __h7_on_remove_subentry)
        __prop_init[2] = __prop_init[0].dispatch_count(root)

    '''Line 299: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_expand: root.controller.entry_subselect(args[1]) '''
    __prop_init = __on_init[4]
    if __prop_init is None:
        __bind_w9_treeview("on_node_expand", __h8_on_node_expand, __ref_root)
    else:
        __bind_w9_treeview("node_expand", __h8_on_node_expand, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w9_treeview)

    '''Line 300: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_collapse: root.controller.close_subselection(args[1]) '''
    __prop_init = __on_init[5]
    if __prop_init is None:
        __bind_w9_treeview("on_node_collapse", __h9_on_node_collapse, __ref_root)
    else:
        __bind_w9_treeview("node_collapse", __h9_on_node_collapse, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w9_treeview)

    return __partial(__d22, app, root, w1, w2, w3, w4, w5, w6, w7_scrollview, w8, w9_treeview, __on_init)

def __d22(app, root, w1, w2, w3, w4, w5, w6, w7_scrollview, w8, w9_treeview, __on_init):
    args = None, None

    '''Line 257: <FileChooserListLayout> -> BoxLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 258: <FileChooserListLayout> -> BoxLayout @ size: root.size '''
    w1.size = root.size

    '''Line 271: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
    w4.text_size = w4.size

    '''Line 276: <FileChooserListLayout> -> BoxLayout -> BoxLayout -> Label @ text_size: self.size '''
    w5.text_size = w5.size

    '''Line 291: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter @ size: treeview.size '''
    w8.size = w9_treeview.size

    '''Line 297: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ width: scrollview.width '''
    w9_treeview.width = w7_scrollview.width

    '''Line 298: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ height: self.minimum_height '''
    w9_treeview.height = w9_treeview.minimum_height

    args = None,

    '''Line 252: <FileChooserListLayout> @ on_entry_added: treeview.add_node(args[1]) '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(root) == e:
            w9_treeview.add_node(args[1])

    '''Line 253: <FileChooserListLayout> @ on_entries_cleared: treeview.root.nodes = [] '''
    if __on_init[1] is not None:
        __prop, s, e = __on_init[1]
        if s != e and __prop.dispatch_count(root) == e:
            w9_treeview.root.nodes = []

    '''Line 254: <FileChooserListLayout> @ on_subentry_to_entry: not args[2].locked and treeview.add_node(args[1], args[2]) '''
    if __on_init[2] is not None:
        __prop, s, e = __on_init[2]
        if s != e and __prop.dispatch_count(root) == e:
            not args[2].locked and w9_treeview.add_node(args[1], args[2])

    '''Line 255: <FileChooserListLayout> @ on_remove_subentry: args[2].nodes = [] '''
    if __on_init[3] is not None:
        __prop, s, e = __on_init[3]
        if s != e and __prop.dispatch_count(root) == e:
            args[2].nodes = []

    '''Line 299: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_expand: root.controller.entry_subselect(args[1]) '''
    if __on_init[4] is not None:
        __prop, s, e = __on_init[4]
        if s != e and __prop.dispatch_count(w9_treeview) == e:
            root.controller.entry_subselect(args[1])

    '''Line 300: <FileChooserListLayout> -> BoxLayout -> ScrollView -> Scatter -> TreeView @ on_node_collapse: root.controller.close_subselection(args[1]) '''
    if __on_init[5] is not None:
        __prop, s, e = __on_init[5]
        if s != e and __prop.dispatch_count(w9_treeview) == e:
            root.controller.close_subselection(args[1])

    return (w1, w2, w3, w4, w5, w6, w7_scrollview, w8, w9_treeview)


# <FileChooserListView> L302
__mc[23] = set()
def __r23(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 304: <FileChooserListView> -> FileChooserListLayout'''
    w1_layout = Factory.FileChooserListLayout(parent=root, __builder_created=__bfuncs)

    root.ids["layout"] = w1_layout.proxy_ref

    if root.__class__ not in __mc[23]:
        '''Line 303: <FileChooserListView> @ layout: layout '''
        if not hasattr(root, "layout"):
            root.create_property("layout", (None))

        '''Line 306: <FileChooserListView> -> FileChooserListLayout @ controller: root '''
        if not hasattr(w1_layout, "controller"):
            w1_layout.create_property("controller", (None))

        __mc[23].add(root.__class__)

    '''Line 303: <FileChooserListView> @ layout: layout '''
    root.layout = w1_layout

    '''Line 306: <FileChooserListView> -> FileChooserListLayout @ controller: root '''
    w1_layout.controller = root

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b23(app, root, w1_layout))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b23, app, root, w1_layout))

def __b23(app, root, w1_layout):

    return __partial(__return_args, (w1_layout, ))


def __h92_pos(root, w1_scrollview, *args):
    '''Line 345: <FileChooserIconLayout> -> ScrollView @ pos: root.pos '''
    root = root.__self__
    w1_scrollview.pos = root.pos

def __h93_size(root, w1_scrollview, *args):
    '''Line 346: <FileChooserIconLayout> -> ScrollView @ size: root.size '''
    root = root.__self__
    w1_scrollview.size = root.size

def __h94_height(w2, w3_stacklayout, *args):
    '''Line 354: <FileChooserIconLayout> -> ScrollView -> Scatter @ height: stacklayout.height '''
    w3_stacklayout = w3_stacklayout.__self__
    w2.height = w3_stacklayout.height

def __h95_width(w1_scrollview, w3_stacklayout, *args):
    '''Line 357: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ width: scrollview.width '''
    w1_scrollview = w1_scrollview.__self__
    w3_stacklayout.width = w1_scrollview.width

def __h96_height(w3_stacklayout, *args):
    '''Line 359: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ height: self.minimum_height '''
    w3_stacklayout = w3_stacklayout.__self__
    w3_stacklayout.height = w3_stacklayout.minimum_height

def __h10_on_entry_added(w3_stacklayout, *args):
    '''Line 341: <FileChooserIconLayout> @ on_entry_added: stacklayout.add_widget(args[1]) '''
    w3_stacklayout = w3_stacklayout.__self__
    w3_stacklayout.add_widget(args[1])

def __h11_on_entries_cleared(w3_stacklayout, *args):
    '''Line 342: <FileChooserIconLayout> @ on_entries_cleared: stacklayout.clear_widgets() '''
    w3_stacklayout = w3_stacklayout.__self__
    w3_stacklayout.clear_widgets()


# <FileChooserIconLayout> L340
__mc[24] = set()
def __r24(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 343: <FileChooserIconLayout> -> ScrollView'''
    w1_scrollview = Factory.ScrollView(parent=root, __builder_created=__bfuncs)

    '''Line 349: <FileChooserIconLayout> -> ScrollView -> Scatter'''
    w2 = Factory.Scatter(parent=w1_scrollview, __builder_created=__bfuncs)

    '''Line 355: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout'''
    w3_stacklayout = Factory.StackLayout(parent=w2, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["scrollview"] = w1_scrollview.proxy_ref
    __ids["stacklayout"] = w3_stacklayout.proxy_ref

    if root.__class__ not in __mc[24]:
        __create_property_w1_scrollview = w1_scrollview.create_property
        '''Line 345: <FileChooserIconLayout> -> ScrollView @ pos: root.pos '''
        if not hasattr(w1_scrollview, "pos"):
            __create_property_w1_scrollview("pos", (None))
        '''Line 346: <FileChooserIconLayout> -> ScrollView @ size: root.size '''
        if not hasattr(w1_scrollview, "size"):
            __create_property_w1_scrollview("size", (None))
        '''Line 347: <FileChooserIconLayout> -> ScrollView @ size_hint: None, None '''
        if not hasattr(w1_scrollview, "size_hint"):
            __create_property_w1_scrollview("size_hint", (None))
        '''Line 348: <FileChooserIconLayout> -> ScrollView @ do_scroll_x: False '''
        if not hasattr(w1_scrollview, "do_scroll_x"):
            __create_property_w1_scrollview("do_scroll_x", (None))

        __create_property_w2 = w2.create_property
        '''Line 350: <FileChooserIconLayout> -> ScrollView -> Scatter @ do_rotation: False '''
        if not hasattr(w2, "do_rotation"):
            __create_property_w2("do_rotation", (None))
        '''Line 351: <FileChooserIconLayout> -> ScrollView -> Scatter @ do_scale: False '''
        if not hasattr(w2, "do_scale"):
            __create_property_w2("do_scale", (None))
        '''Line 352: <FileChooserIconLayout> -> ScrollView -> Scatter @ do_translation: False '''
        if not hasattr(w2, "do_translation"):
            __create_property_w2("do_translation", (None))
        '''Line 353: <FileChooserIconLayout> -> ScrollView -> Scatter @ size_hint_y: None '''
        if not hasattr(w2, "size_hint_y"):
            __create_property_w2("size_hint_y", (None))
        '''Line 354: <FileChooserIconLayout> -> ScrollView -> Scatter @ height: stacklayout.height '''
        if not hasattr(w2, "height"):
            __create_property_w2("height", (None))

        __create_property_w3_stacklayout = w3_stacklayout.create_property
        '''Line 357: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ width: scrollview.width '''
        if not hasattr(w3_stacklayout, "width"):
            __create_property_w3_stacklayout("width", (None))
        '''Line 358: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ size_hint_y: None '''
        if not hasattr(w3_stacklayout, "size_hint_y"):
            __create_property_w3_stacklayout("size_hint_y", (None))
        '''Line 359: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ height: self.minimum_height '''
        if not hasattr(w3_stacklayout, "height"):
            __create_property_w3_stacklayout("height", (None))
        '''Line 360: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ spacing: '10dp' '''
        if not hasattr(w3_stacklayout, "spacing"):
            __create_property_w3_stacklayout("spacing", ('10dp'))
        '''Line 361: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ padding: '10dp' '''
        if not hasattr(w3_stacklayout, "padding"):
            __create_property_w3_stacklayout("padding", ('10dp'))

        __mc[24].add(root.__class__)

    __on_init = [None, ] * 2

    __get_prop_root = root.property

    '''Line 341: <FileChooserIconLayout> @ on_entry_added: stacklayout.add_widget(args[1]) '''
    __prop = __get_prop_root("entry_added", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(root), None]

    '''Line 342: <FileChooserIconLayout> @ on_entries_cleared: stacklayout.clear_widgets() '''
    __prop = __get_prop_root("entries_cleared", quiet=True)
    if __prop is not None:
        __on_init[1] = [__prop, __prop.dispatch_count(root), None]

    '''Line 347: <FileChooserIconLayout> -> ScrollView @ size_hint: None, None '''
    w1_scrollview.size_hint = None, None

    '''Line 348: <FileChooserIconLayout> -> ScrollView @ do_scroll_x: False '''
    w1_scrollview.do_scroll_x = False

    '''Line 350: <FileChooserIconLayout> -> ScrollView -> Scatter @ do_rotation: False '''
    w2.do_rotation = False

    '''Line 351: <FileChooserIconLayout> -> ScrollView -> Scatter @ do_scale: False '''
    w2.do_scale = False

    '''Line 352: <FileChooserIconLayout> -> ScrollView -> Scatter @ do_translation: False '''
    w2.do_translation = False

    '''Line 353: <FileChooserIconLayout> -> ScrollView -> Scatter @ size_hint_y: None '''
    w2.size_hint_y = None

    '''Line 358: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ size_hint_y: None '''
    w3_stacklayout.size_hint_y = None

    '''Line 360: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ spacing: '10dp' '''
    w3_stacklayout.spacing = '10dp'

    '''Line 361: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ padding: '10dp' '''
    w3_stacklayout.padding = '10dp'

    '''Line 345: <FileChooserIconLayout> -> ScrollView @ pos: root.pos '''
    w1_scrollview.pos = root.pos

    '''Line 346: <FileChooserIconLayout> -> ScrollView @ size: root.size '''
    w1_scrollview.size = root.size

    '''Line 354: <FileChooserIconLayout> -> ScrollView -> Scatter @ height: stacklayout.height '''
    w2.height = w3_stacklayout.height

    '''Line 357: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ width: scrollview.width '''
    w3_stacklayout.width = w1_scrollview.width

    '''Line 359: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ height: self.minimum_height '''
    w3_stacklayout.height = w3_stacklayout.minimum_height

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b24(app, root, w1_scrollview, w2, w3_stacklayout, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b24, app, root, w1_scrollview, w2, w3_stacklayout, __on_init))

def __b24(app, root, w1_scrollview, w2, w3_stacklayout, __on_init):
    __ref_root = root.proxy_ref
    __ref_w1_scrollview = w1_scrollview.proxy_ref
    __ref_w2 = w2.proxy_ref
    __ref_w3_stacklayout = w3_stacklayout.proxy_ref

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h92_pos, __ref_root, __ref_w1_scrollview), __h92_pos, [__ref_root, __ref_w1_scrollview]]
    __bound[1] = [None, None, None, __ref_root, "size", __bind_root("size", __h93_size, __ref_root, __ref_w1_scrollview), __h93_size, [__ref_root, __ref_w1_scrollview]]
    __handlers[w1_scrollview.uid].append((__bound, (0, 1)))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w1_scrollview, "width", w1_scrollview.fast_bind("width", __h95_width, __ref_w1_scrollview, __ref_w3_stacklayout), __h95_width, [__ref_w1_scrollview, __ref_w3_stacklayout]]
    __handlers[w3_stacklayout.uid].append((__bound, (0, )))

    __bound = [None, ] * 2
    __bind_w3_stacklayout = w3_stacklayout.fast_bind
    __bound[0] = [None, None, None, __ref_w3_stacklayout, "height", __bind_w3_stacklayout("height", __h94_height, __ref_w2, __ref_w3_stacklayout), __h94_height, [__ref_w2, __ref_w3_stacklayout]]
    __bound[1] = [None, None, None, __ref_w3_stacklayout, "minimum_height", __bind_w3_stacklayout("minimum_height", __h96_height, __ref_w3_stacklayout), __h96_height, (__ref_w3_stacklayout, )]
    __handlers[w2.uid].append((__bound, (0, )))
    __handlers[w3_stacklayout.uid].append((__bound, (1, )))

    '''Line 341: <FileChooserIconLayout> @ on_entry_added: stacklayout.add_widget(args[1]) '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        __bind_root("on_entry_added", __h10_on_entry_added, __ref_w3_stacklayout)
    else:
        __bind_root("entry_added", __h10_on_entry_added, __ref_w3_stacklayout)
        __prop_init[2] = __prop_init[0].dispatch_count(root)

    '''Line 342: <FileChooserIconLayout> @ on_entries_cleared: stacklayout.clear_widgets() '''
    __prop_init = __on_init[1]
    if __prop_init is None:
        __bind_root("on_entries_cleared", __h11_on_entries_cleared, __ref_w3_stacklayout)
    else:
        __bind_root("entries_cleared", __h11_on_entries_cleared, __ref_w3_stacklayout)
        __prop_init[2] = __prop_init[0].dispatch_count(root)

    return __partial(__d24, app, root, w1_scrollview, w2, w3_stacklayout, __on_init)

def __d24(app, root, w1_scrollview, w2, w3_stacklayout, __on_init):
    args = None, None

    '''Line 345: <FileChooserIconLayout> -> ScrollView @ pos: root.pos '''
    w1_scrollview.pos = root.pos

    '''Line 346: <FileChooserIconLayout> -> ScrollView @ size: root.size '''
    w1_scrollview.size = root.size

    '''Line 354: <FileChooserIconLayout> -> ScrollView -> Scatter @ height: stacklayout.height '''
    w2.height = w3_stacklayout.height

    '''Line 357: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ width: scrollview.width '''
    w3_stacklayout.width = w1_scrollview.width

    '''Line 359: <FileChooserIconLayout> -> ScrollView -> Scatter -> StackLayout @ height: self.minimum_height '''
    w3_stacklayout.height = w3_stacklayout.minimum_height

    args = None,

    '''Line 341: <FileChooserIconLayout> @ on_entry_added: stacklayout.add_widget(args[1]) '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(root) == e:
            w3_stacklayout.add_widget(args[1])

    '''Line 342: <FileChooserIconLayout> @ on_entries_cleared: stacklayout.clear_widgets() '''
    if __on_init[1] is not None:
        __prop, s, e = __on_init[1]
        if s != e and __prop.dispatch_count(root) == e:
            w3_stacklayout.clear_widgets()

    return (w1_scrollview, w2, w3_stacklayout)


# <FileChooserIconView> L363
__mc[25] = set()
def __r25(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 365: <FileChooserIconView> -> FileChooserIconLayout'''
    w1_layout = Factory.FileChooserIconLayout(parent=root, __builder_created=__bfuncs)

    root.ids["layout"] = w1_layout.proxy_ref

    if root.__class__ not in __mc[25]:
        '''Line 364: <FileChooserIconView> @ layout: layout '''
        if not hasattr(root, "layout"):
            root.create_property("layout", (None))

        '''Line 367: <FileChooserIconView> -> FileChooserIconLayout @ controller: root '''
        if not hasattr(w1_layout, "controller"):
            w1_layout.create_property("controller", (None))

        __mc[25].add(root.__class__)

    '''Line 364: <FileChooserIconView> @ layout: layout '''
    root.layout = w1_layout

    '''Line 367: <FileChooserIconView> -> FileChooserIconLayout @ controller: root '''
    w1_layout.controller = root

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b25(app, root, w1_layout))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b25, app, root, w1_layout))

def __b25(app, root, w1_layout):

    return __partial(__return_args, (w1_layout, ))


def __h97_text(root, w1, *args):
    '''Line 419: <FileChooserProgress> -> Label @ text: 'Opening %s' % root.path '''
    root = root.__self__
    w1.text = 'Opening %s' % root.path

def __h98_max(root, w3_pb, *args):
    '''Line 426: <FileChooserProgress> -> FloatLayout -> ProgressBar @ max: root.total '''
    root = root.__self__
    w3_pb.max = root.total

def __h99_value(root, w3_pb, *args):
    '''Line 427: <FileChooserProgress> -> FloatLayout -> ProgressBar @ value: root.index '''
    root = root.__self__
    w3_pb.value = root.index

def __h100_text(root, w4, *args):
    '''Line 430: <FileChooserProgress> -> FloatLayout -> Label @ text: '%d / %d' % (root.index, root.total) '''
    root = root.__self__
    w4.text = '%d / %d' % (root.index, root.total)

def __h101_height(w4, *args):
    '''Line 432: <FileChooserProgress> -> FloatLayout -> Label @ height: self.texture_size[1] '''
    w4 = w4.__self__
    w4.height = w4.texture_size[1]

def __h102_y(w3_pb, w4, *args):
    '''Line 433: <FileChooserProgress> -> FloatLayout -> Label @ y: pb.center_y - self.height - 8 '''
    w3_pb = w3_pb.__self__
    w4 = w4.__self__
    w4.y = w3_pb.center_y - w4.height - 8

def __h103_pos(g8, root, *args):
    '''Line 414: <FileChooserProgress> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g8.pos = root.pos

def __h104_size(g8, root, *args):
    '''Line 415: <FileChooserProgress> -> Rectangle @ size: self.size '''
    root = root.__self__
    g8.size = root.size

def __h12_on_release(root, *args):
    '''Line 445: <FileChooserProgress> -> AnchorLayout -> Button @ on_release: root.cancel() '''
    root = root.__self__
    root.cancel()


# <FileChooserProgress> L408
__mc[26] = set()
def __r26(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Label = Factory.Label

    __add_root_canvas_root = root.canvas.add

    '''Line 416: <FileChooserProgress> -> Label'''
    w1 = __cls_Label(parent=root, __builder_created=__bfuncs)

    '''Line 420: <FileChooserProgress> -> FloatLayout'''
    w2 = Factory.FloatLayout(parent=root, __builder_created=__bfuncs)

    '''Line 423: <FileChooserProgress> -> FloatLayout -> ProgressBar'''
    w3_pb = Factory.ProgressBar(parent=w2, __builder_created=__bfuncs)

    '''Line 428: <FileChooserProgress> -> FloatLayout -> Label'''
    w4 = __cls_Label(parent=w2, __builder_created=__bfuncs)

    '''Line 437: <FileChooserProgress> -> AnchorLayout'''
    w5 = Factory.AnchorLayout(parent=root, __builder_created=__bfuncs)

    '''Line 441: <FileChooserProgress> -> AnchorLayout -> Button'''
    w6 = Factory.Button(parent=w5, __builder_created=__bfuncs)

    '''Line 411: <FileChooserProgress> -> Color'''
    g7 = Factory.Color()
    __add_root_canvas_root(g7)

    '''Line 413: <FileChooserProgress> -> Rectangle'''
    g8 = Factory.Rectangle()
    __add_root_canvas_root(g8)

    root.ids["pb"] = w3_pb.proxy_ref

    if root.__class__ not in __mc[26]:
        '''Line 409: <FileChooserProgress> @ pos_hint: {'x': 0, 'y': 0} '''
        if not hasattr(root, "pos_hint"):
            root.create_property("pos_hint", ({'x': 0, 'y': 0}))

        __create_property_w1 = w1.create_property
        '''Line 417: <FileChooserProgress> -> Label @ pos_hint: {'x': .2, 'y': .6} '''
        if not hasattr(w1, "pos_hint"):
            __create_property_w1("pos_hint", ({'x': .2, 'y': .6}))
        '''Line 418: <FileChooserProgress> -> Label @ size_hint: .6, .2 '''
        if not hasattr(w1, "size_hint"):
            __create_property_w1("size_hint", (.6, .2))
        '''Line 419: <FileChooserProgress> -> Label @ text: 'Opening %s' % root.path '''
        if not hasattr(w1, "text"):
            __create_property_w1("text", (None))

        __create_property_w2 = w2.create_property
        '''Line 421: <FileChooserProgress> -> FloatLayout @ pos_hint: {'x': .2, 'y': .4} '''
        if not hasattr(w2, "pos_hint"):
            __create_property_w2("pos_hint", ({'x': .2, 'y': .4}))
        '''Line 422: <FileChooserProgress> -> FloatLayout @ size_hint: .6, .2 '''
        if not hasattr(w2, "size_hint"):
            __create_property_w2("size_hint", (.6, .2))

        __create_property_w3_pb = w3_pb.create_property
        '''Line 425: <FileChooserProgress> -> FloatLayout -> ProgressBar @ pos_hint: {'x': 0, 'center_y': .5} '''
        if not hasattr(w3_pb, "pos_hint"):
            __create_property_w3_pb("pos_hint", ({'x': 0, 'center_y': .5}))
        '''Line 426: <FileChooserProgress> -> FloatLayout -> ProgressBar @ max: root.total '''
        if not hasattr(w3_pb, "max"):
            __create_property_w3_pb("max", (None))
        '''Line 427: <FileChooserProgress> -> FloatLayout -> ProgressBar @ value: root.index '''
        if not hasattr(w3_pb, "value"):
            __create_property_w3_pb("value", (None))

        __create_property_w4 = w4.create_property
        '''Line 429: <FileChooserProgress> -> FloatLayout -> Label @ pos_hint: {'x': 0} '''
        if not hasattr(w4, "pos_hint"):
            __create_property_w4("pos_hint", ({'x': 0}))
        '''Line 430: <FileChooserProgress> -> FloatLayout -> Label @ text: '%d / %d' % (root.index, root.total) '''
        if not hasattr(w4, "text"):
            __create_property_w4("text", (None))
        '''Line 431: <FileChooserProgress> -> FloatLayout -> Label @ size_hint_y: None '''
        if not hasattr(w4, "size_hint_y"):
            __create_property_w4("size_hint_y", (None))
        '''Line 432: <FileChooserProgress> -> FloatLayout -> Label @ height: self.texture_size[1] '''
        if not hasattr(w4, "height"):
            __create_property_w4("height", (None))
        '''Line 433: <FileChooserProgress> -> FloatLayout -> Label @ y: pb.center_y - self.height - 8 '''
        if not hasattr(w4, "y"):
            __create_property_w4("y", (None))
        '''Line 434: <FileChooserProgress> -> FloatLayout -> Label @ font_size: '13sp' '''
        if not hasattr(w4, "font_size"):
            __create_property_w4("font_size", ('13sp'))
        '''Line 435: <FileChooserProgress> -> FloatLayout -> Label @ color: (.8, .8, .8, .8) '''
        if not hasattr(w4, "color"):
            __create_property_w4("color", ((.8, .8, .8, .8)))

        __create_property_w5 = w5.create_property
        '''Line 438: <FileChooserProgress> -> AnchorLayout @ pos_hint: {'x': .2, 'y': .2} '''
        if not hasattr(w5, "pos_hint"):
            __create_property_w5("pos_hint", ({'x': .2, 'y': .2}))
        '''Line 439: <FileChooserProgress> -> AnchorLayout @ size_hint: .6, .2 '''
        if not hasattr(w5, "size_hint"):
            __create_property_w5("size_hint", (.6, .2))

        __create_property_w6 = w6.create_property
        '''Line 442: <FileChooserProgress> -> AnchorLayout -> Button @ text: 'Cancel' '''
        if not hasattr(w6, "text"):
            __create_property_w6("text", ('Cancel'))
        '''Line 443: <FileChooserProgress> -> AnchorLayout -> Button @ size_hint: None, None '''
        if not hasattr(w6, "size_hint"):
            __create_property_w6("size_hint", (None))
        '''Line 444: <FileChooserProgress> -> AnchorLayout -> Button @ size: 150, 44 '''
        if not hasattr(w6, "size"):
            __create_property_w6("size", (150, 44))

        __mc[26].add(root.__class__)

    __on_init = [None, ] * 1

    '''Line 445: <FileChooserProgress> -> AnchorLayout -> Button @ on_release: root.cancel() '''
    __prop = w6.property("release", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(w6), None]

    '''Line 409: <FileChooserProgress> @ pos_hint: {'x': 0, 'y': 0} '''
    root.pos_hint = {'x': 0, 'y': 0}

    '''Line 417: <FileChooserProgress> -> Label @ pos_hint: {'x': .2, 'y': .6} '''
    w1.pos_hint = {'x': .2, 'y': .6}

    '''Line 418: <FileChooserProgress> -> Label @ size_hint: .6, .2 '''
    w1.size_hint = .6, .2

    '''Line 421: <FileChooserProgress> -> FloatLayout @ pos_hint: {'x': .2, 'y': .4} '''
    w2.pos_hint = {'x': .2, 'y': .4}

    '''Line 422: <FileChooserProgress> -> FloatLayout @ size_hint: .6, .2 '''
    w2.size_hint = .6, .2

    '''Line 425: <FileChooserProgress> -> FloatLayout -> ProgressBar @ pos_hint: {'x': 0, 'center_y': .5} '''
    w3_pb.pos_hint = {'x': 0, 'center_y': .5}

    '''Line 429: <FileChooserProgress> -> FloatLayout -> Label @ pos_hint: {'x': 0} '''
    w4.pos_hint = {'x': 0}

    '''Line 431: <FileChooserProgress> -> FloatLayout -> Label @ size_hint_y: None '''
    w4.size_hint_y = None

    '''Line 434: <FileChooserProgress> -> FloatLayout -> Label @ font_size: '13sp' '''
    w4.font_size = '13sp'

    '''Line 435: <FileChooserProgress> -> FloatLayout -> Label @ color: (.8, .8, .8, .8) '''
    w4.color = (.8, .8, .8, .8)

    '''Line 438: <FileChooserProgress> -> AnchorLayout @ pos_hint: {'x': .2, 'y': .2} '''
    w5.pos_hint = {'x': .2, 'y': .2}

    '''Line 439: <FileChooserProgress> -> AnchorLayout @ size_hint: .6, .2 '''
    w5.size_hint = .6, .2

    '''Line 442: <FileChooserProgress> -> AnchorLayout -> Button @ text: 'Cancel' '''
    w6.text = 'Cancel'

    '''Line 443: <FileChooserProgress> -> AnchorLayout -> Button @ size_hint: None, None '''
    w6.size_hint = None, None

    '''Line 444: <FileChooserProgress> -> AnchorLayout -> Button @ size: 150, 44 '''
    w6.size = 150, 44

    '''Line 412: <FileChooserProgress> -> Color @ rgba: 0, 0, 0, .8 '''
    g7.rgba = 0, 0, 0, .8

    '''Line 419: <FileChooserProgress> -> Label @ text: 'Opening %s' % root.path '''
    w1.text = 'Opening %s' % root.path

    '''Line 426: <FileChooserProgress> -> FloatLayout -> ProgressBar @ max: root.total '''
    w3_pb.max = root.total

    '''Line 427: <FileChooserProgress> -> FloatLayout -> ProgressBar @ value: root.index '''
    w3_pb.value = root.index

    '''Line 430: <FileChooserProgress> -> FloatLayout -> Label @ text: '%d / %d' % (root.index, root.total) '''
    w4.text = '%d / %d' % (root.index, root.total)

    '''Line 432: <FileChooserProgress> -> FloatLayout -> Label @ height: self.texture_size[1] '''
    w4.height = w4.texture_size[1]

    '''Line 433: <FileChooserProgress> -> FloatLayout -> Label @ y: pb.center_y - self.height - 8 '''
    w4.y = w3_pb.center_y - w4.height - 8

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b26(app, g7, g8, root, w1, w2, w3_pb, w4, w5, w6, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b26, app, g7, g8, root, w1, w2, w3_pb, w4, w5, w6, __on_init))

def __b26(app, g7, g8, root, w1, w2, w3_pb, w4, w5, w6, __on_init):
    __ref_g8 = g8.proxy_ref
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w3_pb = w3_pb.proxy_ref
    __ref_w4 = w4.proxy_ref

    '''Line 414: <FileChooserProgress> -> Rectangle @ pos: self.pos '''
    __delayed___h103_pos = [__h103_pos, __ref_g8, __ref_root, None]
    __delayed_call_fn(__delayed___h103_pos, None, None)

    '''Line 415: <FileChooserProgress> -> Rectangle @ size: self.size '''
    __delayed___h104_size = [__h104_size, __ref_g8, __ref_root, None]
    __delayed_call_fn(__delayed___h104_size, None, None)

    __bound = [None, ] * 7
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "path", __bind_root("path", __h97_text, __ref_root, __ref_w1), __h97_text, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "total", __bind_root("total", __h98_max, __ref_root, __ref_w3_pb), __h98_max, [__ref_root, __ref_w3_pb]]
    __bound[2] = [None, None, None, __ref_root, "index", __bind_root("index", __h99_value, __ref_root, __ref_w3_pb), __h99_value, [__ref_root, __ref_w3_pb]]
    __bound[3] = [None, None, None, __ref_root, "index", __bind_root("index", __h100_text, __ref_root, __ref_w4), __h100_text, [__ref_root, __ref_w4]]
    __bound[4] = [None, None, None, __ref_root, "total", __bind_root("total", __h100_text, __ref_root, __ref_w4), __h100_text, [__ref_root, __ref_w4]]
    __bound[5] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h103_pos), __delayed_call_fn, (__delayed___h103_pos, )]
    __bound[6] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h104_size), __delayed_call_fn, (__delayed___h104_size, )]
    __handlers[w3_pb.uid].append((__bound, (1, 2)))
    __handlers[w4.uid].append((__bound, (3, 4)))
    __handlers[w1.uid].append((__bound, (0, )))
    __handlers[g8.uid].append((__bound, (5, 6)))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w3_pb, "center_y", w3_pb.fast_bind("center_y", __h102_y, __ref_w3_pb, __ref_w4), __h102_y, [__ref_w3_pb, __ref_w4]]
    __handlers[w4.uid].append((__bound, (0, )))

    __bound = [None, ] * 2
    __bind_w4 = w4.fast_bind
    __bound[0] = [None, None, None, __ref_w4, "texture_size", __bind_w4("texture_size", __h101_height, __ref_w4), __h101_height, (__ref_w4, )]
    __bound[1] = [None, None, None, __ref_w4, "height", __bind_w4("height", __h102_y, __ref_w3_pb, __ref_w4), __h102_y, [__ref_w3_pb, __ref_w4]]
    __handlers[w4.uid].append((__bound, (0, 1)))

    '''Line 445: <FileChooserProgress> -> AnchorLayout -> Button @ on_release: root.cancel() '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        w6.fast_bind("on_release", __h12_on_release, __ref_root)
    else:
        w6.fast_bind("release", __h12_on_release, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w6)

    return __partial(__d26, app, g7, g8, root, w1, w2, w3_pb, w4, w5, w6, __on_init)

def __d26(app, g7, g8, root, w1, w2, w3_pb, w4, w5, w6, __on_init):
    args = None, None

    '''Line 419: <FileChooserProgress> -> Label @ text: 'Opening %s' % root.path '''
    w1.text = 'Opening %s' % root.path

    '''Line 426: <FileChooserProgress> -> FloatLayout -> ProgressBar @ max: root.total '''
    w3_pb.max = root.total

    '''Line 427: <FileChooserProgress> -> FloatLayout -> ProgressBar @ value: root.index '''
    w3_pb.value = root.index

    '''Line 430: <FileChooserProgress> -> FloatLayout -> Label @ text: '%d / %d' % (root.index, root.total) '''
    w4.text = '%d / %d' % (root.index, root.total)

    '''Line 432: <FileChooserProgress> -> FloatLayout -> Label @ height: self.texture_size[1] '''
    w4.height = w4.texture_size[1]

    '''Line 433: <FileChooserProgress> -> FloatLayout -> Label @ y: pb.center_y - self.height - 8 '''
    w4.y = w3_pb.center_y - w4.height - 8

    args = None,

    '''Line 445: <FileChooserProgress> -> AnchorLayout -> Button @ on_release: root.cancel() '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(w6) == e:
            root.cancel()

    return (w1, w2, w3_pb, w4, w5, w6)


def __h105_active_norm_pos(root, *args):
    '''Line 451: <Switch> @ active_norm_pos: max(0., min(1., (int(self.active) + self.touch_distance / sp(41)))) '''
    root = root.__self__
    root.active_norm_pos = max(0., min(1., (int(root.active) + root.touch_distance / sp(41))))

def __h106_source(g2, root, *args):
    '''Line 456: <Switch> -> Rectangle @ source: 'atlas://data/images/defaulttheme/switch-background{}'.format('_disabled' if self.disabled else '') '''
    root = root.__self__
    g2.source = 'atlas://data/images/defaulttheme/switch-background{}'.format('_disabled' if root.disabled else '')

def __h107_pos(g2, root, *args):
    '''Line 458: <Switch> -> Rectangle @ pos: int(self.center_x - sp(41)), int(self.center_y - sp(16)) '''
    root = root.__self__
    g2.pos = int(root.center_x - sp(41)), int(root.center_y - sp(16))

def __h108_source(g3, root, *args):
    '''Line 460: <Switch> -> Rectangle @ source: 'atlas://data/images/defaulttheme/switch-button{}'.format('_disabled' if self.disabled else '') '''
    root = root.__self__
    g3.source = 'atlas://data/images/defaulttheme/switch-button{}'.format('_disabled' if root.disabled else '')

def __h109_pos(g3, root, *args):
    '''Line 462: <Switch> -> Rectangle @ pos: int(self.center_x - sp(41) + self.active_norm_pos * sp(41)), int(self.center_y - sp(16)) '''
    root = root.__self__
    g3.pos = int(root.center_x - sp(41) + root.active_norm_pos * sp(41)), int(root.center_y - sp(16))


# <Switch> L450
__mc[27] = set()
def __r27(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Rectangle = Factory.Rectangle

    __add_root_canvas_root = root.canvas.add

    '''Line 453: <Switch> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 455: <Switch> -> Rectangle'''
    g2 = __cls_Rectangle()
    __add_root_canvas_root(g2)

    '''Line 459: <Switch> -> Rectangle'''
    g3 = __cls_Rectangle()
    __add_root_canvas_root(g3)

    if root.__class__ not in __mc[27]:
        '''Line 451: <Switch> @ active_norm_pos: max(0., min(1., (int(self.active) + self.touch_distance / sp(41)))) '''
        if not hasattr(root, "active_norm_pos"):
            root.create_property("active_norm_pos", (None))

        __mc[27].add(root.__class__)

    '''Line 454: <Switch> -> Color @ rgb: 1, 1, 1 '''
    g1.rgb = 1, 1, 1

    '''Line 457: <Switch> -> Rectangle @ size: sp(83), sp(32) '''
    g2.size = sp(83), sp(32)

    '''Line 461: <Switch> -> Rectangle @ size: sp(43), sp(32) '''
    g3.size = sp(43), sp(32)

    '''Line 451: <Switch> @ active_norm_pos: max(0., min(1., (int(self.active) + self.touch_distance / sp(41)))) '''
    root.active_norm_pos = max(0., min(1., (int(root.active) + root.touch_distance / sp(41))))

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b27(app, g1, g2, g3, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b27, app, g1, g2, g3, root))

def __b27(app, g1, g2, g3, root):
    __ref_g2 = g2.proxy_ref
    __ref_g3 = g3.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 456: <Switch> -> Rectangle @ source: 'atlas://data/images/defaulttheme/switch-background{}'.format('_disabled' if self.disabled else '') '''
    __delayed___h106_source = [__h106_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h106_source, None, None)

    '''Line 458: <Switch> -> Rectangle @ pos: int(self.center_x - sp(41)), int(self.center_y - sp(16)) '''
    __delayed___h107_pos = [__h107_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h107_pos, None, None)

    '''Line 460: <Switch> -> Rectangle @ source: 'atlas://data/images/defaulttheme/switch-button{}'.format('_disabled' if self.disabled else '') '''
    __delayed___h108_source = [__h108_source, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h108_source, None, None)

    '''Line 462: <Switch> -> Rectangle @ pos: int(self.center_x - sp(41) + self.active_norm_pos * sp(41)), int(self.center_y - sp(16)) '''
    __delayed___h109_pos = [__h109_pos, __ref_g3, __ref_root, None]
    __delayed_call_fn(__delayed___h109_pos, None, None)

    __bound = [None, ] * 9
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "active", __bind_root("active", __h105_active_norm_pos, __ref_root), __h105_active_norm_pos, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "touch_distance", __bind_root("touch_distance", __h105_active_norm_pos, __ref_root), __h105_active_norm_pos, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h106_source), __delayed_call_fn, (__delayed___h106_source, )]
    __bound[3] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h107_pos), __delayed_call_fn, (__delayed___h107_pos, )]
    __bound[4] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h107_pos), __delayed_call_fn, (__delayed___h107_pos, )]
    __bound[5] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __delayed_call_fn, __delayed___h108_source), __delayed_call_fn, (__delayed___h108_source, )]
    __bound[6] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h109_pos), __delayed_call_fn, (__delayed___h109_pos, )]
    __bound[7] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h109_pos), __delayed_call_fn, (__delayed___h109_pos, )]
    __bound[8] = [None, None, None, __ref_root, "active_norm_pos", __bind_root("active_norm_pos", __delayed_call_fn, __delayed___h109_pos), __delayed_call_fn, (__delayed___h109_pos, )]
    __handlers[g3.uid].append((__bound, (5, 6, 7, 8)))
    __handlers[root.uid].append((__bound, (0, 1)))
    __handlers[g2.uid].append((__bound, (2, 3, 4)))

    return __partial(__d27, app, g1, g2, g3, root)

def __d27(app, g1, g2, g3, root):
    args = None, None

    '''Line 451: <Switch> @ active_norm_pos: max(0., min(1., (int(self.active) + self.touch_distance / sp(41)))) '''
    root.active_norm_pos = max(0., min(1., (int(root.active) + root.touch_distance / sp(41))))

    return ()


def __h110_rgba(g1, root, *args):
    '''Line 469: <ModalView> -> Color @ rgba: root.background_color[:3] + [root.background_color[-1] * self._anim_alpha] '''
    root = root.__self__
    g1.rgba = root.background_color[:3] + [root.background_color[-1] * root._anim_alpha]

def __h111_size(g2, root, *args):
    '''Line 471: <ModalView> -> Rectangle @ size: self._window.size if self._window else (0, 0) '''
    root = root.__self__
    g2.size = root._window.size if root._window else (0, 0)

def __h112_source(g4, root, *args):
    '''Line 476: <ModalView> -> BorderImage @ source: root.background '''
    root = root.__self__
    g4.source = root.background

def __h113_border(g4, root, *args):
    '''Line 477: <ModalView> -> BorderImage @ border: root.border '''
    root = root.__self__
    g4.border = root.border

def __h114_pos(g4, root, *args):
    '''Line 478: <ModalView> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g4.pos = root.pos

def __h115_size(g4, root, *args):
    '''Line 479: <ModalView> -> BorderImage @ size: self.size '''
    root = root.__self__
    g4.size = root.size


# <ModalView> L466
def __r28(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Color = Factory.Color

    __add_root_canvas_root = root.canvas.add

    '''Line 468: <ModalView> -> Color'''
    g1 = __cls_Color()
    __add_root_canvas_root(g1)

    '''Line 470: <ModalView> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_root(g2)

    '''Line 473: <ModalView> -> Color'''
    g3 = __cls_Color()
    __add_root_canvas_root(g3)

    '''Line 475: <ModalView> -> BorderImage'''
    g4 = Factory.BorderImage()
    __add_root_canvas_root(g4)

    '''Line 474: <ModalView> -> Color @ rgb: 1, 1, 1 '''
    g3.rgb = 1, 1, 1

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b28(app, g1, g2, g3, g4, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b28, app, g1, g2, g3, g4, root))

def __b28(app, g1, g2, g3, g4, root):
    __ref_g4 = g4.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 469: <ModalView> -> Color @ rgba: root.background_color[:3] + [root.background_color[-1] * self._anim_alpha] '''
    __delayed___h110_rgba = [__h110_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h110_rgba, None, None)

    '''Line 471: <ModalView> -> Rectangle @ size: self._window.size if self._window else (0, 0) '''
    __delayed___h111_size = [__h111_size, g2.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h111_size, None, None)

    '''Line 476: <ModalView> -> BorderImage @ source: root.background '''
    __delayed___h112_source = [__h112_source, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h112_source, None, None)

    '''Line 477: <ModalView> -> BorderImage @ border: root.border '''
    __delayed___h113_border = [__h113_border, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h113_border, None, None)

    '''Line 478: <ModalView> -> BorderImage @ pos: self.pos '''
    __delayed___h114_pos = [__h114_pos, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h114_pos, None, None)

    '''Line 479: <ModalView> -> BorderImage @ size: self.size '''
    __delayed___h115_size = [__h115_size, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h115_size, None, None)

    __bound = [None, ] * 9
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "_anim_alpha", __bind_root("_anim_alpha", __delayed_call_fn, __delayed___h110_rgba), __delayed_call_fn, (__delayed___h110_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "background_color", __bind_root("background_color", __delayed_call_fn, __delayed___h110_rgba), __delayed_call_fn, (__delayed___h110_rgba, )]
    __bound[2] = [None, None, None, __ref_root, "_window", __bind_root("_window", __delayed_call_fn, __delayed___h111_size), __delayed_call_fn, (__delayed___h111_size, )]
    __bound[3] = [None, None, None, __ref_root, "background", __bind_root("background", __delayed_call_fn, __delayed___h112_source), __delayed_call_fn, (__delayed___h112_source, )]
    __bound[4] = [None, None, None, __ref_root, "border", __bind_root("border", __delayed_call_fn, __delayed___h113_border), __delayed_call_fn, (__delayed___h113_border, )]
    __bound[5] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h114_pos), __delayed_call_fn, (__delayed___h114_pos, )]
    __bound[6] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h115_size), __delayed_call_fn, (__delayed___h115_size, )]
    if root.rebind_property("_window"):
        __bound[7] = [8, 9, None, __ref_root, "_window", __bind_root("_window", __rebind_callback, __bound, 7), __rebind_callback, (__bound, 7)]

    obj_root__window = root._window
    if obj_root__window is not None and isinstance(obj_root__window, (__EventDispatcher, __Observable)):
        __bind_obj_root__window = obj_root__window.fast_bind
        __bound[8] = [None, None, 7, obj_root__window.proxy_ref, "size", __bind_obj_root__window("size", __delayed_call_fn, __delayed___h111_size), __delayed_call_fn, (__delayed___h111_size, )]
    if __bound[7] is not None and __bound[8] is None:
        __bound[8] = [None, None, 7, None, "size", None, __delayed_call_fn, (__delayed___h111_size, )]
    __handlers[g4.uid].append((__bound, (3, 4, 5, 6)))
    __handlers[g2.uid].append((__bound, (2, 8)))
    __handlers[g1.uid].append((__bound, (0, 1)))

    return tuple


def __h116_pos(root, w1, *args):
    '''Line 489: <Popup> -> GridLayout @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos

def __h117_size(root, w1, *args):
    '''Line 490: <Popup> -> GridLayout @ size: root.size '''
    root = root.__self__
    w1.size = root.size

def __h118_text(root, w2, *args):
    '''Line 493: <Popup> -> GridLayout -> Label @ text: root.title '''
    root = root.__self__
    w2.text = root.title

def __h119_color(root, w2, *args):
    '''Line 494: <Popup> -> GridLayout -> Label @ color: root.title_color '''
    root = root.__self__
    w2.color = root.title_color

def __h120_height(w2, *args):
    '''Line 496: <Popup> -> GridLayout -> Label @ height: self.texture_size[1] + dp(16) '''
    w2 = w2.__self__
    w2.height = w2.texture_size[1] + dp(16)

def __h121_text_size(w2, *args):
    '''Line 497: <Popup> -> GridLayout -> Label @ text_size: self.width - dp(16), None '''
    w2 = w2.__self__
    w2.text_size = w2.width - dp(16), None

def __h122_font_size(root, w2, *args):
    '''Line 498: <Popup> -> GridLayout -> Label @ font_size: root.title_size '''
    root = root.__self__
    w2.font_size = root.title_size

def __h123_font_name(root, w2, *args):
    '''Line 499: <Popup> -> GridLayout -> Label @ font_name: root.title_font '''
    root = root.__self__
    w2.font_name = root.title_font

def __h124_halign(root, w2, *args):
    '''Line 500: <Popup> -> GridLayout -> Label @ halign: root.title_align '''
    root = root.__self__
    w2.halign = root.title_align

def __h125_rgba(g4, root, *args):
    '''Line 507: <Popup> -> GridLayout -> Widget -> Color @ rgba: root.separator_color '''
    root = root.__self__
    g4.rgba = root.separator_color

def __h126_pos(g5, root, w3, *args):
    '''Line 509: <Popup> -> GridLayout -> Widget -> Rectangle @ pos: self.x, self.y + root.separator_height / 2. '''
    root = root.__self__
    w3 = w3.__self__
    g5.pos = w3.x, w3.y + root.separator_height / 2.

def __h127_size(g5, root, w3, *args):
    '''Line 510: <Popup> -> GridLayout -> Widget -> Rectangle @ size: self.width, root.separator_height '''
    root = root.__self__
    w3 = w3.__self__
    g5.size = w3.width, root.separator_height


# <Popup> L483
__mc[29] = set()
def __r29(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 485: <Popup> -> GridLayout'''
    w1 = Factory.GridLayout(parent=root, __builder_created=__bfuncs)

    '''Line 492: <Popup> -> GridLayout -> Label'''
    w2 = Factory.Label(parent=w1, __builder_created=__bfuncs)

    '''Line 502: <Popup> -> GridLayout -> Widget'''
    w3 = Factory.Widget(parent=w1, __builder_created=__bfuncs)
    __add_w3_canvas_root = w3.canvas.add

    '''Line 506: <Popup> -> GridLayout -> Widget -> Color'''
    g4 = Factory.Color()
    __add_w3_canvas_root(g4)

    '''Line 508: <Popup> -> GridLayout -> Widget -> Rectangle'''
    g5 = Factory.Rectangle()
    __add_w3_canvas_root(g5)

    '''Line 512: <Popup> -> GridLayout -> BoxLayout'''
    w6_container = Factory.BoxLayout(parent=w1, __builder_created=__bfuncs)

    root.ids["container"] = w6_container.proxy_ref

    if root.__class__ not in __mc[29]:
        '''Line 484: <Popup> @ _container: container '''
        if not hasattr(root, "_container"):
            root.create_property("_container", (None))

        __create_property_w1 = w1.create_property
        '''Line 486: <Popup> -> GridLayout @ padding: '12dp' '''
        if not hasattr(w1, "padding"):
            __create_property_w1("padding", ('12dp'))
        '''Line 487: <Popup> -> GridLayout @ cols: 1 '''
        if not hasattr(w1, "cols"):
            __create_property_w1("cols", (1))
        '''Line 488: <Popup> -> GridLayout @ size_hint: None, None '''
        if not hasattr(w1, "size_hint"):
            __create_property_w1("size_hint", (None))
        '''Line 489: <Popup> -> GridLayout @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 490: <Popup> -> GridLayout @ size: root.size '''
        if not hasattr(w1, "size"):
            __create_property_w1("size", (None))

        __create_property_w2 = w2.create_property
        '''Line 493: <Popup> -> GridLayout -> Label @ text: root.title '''
        if not hasattr(w2, "text"):
            __create_property_w2("text", (None))
        '''Line 494: <Popup> -> GridLayout -> Label @ color: root.title_color '''
        if not hasattr(w2, "color"):
            __create_property_w2("color", (None))
        '''Line 495: <Popup> -> GridLayout -> Label @ size_hint_y: None '''
        if not hasattr(w2, "size_hint_y"):
            __create_property_w2("size_hint_y", (None))
        '''Line 496: <Popup> -> GridLayout -> Label @ height: self.texture_size[1] + dp(16) '''
        if not hasattr(w2, "height"):
            __create_property_w2("height", (None))
        '''Line 497: <Popup> -> GridLayout -> Label @ text_size: self.width - dp(16), None '''
        if not hasattr(w2, "text_size"):
            __create_property_w2("text_size", (None))
        '''Line 498: <Popup> -> GridLayout -> Label @ font_size: root.title_size '''
        if not hasattr(w2, "font_size"):
            __create_property_w2("font_size", (None))
        '''Line 499: <Popup> -> GridLayout -> Label @ font_name: root.title_font '''
        if not hasattr(w2, "font_name"):
            __create_property_w2("font_name", (None))
        '''Line 500: <Popup> -> GridLayout -> Label @ halign: root.title_align '''
        if not hasattr(w2, "halign"):
            __create_property_w2("halign", (None))

        __create_property_w3 = w3.create_property
        '''Line 503: <Popup> -> GridLayout -> Widget @ size_hint_y: None '''
        if not hasattr(w3, "size_hint_y"):
            __create_property_w3("size_hint_y", (None))
        '''Line 504: <Popup> -> GridLayout -> Widget @ height: dp(4) '''
        if not hasattr(w3, "height"):
            __create_property_w3("height", (None))

        __mc[29].add(root.__class__)

    '''Line 484: <Popup> @ _container: container '''
    root._container = w6_container

    '''Line 486: <Popup> -> GridLayout @ padding: '12dp' '''
    w1.padding = '12dp'

    '''Line 487: <Popup> -> GridLayout @ cols: 1 '''
    w1.cols = 1

    '''Line 488: <Popup> -> GridLayout @ size_hint: None, None '''
    w1.size_hint = None, None

    '''Line 495: <Popup> -> GridLayout -> Label @ size_hint_y: None '''
    w2.size_hint_y = None

    '''Line 503: <Popup> -> GridLayout -> Widget @ size_hint_y: None '''
    w3.size_hint_y = None

    '''Line 504: <Popup> -> GridLayout -> Widget @ height: dp(4) '''
    w3.height = dp(4)

    '''Line 489: <Popup> -> GridLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 490: <Popup> -> GridLayout @ size: root.size '''
    w1.size = root.size

    '''Line 493: <Popup> -> GridLayout -> Label @ text: root.title '''
    w2.text = root.title

    '''Line 494: <Popup> -> GridLayout -> Label @ color: root.title_color '''
    w2.color = root.title_color

    '''Line 496: <Popup> -> GridLayout -> Label @ height: self.texture_size[1] + dp(16) '''
    w2.height = w2.texture_size[1] + dp(16)

    '''Line 497: <Popup> -> GridLayout -> Label @ text_size: self.width - dp(16), None '''
    w2.text_size = w2.width - dp(16), None

    '''Line 498: <Popup> -> GridLayout -> Label @ font_size: root.title_size '''
    w2.font_size = root.title_size

    '''Line 499: <Popup> -> GridLayout -> Label @ font_name: root.title_font '''
    w2.font_name = root.title_font

    '''Line 500: <Popup> -> GridLayout -> Label @ halign: root.title_align '''
    w2.halign = root.title_align

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b29(app, g4, g5, root, w1, w2, w3, w6_container))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b29, app, g4, g5, root, w1, w2, w3, w6_container))

def __b29(app, g4, g5, root, w1, w2, w3, w6_container):
    __ref_g5 = g5.proxy_ref
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w2 = w2.proxy_ref
    __ref_w3 = w3.proxy_ref

    '''Line 507: <Popup> -> GridLayout -> Widget -> Color @ rgba: root.separator_color '''
    __delayed___h125_rgba = [__h125_rgba, g4.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h125_rgba, None, None)

    '''Line 509: <Popup> -> GridLayout -> Widget -> Rectangle @ pos: self.x, self.y + root.separator_height / 2. '''
    __delayed___h126_pos = [__h126_pos, __ref_g5, __ref_root, __ref_w3, None]
    __delayed_call_fn(__delayed___h126_pos, None, None)

    '''Line 510: <Popup> -> GridLayout -> Widget -> Rectangle @ size: self.width, root.separator_height '''
    __delayed___h127_size = [__h127_size, __ref_g5, __ref_root, __ref_w3, None]
    __delayed_call_fn(__delayed___h127_size, None, None)

    __bound = [None, ] * 10
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h116_pos, __ref_root, __ref_w1), __h116_pos, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "size", __bind_root("size", __h117_size, __ref_root, __ref_w1), __h117_size, [__ref_root, __ref_w1]]
    __bound[2] = [None, None, None, __ref_root, "title", __bind_root("title", __h118_text, __ref_root, __ref_w2), __h118_text, [__ref_root, __ref_w2]]
    __bound[3] = [None, None, None, __ref_root, "title_color", __bind_root("title_color", __h119_color, __ref_root, __ref_w2), __h119_color, [__ref_root, __ref_w2]]
    __bound[4] = [None, None, None, __ref_root, "title_size", __bind_root("title_size", __h122_font_size, __ref_root, __ref_w2), __h122_font_size, [__ref_root, __ref_w2]]
    __bound[5] = [None, None, None, __ref_root, "title_font", __bind_root("title_font", __h123_font_name, __ref_root, __ref_w2), __h123_font_name, [__ref_root, __ref_w2]]
    __bound[6] = [None, None, None, __ref_root, "title_align", __bind_root("title_align", __h124_halign, __ref_root, __ref_w2), __h124_halign, [__ref_root, __ref_w2]]
    __bound[7] = [None, None, None, __ref_root, "separator_color", __bind_root("separator_color", __delayed_call_fn, __delayed___h125_rgba), __delayed_call_fn, (__delayed___h125_rgba, )]
    __bound[8] = [None, None, None, __ref_root, "separator_height", __bind_root("separator_height", __delayed_call_fn, __delayed___h126_pos), __delayed_call_fn, (__delayed___h126_pos, )]
    __bound[9] = [None, None, None, __ref_root, "separator_height", __bind_root("separator_height", __delayed_call_fn, __delayed___h127_size), __delayed_call_fn, (__delayed___h127_size, )]
    __handlers[g5.uid].append((__bound, (8, 9)))
    __handlers[g4.uid].append((__bound, (7, )))
    __handlers[w2.uid].append((__bound, (2, 3, 4, 5, 6)))
    __handlers[w1.uid].append((__bound, (0, 1)))

    __bound = [None, ] * 2
    __bind_w2 = w2.fast_bind
    __bound[0] = [None, None, None, __ref_w2, "texture_size", __bind_w2("texture_size", __h120_height, __ref_w2), __h120_height, (__ref_w2, )]
    __bound[1] = [None, None, None, __ref_w2, "width", __bind_w2("width", __h121_text_size, __ref_w2), __h121_text_size, (__ref_w2, )]
    __handlers[w2.uid].append((__bound, (0, 1)))

    __bound = [None, ] * 3
    __bind_w3 = w3.fast_bind
    __bound[0] = [None, None, None, __ref_w3, "x", __bind_w3("x", __delayed_call_fn, __delayed___h126_pos), __delayed_call_fn, (__delayed___h126_pos, )]
    __bound[1] = [None, None, None, __ref_w3, "y", __bind_w3("y", __delayed_call_fn, __delayed___h126_pos), __delayed_call_fn, (__delayed___h126_pos, )]
    __bound[2] = [None, None, None, __ref_w3, "width", __bind_w3("width", __delayed_call_fn, __delayed___h127_size), __delayed_call_fn, (__delayed___h127_size, )]
    __handlers[g5.uid].append((__bound, (0, 1, 2)))

    return __partial(__d29, app, g4, g5, root, w1, w2, w3, w6_container)

def __d29(app, g4, g5, root, w1, w2, w3, w6_container):
    args = None, None

    '''Line 489: <Popup> -> GridLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 490: <Popup> -> GridLayout @ size: root.size '''
    w1.size = root.size

    '''Line 493: <Popup> -> GridLayout -> Label @ text: root.title '''
    w2.text = root.title

    '''Line 494: <Popup> -> GridLayout -> Label @ color: root.title_color '''
    w2.color = root.title_color

    '''Line 496: <Popup> -> GridLayout -> Label @ height: self.texture_size[1] + dp(16) '''
    w2.height = w2.texture_size[1] + dp(16)

    '''Line 497: <Popup> -> GridLayout -> Label @ text_size: self.width - dp(16), None '''
    w2.text_size = w2.width - dp(16), None

    '''Line 498: <Popup> -> GridLayout -> Label @ font_size: root.title_size '''
    w2.font_size = root.title_size

    '''Line 499: <Popup> -> GridLayout -> Label @ font_name: root.title_font '''
    w2.font_name = root.title_font

    '''Line 500: <Popup> -> GridLayout -> Label @ halign: root.title_align '''
    w2.halign = root.title_align

    return (w1, w2, w3, w6_container)


# <SpinnerOption> L519
__mc[30] = set()
def __r30(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[30]:
        __create_property_root = root.create_property
        '''Line 520: <SpinnerOption> @ size_hint_y: None '''
        if not hasattr(root, "size_hint_y"):
            __create_property_root("size_hint_y", (None))
        '''Line 521: <SpinnerOption> @ height: '48dp' '''
        if not hasattr(root, "height"):
            __create_property_root("height", ('48dp'))

        __mc[30].add(root.__class__)

    '''Line 520: <SpinnerOption> @ size_hint_y: None '''
    root.size_hint_y = None

    '''Line 521: <SpinnerOption> @ height: '48dp' '''
    root.height = '48dp'


# <Spinner> L523
__mc[31] = set()
def __r31(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[31]:
        __create_property_root = root.create_property
        '''Line 524: <Spinner> @ background_normal: 'atlas://data/images/defaulttheme/spinner' '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", ('atlas://data/images/defaulttheme/spinner'))
        '''Line 525: <Spinner> @ background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled' '''
        if not hasattr(root, "background_disabled_normal"):
            __create_property_root("background_disabled_normal", ('atlas://data/images/defaulttheme/spinner_disabled'))
        '''Line 526: <Spinner> @ background_down: 'atlas://data/images/defaulttheme/spinner_pressed' '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", ('atlas://data/images/defaulttheme/spinner_pressed'))

        __mc[31].add(root.__class__)

    '''Line 524: <Spinner> @ background_normal: 'atlas://data/images/defaulttheme/spinner' '''
    root.background_normal = 'atlas://data/images/defaulttheme/spinner'

    '''Line 525: <Spinner> @ background_disabled_normal: 'atlas://data/images/defaulttheme/spinner_disabled' '''
    root.background_disabled_normal = 'atlas://data/images/defaulttheme/spinner_disabled'

    '''Line 526: <Spinner> @ background_down: 'atlas://data/images/defaulttheme/spinner_pressed' '''
    root.background_down = 'atlas://data/images/defaulttheme/spinner_pressed'


def __h128_rgba(g1, root, *args):
    '''Line 538: <ActionBar> -> Color @ rgba: self.background_color '''
    root = root.__self__
    g1.rgba = root.background_color

def __h129_border(g2, root, *args):
    '''Line 540: <ActionBar> -> BorderImage @ border: root.border '''
    root = root.__self__
    g2.border = root.border

def __h130_pos(g2, root, *args):
    '''Line 541: <ActionBar> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h131_size(g2, root, *args):
    '''Line 542: <ActionBar> -> BorderImage @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h132_source(g2, root, *args):
    '''Line 543: <ActionBar> -> BorderImage @ source: self.background_image '''
    root = root.__self__
    g2.source = root.background_image


# <ActionBar> L532
__mc[32] = set()
def __r32(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 537: <ActionBar> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 539: <ActionBar> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_root(g2)

    if root.__class__ not in __mc[32]:
        __create_property_root = root.create_property
        '''Line 533: <ActionBar> @ height: '48dp' '''
        if not hasattr(root, "height"):
            __create_property_root("height", ('48dp'))
        '''Line 534: <ActionBar> @ size_hint_y: None '''
        if not hasattr(root, "size_hint_y"):
            __create_property_root("size_hint_y", (None))
        '''Line 535: <ActionBar> @ spacing: '4dp' '''
        if not hasattr(root, "spacing"):
            __create_property_root("spacing", ('4dp'))

        __mc[32].add(root.__class__)

    '''Line 533: <ActionBar> @ height: '48dp' '''
    root.height = '48dp'

    '''Line 534: <ActionBar> @ size_hint_y: None '''
    root.size_hint_y = None

    '''Line 535: <ActionBar> @ spacing: '4dp' '''
    root.spacing = '4dp'

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b32(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b32, app, g1, g2, root))

def __b32(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 538: <ActionBar> -> Color @ rgba: self.background_color '''
    __delayed___h128_rgba = [__h128_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h128_rgba, None, None)

    '''Line 540: <ActionBar> -> BorderImage @ border: root.border '''
    __delayed___h129_border = [__h129_border, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h129_border, None, None)

    '''Line 541: <ActionBar> -> BorderImage @ pos: self.pos '''
    __delayed___h130_pos = [__h130_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h130_pos, None, None)

    '''Line 542: <ActionBar> -> BorderImage @ size: self.size '''
    __delayed___h131_size = [__h131_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h131_size, None, None)

    '''Line 543: <ActionBar> -> BorderImage @ source: self.background_image '''
    __delayed___h132_source = [__h132_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h132_source, None, None)

    __bound = [None, ] * 5
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "background_color", __bind_root("background_color", __delayed_call_fn, __delayed___h128_rgba), __delayed_call_fn, (__delayed___h128_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "border", __bind_root("border", __delayed_call_fn, __delayed___h129_border), __delayed_call_fn, (__delayed___h129_border, )]
    __bound[2] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h130_pos), __delayed_call_fn, (__delayed___h130_pos, )]
    __bound[3] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h131_size), __delayed_call_fn, (__delayed___h131_size, )]
    __bound[4] = [None, None, None, __ref_root, "background_image", __bind_root("background_image", __delayed_call_fn, __delayed___h132_source), __delayed_call_fn, (__delayed___h132_source, )]
    __handlers[g2.uid].append((__bound, (1, 2, 3, 4)))
    __handlers[g1.uid].append((__bound, (0, )))

    return tuple


def __h133_rgba(g1, root, *args):
    '''Line 549: <ActionView> -> Color @ rgba: self.background_color '''
    root = root.__self__
    g1.rgba = root.background_color

def __h134_pos(g2, root, *args):
    '''Line 551: <ActionView> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h135_size(g2, root, *args):
    '''Line 552: <ActionView> -> BorderImage @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h136_source(g2, root, *args):
    '''Line 553: <ActionView> -> BorderImage @ source: self.background_image '''
    root = root.__self__
    g2.source = root.background_image


# <ActionView> L545
__mc[33] = set()
def __r33(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 548: <ActionView> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 550: <ActionView> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_root(g2)

    if root.__class__ not in __mc[33]:
        '''Line 546: <ActionView> @ orientation: 'horizontal' '''
        if not hasattr(root, "orientation"):
            root.create_property("orientation", ('horizontal'))

        __mc[33].add(root.__class__)

    '''Line 546: <ActionView> @ orientation: 'horizontal' '''
    root.orientation = 'horizontal'

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b33(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b33, app, g1, g2, root))

def __b33(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 549: <ActionView> -> Color @ rgba: self.background_color '''
    __delayed___h133_rgba = [__h133_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h133_rgba, None, None)

    '''Line 551: <ActionView> -> BorderImage @ pos: self.pos '''
    __delayed___h134_pos = [__h134_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h134_pos, None, None)

    '''Line 552: <ActionView> -> BorderImage @ size: self.size '''
    __delayed___h135_size = [__h135_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h135_size, None, None)

    '''Line 553: <ActionView> -> BorderImage @ source: self.background_image '''
    __delayed___h136_source = [__h136_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h136_source, None, None)

    __bound = [None, ] * 4
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "background_color", __bind_root("background_color", __delayed_call_fn, __delayed___h133_rgba), __delayed_call_fn, (__delayed___h133_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h134_pos), __delayed_call_fn, (__delayed___h134_pos, )]
    __bound[2] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h135_size), __delayed_call_fn, (__delayed___h135_size, )]
    __bound[3] = [None, None, None, __ref_root, "background_image", __bind_root("background_image", __delayed_call_fn, __delayed___h136_source), __delayed_call_fn, (__delayed___h136_source, )]
    __handlers[g2.uid].append((__bound, (1, 2, 3)))
    __handlers[g1.uid].append((__bound, (0, )))

    return tuple


def __h137_width(root, *args):
    '''Line 558: <ActionSeparator> @ width: self.minimum_width '''
    root = root.__self__
    root.width = root.minimum_width

def __h138_pos(g1, root, *args):
    '''Line 561: <ActionSeparator> -> Rectangle @ pos: self.x, self.y + sp(4) '''
    root = root.__self__
    g1.pos = root.x, root.y + sp(4)

def __h139_size(g1, root, *args):
    '''Line 562: <ActionSeparator> -> Rectangle @ size: self.width, self.height - sp(8) '''
    root = root.__self__
    g1.size = root.width, root.height - sp(8)

def __h140_source(g1, root, *args):
    '''Line 563: <ActionSeparator> -> Rectangle @ source: self.background_image '''
    root = root.__self__
    g1.source = root.background_image


# <ActionSeparator> L555
__mc[34] = set()
def __r34(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 560: <ActionSeparator> -> Rectangle'''
    g1 = Factory.Rectangle()
    root.canvas.add(g1)

    if root.__class__ not in __mc[34]:
        __create_property_root = root.create_property
        '''Line 556: <ActionSeparator> @ size_hint_x: None '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (None))
        '''Line 557: <ActionSeparator> @ minimum_width: '2sp' '''
        if not hasattr(root, "minimum_width"):
            __create_property_root("minimum_width", ('2sp'))
        '''Line 558: <ActionSeparator> @ width: self.minimum_width '''
        if not hasattr(root, "width"):
            __create_property_root("width", (None))

        __mc[34].add(root.__class__)

    '''Line 556: <ActionSeparator> @ size_hint_x: None '''
    root.size_hint_x = None

    '''Line 557: <ActionSeparator> @ minimum_width: '2sp' '''
    root.minimum_width = '2sp'

    '''Line 558: <ActionSeparator> @ width: self.minimum_width '''
    root.width = root.minimum_width

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b34(app, g1, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b34, app, g1, root))

def __b34(app, g1, root):
    __ref_g1 = g1.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 561: <ActionSeparator> -> Rectangle @ pos: self.x, self.y + sp(4) '''
    __delayed___h138_pos = [__h138_pos, __ref_g1, __ref_root, None]
    __delayed_call_fn(__delayed___h138_pos, None, None)

    '''Line 562: <ActionSeparator> -> Rectangle @ size: self.width, self.height - sp(8) '''
    __delayed___h139_size = [__h139_size, __ref_g1, __ref_root, None]
    __delayed_call_fn(__delayed___h139_size, None, None)

    '''Line 563: <ActionSeparator> -> Rectangle @ source: self.background_image '''
    __delayed___h140_source = [__h140_source, __ref_g1, __ref_root, None]
    __delayed_call_fn(__delayed___h140_source, None, None)

    __bound = [None, ] * 6
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "minimum_width", __bind_root("minimum_width", __h137_width, __ref_root), __h137_width, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h138_pos), __delayed_call_fn, (__delayed___h138_pos, )]
    __bound[2] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h138_pos), __delayed_call_fn, (__delayed___h138_pos, )]
    __bound[3] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h139_size), __delayed_call_fn, (__delayed___h139_size, )]
    __bound[4] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h139_size), __delayed_call_fn, (__delayed___h139_size, )]
    __bound[5] = [None, None, None, __ref_root, "background_image", __bind_root("background_image", __delayed_call_fn, __delayed___h140_source), __delayed_call_fn, (__delayed___h140_source, )]
    __handlers[root.uid].append((__bound, (0, )))
    __handlers[g1.uid].append((__bound, (1, 2, 3, 4, 5)))

    return __partial(__d34, app, g1, root)

def __d34(app, g1, root):
    args = None, None

    '''Line 558: <ActionSeparator> @ width: self.minimum_width '''
    root.width = root.minimum_width

    return ()


def __h141_background_normal(root, *args):
    '''Line 566: <ActionButton,ActionToggleButton> @ background_normal: 'atlas://data/images/defaulttheme/' + ('action_bar' if self.inside_group else 'action_item') '''
    root = root.__self__
    root.background_normal = 'atlas://data/images/defaulttheme/' + ('action_bar' if root.inside_group else 'action_item')

def __h142_size_hint_x(root, *args):
    '''Line 568: <ActionButton,ActionToggleButton> @ size_hint_x: None if not root.inside_group else 1 '''
    root = root.__self__
    root.size_hint_x = None if not root.inside_group else 1

def __h143_width(root, *args):
    '''Line 569: <ActionButton,ActionToggleButton> @ width: [dp(48) if (root.icon and not root.inside_group) else max(dp(48), (self.texture_size[0] + dp(32))), self.size_hint_x][0] '''
    root = root.__self__
    root.width = [dp(48) if (root.icon and not root.inside_group) else max(dp(48), (root.texture_size[0] + dp(32))), root.size_hint_x][0]

def __h144_color(root, *args):
    '''Line 570: <ActionButton,ActionToggleButton> @ color: self.color[:3] + [0 if (root.icon and not root.inside_group) else 1] '''
    root = root.__self__
    root.color = root.color[:3] + [0 if (root.icon and not root.inside_group) else 1]

def __h145_opacity(root, w1, *args):
    '''Line 574: <ActionButton,ActionToggleButton> -> Image @ opacity: 1 if (root.icon and not root.inside_group) else 0 '''
    root = root.__self__
    w1.opacity = 1 if (root.icon and not root.inside_group) else 0

def __h146_source(root, w1, *args):
    '''Line 575: <ActionButton,ActionToggleButton> -> Image @ source: root.icon '''
    root = root.__self__
    w1.source = root.icon

def __h147_mipmap(root, w1, *args):
    '''Line 576: <ActionButton,ActionToggleButton> -> Image @ mipmap: root.mipmap '''
    root = root.__self__
    w1.mipmap = root.mipmap

def __h148_pos(root, w1, *args):
    '''Line 577: <ActionButton,ActionToggleButton> -> Image @ pos: root.x + dp(4), root.y + dp(4) '''
    root = root.__self__
    w1.pos = root.x + dp(4), root.y + dp(4)

def __h149_size(root, w1, *args):
    '''Line 578: <ActionButton,ActionToggleButton> -> Image @ size: root.width - dp(8), root.height - sp(8) '''
    root = root.__self__
    w1.size = root.width - dp(8), root.height - sp(8)


# <ActionButton,ActionToggleButton> L565
__mc[35] = set()
def __r35(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 572: <ActionButton,ActionToggleButton> -> Image'''
    w1 = Factory.Image(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[35]:
        __create_property_root = root.create_property
        '''Line 566: <ActionButton,ActionToggleButton> @ background_normal: 'atlas://data/images/defaulttheme/' + ('action_bar' if self.inside_group else 'action_item') '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", (None))
        '''Line 567: <ActionButton,ActionToggleButton> @ background_down: 'atlas://data/images/defaulttheme/action_item_down' '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", ('atlas://data/images/defaulttheme/action_item_down'))
        '''Line 568: <ActionButton,ActionToggleButton> @ size_hint_x: None if not root.inside_group else 1 '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (None))
        '''Line 569: <ActionButton,ActionToggleButton> @ width: [dp(48) if (root.icon and not root.inside_group) else max(dp(48), (self.texture_size[0] + dp(32))), self.size_hint_x][0] '''
        if not hasattr(root, "width"):
            __create_property_root("width", (None))
        '''Line 570: <ActionButton,ActionToggleButton> @ color: self.color[:3] + [0 if (root.icon and not root.inside_group) else 1] '''
        if not hasattr(root, "color"):
            __create_property_root("color", (None))

        __create_property_w1 = w1.create_property
        '''Line 573: <ActionButton,ActionToggleButton> -> Image @ allow_stretch: True '''
        if not hasattr(w1, "allow_stretch"):
            __create_property_w1("allow_stretch", (None))
        '''Line 574: <ActionButton,ActionToggleButton> -> Image @ opacity: 1 if (root.icon and not root.inside_group) else 0 '''
        if not hasattr(w1, "opacity"):
            __create_property_w1("opacity", (None))
        '''Line 575: <ActionButton,ActionToggleButton> -> Image @ source: root.icon '''
        if not hasattr(w1, "source"):
            __create_property_w1("source", (None))
        '''Line 576: <ActionButton,ActionToggleButton> -> Image @ mipmap: root.mipmap '''
        if not hasattr(w1, "mipmap"):
            __create_property_w1("mipmap", (None))
        '''Line 577: <ActionButton,ActionToggleButton> -> Image @ pos: root.x + dp(4), root.y + dp(4) '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 578: <ActionButton,ActionToggleButton> -> Image @ size: root.width - dp(8), root.height - sp(8) '''
        if not hasattr(w1, "size"):
            __create_property_w1("size", (None))

        __mc[35].add(root.__class__)

    '''Line 567: <ActionButton,ActionToggleButton> @ background_down: 'atlas://data/images/defaulttheme/action_item_down' '''
    root.background_down = 'atlas://data/images/defaulttheme/action_item_down'

    '''Line 573: <ActionButton,ActionToggleButton> -> Image @ allow_stretch: True '''
    w1.allow_stretch = True

    '''Line 566: <ActionButton,ActionToggleButton> @ background_normal: 'atlas://data/images/defaulttheme/' + ('action_bar' if self.inside_group else 'action_item') '''
    root.background_normal = 'atlas://data/images/defaulttheme/' + ('action_bar' if root.inside_group else 'action_item')

    '''Line 568: <ActionButton,ActionToggleButton> @ size_hint_x: None if not root.inside_group else 1 '''
    root.size_hint_x = None if not root.inside_group else 1

    '''Line 569: <ActionButton,ActionToggleButton> @ width: [dp(48) if (root.icon and not root.inside_group) else max(dp(48), (self.texture_size[0] + dp(32))), self.size_hint_x][0] '''
    root.width = [dp(48) if (root.icon and not root.inside_group) else max(dp(48), (root.texture_size[0] + dp(32))), root.size_hint_x][0]

    '''Line 570: <ActionButton,ActionToggleButton> @ color: self.color[:3] + [0 if (root.icon and not root.inside_group) else 1] '''
    root.color = root.color[:3] + [0 if (root.icon and not root.inside_group) else 1]

    '''Line 574: <ActionButton,ActionToggleButton> -> Image @ opacity: 1 if (root.icon and not root.inside_group) else 0 '''
    w1.opacity = 1 if (root.icon and not root.inside_group) else 0

    '''Line 575: <ActionButton,ActionToggleButton> -> Image @ source: root.icon '''
    w1.source = root.icon

    '''Line 576: <ActionButton,ActionToggleButton> -> Image @ mipmap: root.mipmap '''
    w1.mipmap = root.mipmap

    '''Line 577: <ActionButton,ActionToggleButton> -> Image @ pos: root.x + dp(4), root.y + dp(4) '''
    w1.pos = root.x + dp(4), root.y + dp(4)

    '''Line 578: <ActionButton,ActionToggleButton> -> Image @ size: root.width - dp(8), root.height - sp(8) '''
    w1.size = root.width - dp(8), root.height - sp(8)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b35(app, root, w1))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b35, app, root, w1))

def __b35(app, root, w1):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    __bound = [None, ] * 17
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "inside_group", __bind_root("inside_group", __h141_background_normal, __ref_root), __h141_background_normal, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "inside_group", __bind_root("inside_group", __h142_size_hint_x, __ref_root), __h142_size_hint_x, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "size_hint_x", __bind_root("size_hint_x", __h143_width, __ref_root), __h143_width, (__ref_root, )]
    __bound[3] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h143_width, __ref_root), __h143_width, (__ref_root, )]
    __bound[4] = [None, None, None, __ref_root, "icon", __bind_root("icon", __h143_width, __ref_root), __h143_width, (__ref_root, )]
    __bound[5] = [None, None, None, __ref_root, "inside_group", __bind_root("inside_group", __h143_width, __ref_root), __h143_width, (__ref_root, )]
    __bound[6] = [None, None, None, __ref_root, "color", __bind_root("color", __h144_color, __ref_root), __h144_color, (__ref_root, )]
    __bound[7] = [None, None, None, __ref_root, "icon", __bind_root("icon", __h144_color, __ref_root), __h144_color, (__ref_root, )]
    __bound[8] = [None, None, None, __ref_root, "inside_group", __bind_root("inside_group", __h144_color, __ref_root), __h144_color, (__ref_root, )]
    __bound[9] = [None, None, None, __ref_root, "icon", __bind_root("icon", __h145_opacity, __ref_root, __ref_w1), __h145_opacity, [__ref_root, __ref_w1]]
    __bound[10] = [None, None, None, __ref_root, "inside_group", __bind_root("inside_group", __h145_opacity, __ref_root, __ref_w1), __h145_opacity, [__ref_root, __ref_w1]]
    __bound[11] = [None, None, None, __ref_root, "icon", __bind_root("icon", __h146_source, __ref_root, __ref_w1), __h146_source, [__ref_root, __ref_w1]]
    __bound[12] = [None, None, None, __ref_root, "mipmap", __bind_root("mipmap", __h147_mipmap, __ref_root, __ref_w1), __h147_mipmap, [__ref_root, __ref_w1]]
    __bound[13] = [None, None, None, __ref_root, "x", __bind_root("x", __h148_pos, __ref_root, __ref_w1), __h148_pos, [__ref_root, __ref_w1]]
    __bound[14] = [None, None, None, __ref_root, "y", __bind_root("y", __h148_pos, __ref_root, __ref_w1), __h148_pos, [__ref_root, __ref_w1]]
    __bound[15] = [None, None, None, __ref_root, "width", __bind_root("width", __h149_size, __ref_root, __ref_w1), __h149_size, [__ref_root, __ref_w1]]
    __bound[16] = [None, None, None, __ref_root, "height", __bind_root("height", __h149_size, __ref_root, __ref_w1), __h149_size, [__ref_root, __ref_w1]]
    __handlers[root.uid].append((__bound, (0, 1, 2, 3, 4, 5, 6, 7, 8)))
    __handlers[w1.uid].append((__bound, (9, 10, 11, 12, 13, 14, 15, 16)))

    return __partial(__d35, app, root, w1)

def __d35(app, root, w1):
    args = None, None

    '''Line 566: <ActionButton,ActionToggleButton> @ background_normal: 'atlas://data/images/defaulttheme/' + ('action_bar' if self.inside_group else 'action_item') '''
    root.background_normal = 'atlas://data/images/defaulttheme/' + ('action_bar' if root.inside_group else 'action_item')

    '''Line 568: <ActionButton,ActionToggleButton> @ size_hint_x: None if not root.inside_group else 1 '''
    root.size_hint_x = None if not root.inside_group else 1

    '''Line 569: <ActionButton,ActionToggleButton> @ width: [dp(48) if (root.icon and not root.inside_group) else max(dp(48), (self.texture_size[0] + dp(32))), self.size_hint_x][0] '''
    root.width = [dp(48) if (root.icon and not root.inside_group) else max(dp(48), (root.texture_size[0] + dp(32))), root.size_hint_x][0]

    '''Line 570: <ActionButton,ActionToggleButton> @ color: self.color[:3] + [0 if (root.icon and not root.inside_group) else 1] '''
    root.color = root.color[:3] + [0 if (root.icon and not root.inside_group) else 1]

    '''Line 574: <ActionButton,ActionToggleButton> -> Image @ opacity: 1 if (root.icon and not root.inside_group) else 0 '''
    w1.opacity = 1 if (root.icon and not root.inside_group) else 0

    '''Line 575: <ActionButton,ActionToggleButton> -> Image @ source: root.icon '''
    w1.source = root.icon

    '''Line 576: <ActionButton,ActionToggleButton> -> Image @ mipmap: root.mipmap '''
    w1.mipmap = root.mipmap

    '''Line 577: <ActionButton,ActionToggleButton> -> Image @ pos: root.x + dp(4), root.y + dp(4) '''
    w1.pos = root.x + dp(4), root.y + dp(4)

    '''Line 578: <ActionButton,ActionToggleButton> -> Image @ size: root.width - dp(8), root.height - sp(8) '''
    w1.size = root.width - dp(8), root.height - sp(8)

    return (w1, )


def __h150_size_hint_x(root, *args):
    '''Line 581: <ActionLabel> @ size_hint_x: None if not root.inside_group else 1 '''
    root = root.__self__
    root.size_hint_x = None if not root.inside_group else 1

def __h151_width(root, *args):
    '''Line 582: <ActionLabel> @ width: self.texture_size[0] + dp(32) '''
    root = root.__self__
    root.width = root.texture_size[0] + dp(32)


# <ActionLabel> L580
__mc[36] = set()
def __r36(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    if root.__class__ not in __mc[36]:
        __create_property_root = root.create_property
        '''Line 581: <ActionLabel> @ size_hint_x: None if not root.inside_group else 1 '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (None))
        '''Line 582: <ActionLabel> @ width: self.texture_size[0] + dp(32) '''
        if not hasattr(root, "width"):
            __create_property_root("width", (None))

        __mc[36].add(root.__class__)

    '''Line 581: <ActionLabel> @ size_hint_x: None if not root.inside_group else 1 '''
    root.size_hint_x = None if not root.inside_group else 1

    '''Line 582: <ActionLabel> @ width: self.texture_size[0] + dp(32) '''
    root.width = root.texture_size[0] + dp(32)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b36(app, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b36, app, root))

def __b36(app, root):
    __ref_root = root.proxy_ref

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "inside_group", __bind_root("inside_group", __h150_size_hint_x, __ref_root), __h150_size_hint_x, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h151_width, __ref_root), __h151_width, (__ref_root, )]
    __handlers[root.uid].append((__bound, (0, 1)))

    return __partial(__d36, app, root)

def __d36(app, root):
    args = None, None

    '''Line 581: <ActionLabel> @ size_hint_x: None if not root.inside_group else 1 '''
    root.size_hint_x = None if not root.inside_group else 1

    '''Line 582: <ActionLabel> @ width: self.texture_size[0] + dp(32) '''
    root.width = root.texture_size[0] + dp(32)

    return ()


def __h152_width(root, *args):
    '''Line 586: <ActionGroup> @ width: self.texture_size[0] + dp(32) '''
    root = root.__self__
    root.width = root.texture_size[0] + dp(32)


# <ActionGroup> L584
__mc[37] = set()
def __r37(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    if root.__class__ not in __mc[37]:
        __create_property_root = root.create_property
        '''Line 585: <ActionGroup> @ size_hint_x: None '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (None))
        '''Line 586: <ActionGroup> @ width: self.texture_size[0] + dp(32) '''
        if not hasattr(root, "width"):
            __create_property_root("width", (None))

        __mc[37].add(root.__class__)

    '''Line 585: <ActionGroup> @ size_hint_x: None '''
    root.size_hint_x = None

    '''Line 586: <ActionGroup> @ width: self.texture_size[0] + dp(32) '''
    root.width = root.texture_size[0] + dp(32)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b37(app, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b37, app, root))

def __b37(app, root):
    __ref_root = root.proxy_ref

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_root, "texture_size", root.fast_bind("texture_size", __h152_width, __ref_root), __h152_width, (__ref_root, )]
    __handlers[root.uid].append((__bound, (0, )))

    return __partial(__d37, app, root)

def __d37(app, root):
    args = None, None

    '''Line 586: <ActionGroup> @ width: self.texture_size[0] + dp(32) '''
    root.width = root.texture_size[0] + dp(32)

    return ()


def __h153_background_normal(root, *args):
    '''Line 589: <ActionCheck> @ background_normal: 'atlas://data/images/defaulttheme/action_bar' if self.inside_group else 'atlas://data/images/defaulttheme/action_item' '''
    root = root.__self__
    root.background_normal = 'atlas://data/images/defaulttheme/action_bar' if root.inside_group else 'atlas://data/images/defaulttheme/action_item'


# <ActionCheck> L588
__mc[38] = set()
def __r38(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    if root.__class__ not in __mc[38]:
        '''Line 589: <ActionCheck> @ background_normal: 'atlas://data/images/defaulttheme/action_bar' if self.inside_group else 'atlas://data/images/defaulttheme/action_item' '''
        if not hasattr(root, "background_normal"):
            root.create_property("background_normal", (None))

        __mc[38].add(root.__class__)

    '''Line 589: <ActionCheck> @ background_normal: 'atlas://data/images/defaulttheme/action_bar' if self.inside_group else 'atlas://data/images/defaulttheme/action_item' '''
    root.background_normal = 'atlas://data/images/defaulttheme/action_bar' if root.inside_group else 'atlas://data/images/defaulttheme/action_item'

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b38(app, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b38, app, root))

def __b38(app, root):
    __ref_root = root.proxy_ref

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_root, "inside_group", root.fast_bind("inside_group", __h153_background_normal, __ref_root), __h153_background_normal, (__ref_root, )]
    __handlers[root.uid].append((__bound, (0, )))

    return __partial(__d38, app, root)

def __d38(app, root):
    args = None, None

    '''Line 589: <ActionCheck> @ background_normal: 'atlas://data/images/defaulttheme/action_bar' if self.inside_group else 'atlas://data/images/defaulttheme/action_item' '''
    root.background_normal = 'atlas://data/images/defaulttheme/action_bar' if root.inside_group else 'atlas://data/images/defaulttheme/action_item'

    return ()


# <ActionPreviousImage@Image> L591
__mc[39] = set()
def __r39(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[39]:
        __create_property_root = root.create_property
        '''Line 592: <ActionPreviousImage@Image> @ temp_width: 0 '''
        if not hasattr(root, "temp_width"):
            __create_property_root("temp_width", (0))
        '''Line 593: <ActionPreviousImage@Image> @ temp_height: 0 '''
        if not hasattr(root, "temp_height"):
            __create_property_root("temp_height", (0))

        __mc[39].add(root.__class__)

    '''Line 592: <ActionPreviousImage@Image> @ temp_width: 0 '''
    root.temp_width = 0

    '''Line 593: <ActionPreviousImage@Image> @ temp_height: 0 '''
    root.temp_height = 0


# <ActionPreviousButton@Button> L595
__mc[40] = set()
def __r40(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[40]:
        __create_property_root = root.create_property
        '''Line 596: <ActionPreviousButton@Button> @ background_normal: 'atlas://data/images/defaulttheme/action_item' '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", ('atlas://data/images/defaulttheme/action_item'))
        '''Line 597: <ActionPreviousButton@Button> @ background_down: 'atlas://data/images/defaulttheme/action_item_down' '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", ('atlas://data/images/defaulttheme/action_item_down'))

        __mc[40].add(root.__class__)

    '''Line 596: <ActionPreviousButton@Button> @ background_normal: 'atlas://data/images/defaulttheme/action_item' '''
    root.background_normal = 'atlas://data/images/defaulttheme/action_item'

    '''Line 597: <ActionPreviousButton@Button> @ background_down: 'atlas://data/images/defaulttheme/action_item_down' '''
    root.background_down = 'atlas://data/images/defaulttheme/action_item_down'


def __h154_minimum_width(root, w1_layout, w7_title, *args):
    '''Line 601: <ActionPrevious> @ minimum_width: layout.minimum_width + min(sp(100), title.width) '''
    w1_layout = w1_layout.__self__
    w7_title = w7_title.__self__
    root.minimum_width = w1_layout.minimum_width + min(sp(100), w7_title.width)

def __h155_pos(root, w1_layout, *args):
    '''Line 606: <ActionPrevious> -> GridLayout @ pos: root.pos '''
    root = root.__self__
    w1_layout.pos = root.pos

def __h156_width(w1_layout, *args):
    '''Line 608: <ActionPrevious> -> GridLayout @ width: self.minimum_width '''
    w1_layout = w1_layout.__self__
    w1_layout.width = w1_layout.minimum_width

def __h157_width(w2, w3_prevlayout, *args):
    '''Line 613: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ width: prevlayout.width '''
    w3_prevlayout = w3_prevlayout.__self__
    w2.width = w3_prevlayout.width

def __h158_width(w3_prevlayout, *args):
    '''Line 617: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ width: self.minimum_width '''
    w3_prevlayout = w3_prevlayout.__self__
    w3_prevlayout.width = w3_prevlayout.minimum_width

def __h159_height(w3_prevlayout, *args):
    '''Line 618: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ height: self.parent.height '''
    w3_prevlayout = w3_prevlayout.__self__
    w3_prevlayout.height = w3_prevlayout.parent.height

def __h160_pos(w3_prevlayout, *args):
    '''Line 619: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ pos: self.parent.pos '''
    w3_prevlayout = w3_prevlayout.__self__
    w3_prevlayout.pos = w3_prevlayout.parent.pos

def __h161_source(root, w4_prev_icon_image, *args):
    '''Line 622: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.previous_image '''
    root = root.__self__
    w4_prev_icon_image.source = root.previous_image

def __h162_opacity(root, w4_prev_icon_image, *args):
    '''Line 623: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ opacity: 1 if root.with_previous else 0 '''
    root = root.__self__
    w4_prev_icon_image.opacity = 1 if root.with_previous else 0

def __h163_temp_width(root, w4_prev_icon_image, *args):
    '''Line 626: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.previous_image_width or dp(prev_icon_image.texture_size[0]) '''
    root = root.__self__
    w4_prev_icon_image = w4_prev_icon_image.__self__
    w4_prev_icon_image.temp_width = root.previous_image_width or dp(w4_prev_icon_image.texture_size[0])

def __h164_temp_height(root, w4_prev_icon_image, *args):
    '''Line 627: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.previous_image_height or dp(prev_icon_image.texture_size[1]) '''
    root = root.__self__
    w4_prev_icon_image = w4_prev_icon_image.__self__
    w4_prev_icon_image.temp_height = root.previous_image_height or dp(w4_prev_icon_image.texture_size[1])

def __h165_width(w4_prev_icon_image, *args):
    '''Line 629: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
    self.temp_width * (self.height / self.temp_height)) \
    if self.texture else dp(8) '''
    w4_prev_icon_image = w4_prev_icon_image.__self__
    w4_prev_icon_image.width = (w4_prev_icon_image.temp_width if w4_prev_icon_image.temp_height <= w4_prev_icon_image.height else \
    w4_prev_icon_image.temp_width * (w4_prev_icon_image.height / w4_prev_icon_image.temp_height)) \
    if w4_prev_icon_image.texture else dp(8)

def __h166_mipmap(root, w4_prev_icon_image, *args):
    '''Line 632: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
    root = root.__self__
    w4_prev_icon_image.mipmap = root.mipmap

def __h167_source(root, w5_app_icon_image, *args):
    '''Line 635: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.app_icon '''
    root = root.__self__
    w5_app_icon_image.source = root.app_icon

def __h168_temp_width(root, w5_app_icon_image, *args):
    '''Line 638: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.app_icon_width or dp(app_icon_image.texture_size[0]) '''
    w5_app_icon_image = w5_app_icon_image.__self__
    root = root.__self__
    w5_app_icon_image.temp_width = root.app_icon_width or dp(w5_app_icon_image.texture_size[0])

def __h169_temp_height(root, w5_app_icon_image, *args):
    '''Line 639: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.app_icon_height or dp(app_icon_image.texture_size[1]) '''
    w5_app_icon_image = w5_app_icon_image.__self__
    root = root.__self__
    w5_app_icon_image.temp_height = root.app_icon_height or dp(w5_app_icon_image.texture_size[1])

def __h170_width(w5_app_icon_image, *args):
    '''Line 641: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
    self.temp_width * (self.height / self.temp_height)) \
    if self.texture else dp(8) '''
    w5_app_icon_image = w5_app_icon_image.__self__
    w5_app_icon_image.width = (w5_app_icon_image.temp_width if w5_app_icon_image.temp_height <= w5_app_icon_image.height else \
    w5_app_icon_image.temp_width * (w5_app_icon_image.height / w5_app_icon_image.temp_height)) \
    if w5_app_icon_image.texture else dp(8)

def __h171_mipmap(root, w5_app_icon_image, *args):
    '''Line 644: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
    root = root.__self__
    w5_app_icon_image.mipmap = root.mipmap

def __h172_text(root, w7_title, *args):
    '''Line 650: <ActionPrevious> -> Label @ text: root.title '''
    root = root.__self__
    w7_title.text = root.title

def __h173_text_size(w7_title, *args):
    '''Line 651: <ActionPrevious> -> Label @ text_size: self.size '''
    w7_title = w7_title.__self__
    w7_title.text_size = w7_title.size

def __h174_color(root, w7_title, *args):
    '''Line 652: <ActionPrevious> -> Label @ color: root.color '''
    root = root.__self__
    w7_title.color = root.color

def __h13_on_press(root, *args):
    '''Line 610: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_press: root.dispatch('on_press') '''
    root = root.__self__
    root.dispatch('on_press')

def __h14_on_release(root, *args):
    '''Line 611: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_release: root.dispatch('on_release') '''
    root = root.__self__
    root.dispatch('on_release')


# <ActionPrevious> L599
__mc[41] = set()
def __r41(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_GridLayout = Factory.GridLayout
    __cls_ActionPreviousImage = Factory.ActionPreviousImage

    '''Line 603: <ActionPrevious> -> GridLayout'''
    w1_layout = __cls_GridLayout(parent=root, __builder_created=__bfuncs)

    '''Line 609: <ActionPrevious> -> GridLayout -> ActionPreviousButton'''
    w2 = Factory.ActionPreviousButton(parent=w1_layout, __builder_created=__bfuncs)

    '''Line 614: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout'''
    w3_prevlayout = __cls_GridLayout(parent=w2, __builder_created=__bfuncs)

    '''Line 620: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage'''
    w4_prev_icon_image = __cls_ActionPreviousImage(parent=w3_prevlayout, __builder_created=__bfuncs)

    '''Line 633: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage'''
    w5_app_icon_image = __cls_ActionPreviousImage(parent=w3_prevlayout, __builder_created=__bfuncs)

    '''Line 645: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> Widget'''
    w6 = Factory.Widget(parent=w3_prevlayout, __builder_created=__bfuncs)

    '''Line 648: <ActionPrevious> -> Label'''
    w7_title = Factory.Label(parent=root, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["layout"] = w1_layout.proxy_ref
    __ids["prevlayout"] = w3_prevlayout.proxy_ref
    __ids["prev_icon_image"] = w4_prev_icon_image.proxy_ref
    __ids["app_icon_image"] = w5_app_icon_image.proxy_ref
    __ids["title"] = w7_title.proxy_ref

    if root.__class__ not in __mc[41]:
        __create_property_root = root.create_property
        '''Line 600: <ActionPrevious> @ size_hint_x: 1 '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (1))
        '''Line 601: <ActionPrevious> @ minimum_width: layout.minimum_width + min(sp(100), title.width) '''
        if not hasattr(root, "minimum_width"):
            __create_property_root("minimum_width", (None))
        '''Line 602: <ActionPrevious> @ important: True '''
        if not hasattr(root, "important"):
            __create_property_root("important", (None))

        __create_property_w1_layout = w1_layout.create_property
        '''Line 605: <ActionPrevious> -> GridLayout @ rows: 1 '''
        if not hasattr(w1_layout, "rows"):
            __create_property_w1_layout("rows", (1))
        '''Line 606: <ActionPrevious> -> GridLayout @ pos: root.pos '''
        if not hasattr(w1_layout, "pos"):
            __create_property_w1_layout("pos", (None))
        '''Line 607: <ActionPrevious> -> GridLayout @ size_hint_x: None '''
        if not hasattr(w1_layout, "size_hint_x"):
            __create_property_w1_layout("size_hint_x", (None))
        '''Line 608: <ActionPrevious> -> GridLayout @ width: self.minimum_width '''
        if not hasattr(w1_layout, "width"):
            __create_property_w1_layout("width", (None))

        __create_property_w2 = w2.create_property
        '''Line 612: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ size_hint_x: None '''
        if not hasattr(w2, "size_hint_x"):
            __create_property_w2("size_hint_x", (None))
        '''Line 613: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ width: prevlayout.width '''
        if not hasattr(w2, "width"):
            __create_property_w2("width", (None))

        __create_property_w3_prevlayout = w3_prevlayout.create_property
        '''Line 616: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ rows: 1 '''
        if not hasattr(w3_prevlayout, "rows"):
            __create_property_w3_prevlayout("rows", (1))
        '''Line 617: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ width: self.minimum_width '''
        if not hasattr(w3_prevlayout, "width"):
            __create_property_w3_prevlayout("width", (None))
        '''Line 618: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ height: self.parent.height '''
        if not hasattr(w3_prevlayout, "height"):
            __create_property_w3_prevlayout("height", (None))
        '''Line 619: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ pos: self.parent.pos '''
        if not hasattr(w3_prevlayout, "pos"):
            __create_property_w3_prevlayout("pos", (None))

        __create_property_w4_prev_icon_image = w4_prev_icon_image.create_property
        '''Line 622: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.previous_image '''
        if not hasattr(w4_prev_icon_image, "source"):
            __create_property_w4_prev_icon_image("source", (None))
        '''Line 623: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ opacity: 1 if root.with_previous else 0 '''
        if not hasattr(w4_prev_icon_image, "opacity"):
            __create_property_w4_prev_icon_image("opacity", (None))
        '''Line 624: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ allow_stretch: True '''
        if not hasattr(w4_prev_icon_image, "allow_stretch"):
            __create_property_w4_prev_icon_image("allow_stretch", (None))
        '''Line 625: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ size_hint_x: None '''
        if not hasattr(w4_prev_icon_image, "size_hint_x"):
            __create_property_w4_prev_icon_image("size_hint_x", (None))
        '''Line 626: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.previous_image_width or dp(prev_icon_image.texture_size[0]) '''
        if not hasattr(w4_prev_icon_image, "temp_width"):
            __create_property_w4_prev_icon_image("temp_width", (None))
        '''Line 627: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.previous_image_height or dp(prev_icon_image.texture_size[1]) '''
        if not hasattr(w4_prev_icon_image, "temp_height"):
            __create_property_w4_prev_icon_image("temp_height", (None))
        '''Line 629: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
        self.temp_width * (self.height / self.temp_height)) \
        if self.texture else dp(8) '''
        if not hasattr(w4_prev_icon_image, "width"):
            __create_property_w4_prev_icon_image("width", (None))
        '''Line 632: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
        if not hasattr(w4_prev_icon_image, "mipmap"):
            __create_property_w4_prev_icon_image("mipmap", (None))

        __create_property_w5_app_icon_image = w5_app_icon_image.create_property
        '''Line 635: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.app_icon '''
        if not hasattr(w5_app_icon_image, "source"):
            __create_property_w5_app_icon_image("source", (None))
        '''Line 636: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ allow_stretch: True '''
        if not hasattr(w5_app_icon_image, "allow_stretch"):
            __create_property_w5_app_icon_image("allow_stretch", (None))
        '''Line 637: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ size_hint_x: None '''
        if not hasattr(w5_app_icon_image, "size_hint_x"):
            __create_property_w5_app_icon_image("size_hint_x", (None))
        '''Line 638: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.app_icon_width or dp(app_icon_image.texture_size[0]) '''
        if not hasattr(w5_app_icon_image, "temp_width"):
            __create_property_w5_app_icon_image("temp_width", (None))
        '''Line 639: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.app_icon_height or dp(app_icon_image.texture_size[1]) '''
        if not hasattr(w5_app_icon_image, "temp_height"):
            __create_property_w5_app_icon_image("temp_height", (None))
        '''Line 641: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
        self.temp_width * (self.height / self.temp_height)) \
        if self.texture else dp(8) '''
        if not hasattr(w5_app_icon_image, "width"):
            __create_property_w5_app_icon_image("width", (None))
        '''Line 644: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
        if not hasattr(w5_app_icon_image, "mipmap"):
            __create_property_w5_app_icon_image("mipmap", (None))

        __create_property_w6 = w6.create_property
        '''Line 646: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> Widget @ size_hint_x: None '''
        if not hasattr(w6, "size_hint_x"):
            __create_property_w6("size_hint_x", (None))
        '''Line 647: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> Widget @ width: '5sp' '''
        if not hasattr(w6, "width"):
            __create_property_w6("width", ('5sp'))

        __create_property_w7_title = w7_title.create_property
        '''Line 650: <ActionPrevious> -> Label @ text: root.title '''
        if not hasattr(w7_title, "text"):
            __create_property_w7_title("text", (None))
        '''Line 651: <ActionPrevious> -> Label @ text_size: self.size '''
        if not hasattr(w7_title, "text_size"):
            __create_property_w7_title("text_size", (None))
        '''Line 652: <ActionPrevious> -> Label @ color: root.color '''
        if not hasattr(w7_title, "color"):
            __create_property_w7_title("color", (None))
        '''Line 653: <ActionPrevious> -> Label @ shorten: True '''
        if not hasattr(w7_title, "shorten"):
            __create_property_w7_title("shorten", (None))
        '''Line 654: <ActionPrevious> -> Label @ shorten_from: 'right' '''
        if not hasattr(w7_title, "shorten_from"):
            __create_property_w7_title("shorten_from", ('right'))
        '''Line 655: <ActionPrevious> -> Label @ halign: 'left' '''
        if not hasattr(w7_title, "halign"):
            __create_property_w7_title("halign", ('left'))
        '''Line 656: <ActionPrevious> -> Label @ valign: 'middle' '''
        if not hasattr(w7_title, "valign"):
            __create_property_w7_title("valign", ('middle'))

        __mc[41].add(root.__class__)

    __on_init = [None, ] * 2

    __get_prop_w2 = w2.property

    '''Line 610: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_press: root.dispatch('on_press') '''
    __prop = __get_prop_w2("press", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(w2), None]

    '''Line 611: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_release: root.dispatch('on_release') '''
    __prop = __get_prop_w2("release", quiet=True)
    if __prop is not None:
        __on_init[1] = [__prop, __prop.dispatch_count(w2), None]

    '''Line 600: <ActionPrevious> @ size_hint_x: 1 '''
    root.size_hint_x = 1

    '''Line 602: <ActionPrevious> @ important: True '''
    root.important = True

    '''Line 605: <ActionPrevious> -> GridLayout @ rows: 1 '''
    w1_layout.rows = 1

    '''Line 607: <ActionPrevious> -> GridLayout @ size_hint_x: None '''
    w1_layout.size_hint_x = None

    '''Line 612: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ size_hint_x: None '''
    w2.size_hint_x = None

    '''Line 616: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ rows: 1 '''
    w3_prevlayout.rows = 1

    '''Line 624: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ allow_stretch: True '''
    w4_prev_icon_image.allow_stretch = True

    '''Line 625: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ size_hint_x: None '''
    w4_prev_icon_image.size_hint_x = None

    '''Line 636: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ allow_stretch: True '''
    w5_app_icon_image.allow_stretch = True

    '''Line 637: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ size_hint_x: None '''
    w5_app_icon_image.size_hint_x = None

    '''Line 646: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> Widget @ size_hint_x: None '''
    w6.size_hint_x = None

    '''Line 647: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> Widget @ width: '5sp' '''
    w6.width = '5sp'

    '''Line 653: <ActionPrevious> -> Label @ shorten: True '''
    w7_title.shorten = True

    '''Line 654: <ActionPrevious> -> Label @ shorten_from: 'right' '''
    w7_title.shorten_from = 'right'

    '''Line 655: <ActionPrevious> -> Label @ halign: 'left' '''
    w7_title.halign = 'left'

    '''Line 656: <ActionPrevious> -> Label @ valign: 'middle' '''
    w7_title.valign = 'middle'

    '''Line 601: <ActionPrevious> @ minimum_width: layout.minimum_width + min(sp(100), title.width) '''
    root.minimum_width = w1_layout.minimum_width + min(sp(100), w7_title.width)

    '''Line 606: <ActionPrevious> -> GridLayout @ pos: root.pos '''
    w1_layout.pos = root.pos

    '''Line 608: <ActionPrevious> -> GridLayout @ width: self.minimum_width '''
    w1_layout.width = w1_layout.minimum_width

    '''Line 613: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ width: prevlayout.width '''
    w2.width = w3_prevlayout.width

    '''Line 617: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ width: self.minimum_width '''
    w3_prevlayout.width = w3_prevlayout.minimum_width

    '''Line 618: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ height: self.parent.height '''
    w3_prevlayout.height = w3_prevlayout.parent.height

    '''Line 619: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ pos: self.parent.pos '''
    w3_prevlayout.pos = w3_prevlayout.parent.pos

    '''Line 622: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.previous_image '''
    w4_prev_icon_image.source = root.previous_image

    '''Line 623: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ opacity: 1 if root.with_previous else 0 '''
    w4_prev_icon_image.opacity = 1 if root.with_previous else 0

    '''Line 626: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.previous_image_width or dp(prev_icon_image.texture_size[0]) '''
    w4_prev_icon_image.temp_width = root.previous_image_width or dp(w4_prev_icon_image.texture_size[0])

    '''Line 627: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.previous_image_height or dp(prev_icon_image.texture_size[1]) '''
    w4_prev_icon_image.temp_height = root.previous_image_height or dp(w4_prev_icon_image.texture_size[1])

    '''Line 629: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
    self.temp_width * (self.height / self.temp_height)) \
    if self.texture else dp(8) '''
    w4_prev_icon_image.width = (w4_prev_icon_image.temp_width if w4_prev_icon_image.temp_height <= w4_prev_icon_image.height else \
    w4_prev_icon_image.temp_width * (w4_prev_icon_image.height / w4_prev_icon_image.temp_height)) \
    if w4_prev_icon_image.texture else dp(8)

    '''Line 632: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
    w4_prev_icon_image.mipmap = root.mipmap

    '''Line 635: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.app_icon '''
    w5_app_icon_image.source = root.app_icon

    '''Line 638: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.app_icon_width or dp(app_icon_image.texture_size[0]) '''
    w5_app_icon_image.temp_width = root.app_icon_width or dp(w5_app_icon_image.texture_size[0])

    '''Line 639: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.app_icon_height or dp(app_icon_image.texture_size[1]) '''
    w5_app_icon_image.temp_height = root.app_icon_height or dp(w5_app_icon_image.texture_size[1])

    '''Line 641: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
    self.temp_width * (self.height / self.temp_height)) \
    if self.texture else dp(8) '''
    w5_app_icon_image.width = (w5_app_icon_image.temp_width if w5_app_icon_image.temp_height <= w5_app_icon_image.height else \
    w5_app_icon_image.temp_width * (w5_app_icon_image.height / w5_app_icon_image.temp_height)) \
    if w5_app_icon_image.texture else dp(8)

    '''Line 644: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
    w5_app_icon_image.mipmap = root.mipmap

    '''Line 650: <ActionPrevious> -> Label @ text: root.title '''
    w7_title.text = root.title

    '''Line 651: <ActionPrevious> -> Label @ text_size: self.size '''
    w7_title.text_size = w7_title.size

    '''Line 652: <ActionPrevious> -> Label @ color: root.color '''
    w7_title.color = root.color

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b41(app, root, w1_layout, w2, w3_prevlayout, w4_prev_icon_image, w5_app_icon_image, w6, w7_title, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b41, app, root, w1_layout, w2, w3_prevlayout, w4_prev_icon_image, w5_app_icon_image, w6, w7_title, __on_init))

def __b41(app, root, w1_layout, w2, w3_prevlayout, w4_prev_icon_image, w5_app_icon_image, w6, w7_title, __on_init):
    __ref_root = root.proxy_ref
    __ref_w1_layout = w1_layout.proxy_ref
    __ref_w2 = w2.proxy_ref
    __ref_w3_prevlayout = w3_prevlayout.proxy_ref
    __ref_w4_prev_icon_image = w4_prev_icon_image.proxy_ref
    __ref_w5_app_icon_image = w5_app_icon_image.proxy_ref
    __ref_w7_title = w7_title.proxy_ref

    __bound = [None, ] * 12
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h155_pos, __ref_root, __ref_w1_layout), __h155_pos, [__ref_root, __ref_w1_layout]]
    __bound[1] = [None, None, None, __ref_root, "previous_image", __bind_root("previous_image", __h161_source, __ref_root, __ref_w4_prev_icon_image), __h161_source, [__ref_root, __ref_w4_prev_icon_image]]
    __bound[2] = [None, None, None, __ref_root, "with_previous", __bind_root("with_previous", __h162_opacity, __ref_root, __ref_w4_prev_icon_image), __h162_opacity, [__ref_root, __ref_w4_prev_icon_image]]
    __bound[3] = [None, None, None, __ref_root, "previous_image_width", __bind_root("previous_image_width", __h163_temp_width, __ref_root, __ref_w4_prev_icon_image), __h163_temp_width, [__ref_root, __ref_w4_prev_icon_image]]
    __bound[4] = [None, None, None, __ref_root, "previous_image_height", __bind_root("previous_image_height", __h164_temp_height, __ref_root, __ref_w4_prev_icon_image), __h164_temp_height, [__ref_root, __ref_w4_prev_icon_image]]
    __bound[5] = [None, None, None, __ref_root, "mipmap", __bind_root("mipmap", __h166_mipmap, __ref_root, __ref_w4_prev_icon_image), __h166_mipmap, [__ref_root, __ref_w4_prev_icon_image]]
    __bound[6] = [None, None, None, __ref_root, "app_icon", __bind_root("app_icon", __h167_source, __ref_root, __ref_w5_app_icon_image), __h167_source, [__ref_root, __ref_w5_app_icon_image]]
    __bound[7] = [None, None, None, __ref_root, "app_icon_width", __bind_root("app_icon_width", __h168_temp_width, __ref_root, __ref_w5_app_icon_image), __h168_temp_width, [__ref_root, __ref_w5_app_icon_image]]
    __bound[8] = [None, None, None, __ref_root, "app_icon_height", __bind_root("app_icon_height", __h169_temp_height, __ref_root, __ref_w5_app_icon_image), __h169_temp_height, [__ref_root, __ref_w5_app_icon_image]]
    __bound[9] = [None, None, None, __ref_root, "mipmap", __bind_root("mipmap", __h171_mipmap, __ref_root, __ref_w5_app_icon_image), __h171_mipmap, [__ref_root, __ref_w5_app_icon_image]]
    __bound[10] = [None, None, None, __ref_root, "title", __bind_root("title", __h172_text, __ref_root, __ref_w7_title), __h172_text, [__ref_root, __ref_w7_title]]
    __bound[11] = [None, None, None, __ref_root, "color", __bind_root("color", __h174_color, __ref_root, __ref_w7_title), __h174_color, [__ref_root, __ref_w7_title]]
    __handlers[w1_layout.uid].append((__bound, (0, )))
    __handlers[w7_title.uid].append((__bound, (10, 11)))
    __handlers[w5_app_icon_image.uid].append((__bound, (6, 7, 8, 9)))
    __handlers[w4_prev_icon_image.uid].append((__bound, (1, 2, 3, 4, 5)))

    __bound = [None, ] * 2
    __bind_w1_layout = w1_layout.fast_bind
    __bound[0] = [None, None, None, __ref_w1_layout, "minimum_width", __bind_w1_layout("minimum_width", __h154_minimum_width, __ref_root, __ref_w1_layout, __ref_w7_title), __h154_minimum_width, [__ref_root, __ref_w1_layout, __ref_w7_title]]
    __bound[1] = [None, None, None, __ref_w1_layout, "minimum_width", __bind_w1_layout("minimum_width", __h156_width, __ref_w1_layout), __h156_width, (__ref_w1_layout, )]
    __handlers[w1_layout.uid].append((__bound, (1, )))
    __handlers[root.uid].append((__bound, (0, )))

    __bound = [None, ] * 5
    __bind_w3_prevlayout = w3_prevlayout.fast_bind
    __bound[0] = [None, None, None, __ref_w3_prevlayout, "width", __bind_w3_prevlayout("width", __h157_width, __ref_w2, __ref_w3_prevlayout), __h157_width, [__ref_w2, __ref_w3_prevlayout]]
    __bound[1] = [None, None, None, __ref_w3_prevlayout, "minimum_width", __bind_w3_prevlayout("minimum_width", __h158_width, __ref_w3_prevlayout), __h158_width, (__ref_w3_prevlayout, )]
    if w3_prevlayout.rebind_property("parent"):
        __bound[2] = [3, 5, None, __ref_w3_prevlayout, "parent", __bind_w3_prevlayout("parent", __rebind_callback, __bound, 2), __rebind_callback, (__bound, 2)]

    obj_w3_prevlayout_parent = w3_prevlayout.parent
    if obj_w3_prevlayout_parent is not None and isinstance(obj_w3_prevlayout_parent, (__EventDispatcher, __Observable)):
        __ref_obj_w3_prevlayout_parent = obj_w3_prevlayout_parent.proxy_ref
        __bind_obj_w3_prevlayout_parent = obj_w3_prevlayout_parent.fast_bind
        __bound[3] = [None, None, 2, __ref_obj_w3_prevlayout_parent, "height", __bind_obj_w3_prevlayout_parent("height", __h159_height, __ref_w3_prevlayout), __h159_height, (__ref_w3_prevlayout, )]
        __bound[4] = [None, None, 2, __ref_obj_w3_prevlayout_parent, "pos", __bind_obj_w3_prevlayout_parent("pos", __h160_pos, __ref_w3_prevlayout), __h160_pos, (__ref_w3_prevlayout, )]
    if __bound[2] is not None and __bound[3] is None:
        __bound[3] = [None, None, 2, None, "height", None, __h159_height, (__ref_w3_prevlayout, )]
        __bound[4] = [None, None, 2, None, "pos", None, __h160_pos, (__ref_w3_prevlayout, )]
    __handlers[w3_prevlayout.uid].append((__bound, (1, 3, 4)))
    __handlers[w2.uid].append((__bound, (0, )))

    __bound = [None, ] * 6
    __bind_w4_prev_icon_image = w4_prev_icon_image.fast_bind
    __bound[0] = [None, None, None, __ref_w4_prev_icon_image, "texture_size", __bind_w4_prev_icon_image("texture_size", __h163_temp_width, __ref_root, __ref_w4_prev_icon_image), __h163_temp_width, [__ref_root, __ref_w4_prev_icon_image]]
    __bound[1] = [None, None, None, __ref_w4_prev_icon_image, "texture_size", __bind_w4_prev_icon_image("texture_size", __h164_temp_height, __ref_root, __ref_w4_prev_icon_image), __h164_temp_height, [__ref_root, __ref_w4_prev_icon_image]]
    __bound[2] = [None, None, None, __ref_w4_prev_icon_image, "temp_height", __bind_w4_prev_icon_image("temp_height", __h165_width, __ref_w4_prev_icon_image), __h165_width, (__ref_w4_prev_icon_image, )]
    __bound[3] = [None, None, None, __ref_w4_prev_icon_image, "texture", __bind_w4_prev_icon_image("texture", __h165_width, __ref_w4_prev_icon_image), __h165_width, (__ref_w4_prev_icon_image, )]
    __bound[4] = [None, None, None, __ref_w4_prev_icon_image, "temp_width", __bind_w4_prev_icon_image("temp_width", __h165_width, __ref_w4_prev_icon_image), __h165_width, (__ref_w4_prev_icon_image, )]
    __bound[5] = [None, None, None, __ref_w4_prev_icon_image, "height", __bind_w4_prev_icon_image("height", __h165_width, __ref_w4_prev_icon_image), __h165_width, (__ref_w4_prev_icon_image, )]
    __handlers[w4_prev_icon_image.uid].append((__bound, (0, 1, 2, 3, 4, 5)))

    __bound = [None, ] * 6
    __bind_w5_app_icon_image = w5_app_icon_image.fast_bind
    __bound[0] = [None, None, None, __ref_w5_app_icon_image, "texture_size", __bind_w5_app_icon_image("texture_size", __h168_temp_width, __ref_root, __ref_w5_app_icon_image), __h168_temp_width, [__ref_root, __ref_w5_app_icon_image]]
    __bound[1] = [None, None, None, __ref_w5_app_icon_image, "texture_size", __bind_w5_app_icon_image("texture_size", __h169_temp_height, __ref_root, __ref_w5_app_icon_image), __h169_temp_height, [__ref_root, __ref_w5_app_icon_image]]
    __bound[2] = [None, None, None, __ref_w5_app_icon_image, "temp_height", __bind_w5_app_icon_image("temp_height", __h170_width, __ref_w5_app_icon_image), __h170_width, (__ref_w5_app_icon_image, )]
    __bound[3] = [None, None, None, __ref_w5_app_icon_image, "texture", __bind_w5_app_icon_image("texture", __h170_width, __ref_w5_app_icon_image), __h170_width, (__ref_w5_app_icon_image, )]
    __bound[4] = [None, None, None, __ref_w5_app_icon_image, "temp_width", __bind_w5_app_icon_image("temp_width", __h170_width, __ref_w5_app_icon_image), __h170_width, (__ref_w5_app_icon_image, )]
    __bound[5] = [None, None, None, __ref_w5_app_icon_image, "height", __bind_w5_app_icon_image("height", __h170_width, __ref_w5_app_icon_image), __h170_width, (__ref_w5_app_icon_image, )]
    __handlers[w5_app_icon_image.uid].append((__bound, (0, 1, 2, 3, 4, 5)))

    __bound = [None, ] * 2
    __bind_w7_title = w7_title.fast_bind
    __bound[0] = [None, None, None, __ref_w7_title, "width", __bind_w7_title("width", __h154_minimum_width, __ref_root, __ref_w1_layout, __ref_w7_title), __h154_minimum_width, [__ref_root, __ref_w1_layout, __ref_w7_title]]
    __bound[1] = [None, None, None, __ref_w7_title, "size", __bind_w7_title("size", __h173_text_size, __ref_w7_title), __h173_text_size, (__ref_w7_title, )]
    __handlers[w7_title.uid].append((__bound, (1, )))
    __handlers[root.uid].append((__bound, (0, )))

    __bind_w2 = w2.fast_bind

    '''Line 610: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_press: root.dispatch('on_press') '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        __bind_w2("on_press", __h13_on_press, __ref_root)
    else:
        __bind_w2("press", __h13_on_press, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w2)

    '''Line 611: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_release: root.dispatch('on_release') '''
    __prop_init = __on_init[1]
    if __prop_init is None:
        __bind_w2("on_release", __h14_on_release, __ref_root)
    else:
        __bind_w2("release", __h14_on_release, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w2)

    return __partial(__d41, app, root, w1_layout, w2, w3_prevlayout, w4_prev_icon_image, w5_app_icon_image, w6, w7_title, __on_init)

def __d41(app, root, w1_layout, w2, w3_prevlayout, w4_prev_icon_image, w5_app_icon_image, w6, w7_title, __on_init):
    args = None, None

    '''Line 601: <ActionPrevious> @ minimum_width: layout.minimum_width + min(sp(100), title.width) '''
    root.minimum_width = w1_layout.minimum_width + min(sp(100), w7_title.width)

    '''Line 606: <ActionPrevious> -> GridLayout @ pos: root.pos '''
    w1_layout.pos = root.pos

    '''Line 608: <ActionPrevious> -> GridLayout @ width: self.minimum_width '''
    w1_layout.width = w1_layout.minimum_width

    '''Line 613: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ width: prevlayout.width '''
    w2.width = w3_prevlayout.width

    '''Line 617: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ width: self.minimum_width '''
    w3_prevlayout.width = w3_prevlayout.minimum_width

    '''Line 618: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ height: self.parent.height '''
    w3_prevlayout.height = w3_prevlayout.parent.height

    '''Line 619: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout @ pos: self.parent.pos '''
    w3_prevlayout.pos = w3_prevlayout.parent.pos

    '''Line 622: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.previous_image '''
    w4_prev_icon_image.source = root.previous_image

    '''Line 623: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ opacity: 1 if root.with_previous else 0 '''
    w4_prev_icon_image.opacity = 1 if root.with_previous else 0

    '''Line 626: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.previous_image_width or dp(prev_icon_image.texture_size[0]) '''
    w4_prev_icon_image.temp_width = root.previous_image_width or dp(w4_prev_icon_image.texture_size[0])

    '''Line 627: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.previous_image_height or dp(prev_icon_image.texture_size[1]) '''
    w4_prev_icon_image.temp_height = root.previous_image_height or dp(w4_prev_icon_image.texture_size[1])

    '''Line 629: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
    self.temp_width * (self.height / self.temp_height)) \
    if self.texture else dp(8) '''
    w4_prev_icon_image.width = (w4_prev_icon_image.temp_width if w4_prev_icon_image.temp_height <= w4_prev_icon_image.height else \
    w4_prev_icon_image.temp_width * (w4_prev_icon_image.height / w4_prev_icon_image.temp_height)) \
    if w4_prev_icon_image.texture else dp(8)

    '''Line 632: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
    w4_prev_icon_image.mipmap = root.mipmap

    '''Line 635: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ source: root.app_icon '''
    w5_app_icon_image.source = root.app_icon

    '''Line 638: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_width: root.app_icon_width or dp(app_icon_image.texture_size[0]) '''
    w5_app_icon_image.temp_width = root.app_icon_width or dp(w5_app_icon_image.texture_size[0])

    '''Line 639: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ temp_height: root.app_icon_height or dp(app_icon_image.texture_size[1]) '''
    w5_app_icon_image.temp_height = root.app_icon_height or dp(w5_app_icon_image.texture_size[1])

    '''Line 641: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ width: (self.temp_width if self.temp_height <= self.height else \
    self.temp_width * (self.height / self.temp_height)) \
    if self.texture else dp(8) '''
    w5_app_icon_image.width = (w5_app_icon_image.temp_width if w5_app_icon_image.temp_height <= w5_app_icon_image.height else \
    w5_app_icon_image.temp_width * (w5_app_icon_image.height / w5_app_icon_image.temp_height)) \
    if w5_app_icon_image.texture else dp(8)

    '''Line 644: <ActionPrevious> -> GridLayout -> ActionPreviousButton -> GridLayout -> ActionPreviousImage @ mipmap: root.mipmap '''
    w5_app_icon_image.mipmap = root.mipmap

    '''Line 650: <ActionPrevious> -> Label @ text: root.title '''
    w7_title.text = root.title

    '''Line 651: <ActionPrevious> -> Label @ text_size: self.size '''
    w7_title.text_size = w7_title.size

    '''Line 652: <ActionPrevious> -> Label @ color: root.color '''
    w7_title.color = root.color

    args = None,

    '''Line 610: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_press: root.dispatch('on_press') '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(w2) == e:
            root.dispatch('on_press')

    '''Line 611: <ActionPrevious> -> GridLayout -> ActionPreviousButton @ on_release: root.dispatch('on_release') '''
    if __on_init[1] is not None:
        __prop, s, e = __on_init[1]
        if s != e and __prop.dispatch_count(w2) == e:
            root.dispatch('on_release')

    return (w1_layout, w2, w3_prevlayout, w4_prev_icon_image, w5_app_icon_image, w6, w7_title)


def __h175_pos(root, w1, *args):
    '''Line 664: <ActionGroup> -> ActionSeparator @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos

def __h176_size(root, w1, *args):
    '''Line 665: <ActionGroup> -> ActionSeparator @ size: root.separator_width, root.height '''
    root = root.__self__
    w1.size = root.separator_width, root.height

def __h177_opacity(root, w1, *args):
    '''Line 666: <ActionGroup> -> ActionSeparator @ opacity: 1 if root.use_separator else 0 '''
    root = root.__self__
    w1.opacity = 1 if root.use_separator else 0

def __h178_background_image(root, w1, *args):
    '''Line 667: <ActionGroup> -> ActionSeparator @ background_image: root.separator_image if root.use_separator else 'action_view' '''
    root = root.__self__
    w1.background_image = root.separator_image if root.use_separator else 'action_view'


# <ActionGroup> L658
__mc[42] = set()
def __r42(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 663: <ActionGroup> -> ActionSeparator'''
    w1 = Factory.ActionSeparator(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[42]:
        __create_property_root = root.create_property
        '''Line 659: <ActionGroup> @ background_normal: 'atlas://data/images/defaulttheme/action_group' '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", ('atlas://data/images/defaulttheme/action_group'))
        '''Line 660: <ActionGroup> @ background_down: 'atlas://data/images/defaulttheme/action_group_down' '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", ('atlas://data/images/defaulttheme/action_group_down'))
        '''Line 661: <ActionGroup> @ background_disabled_normal: 'atlas://data/images/defaulttheme/action_group_disabled' '''
        if not hasattr(root, "background_disabled_normal"):
            __create_property_root("background_disabled_normal", ('atlas://data/images/defaulttheme/action_group_disabled'))
        '''Line 662: <ActionGroup> @ border: 30, 30, 3, 3 '''
        if not hasattr(root, "border"):
            __create_property_root("border", (30, 30, 3, 3))

        __create_property_w1 = w1.create_property
        '''Line 664: <ActionGroup> -> ActionSeparator @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 665: <ActionGroup> -> ActionSeparator @ size: root.separator_width, root.height '''
        if not hasattr(w1, "size"):
            __create_property_w1("size", (None))
        '''Line 666: <ActionGroup> -> ActionSeparator @ opacity: 1 if root.use_separator else 0 '''
        if not hasattr(w1, "opacity"):
            __create_property_w1("opacity", (None))
        '''Line 667: <ActionGroup> -> ActionSeparator @ background_image: root.separator_image if root.use_separator else 'action_view' '''
        if not hasattr(w1, "background_image"):
            __create_property_w1("background_image", (None))

        __mc[42].add(root.__class__)

    '''Line 659: <ActionGroup> @ background_normal: 'atlas://data/images/defaulttheme/action_group' '''
    root.background_normal = 'atlas://data/images/defaulttheme/action_group'

    '''Line 660: <ActionGroup> @ background_down: 'atlas://data/images/defaulttheme/action_group_down' '''
    root.background_down = 'atlas://data/images/defaulttheme/action_group_down'

    '''Line 661: <ActionGroup> @ background_disabled_normal: 'atlas://data/images/defaulttheme/action_group_disabled' '''
    root.background_disabled_normal = 'atlas://data/images/defaulttheme/action_group_disabled'

    '''Line 662: <ActionGroup> @ border: 30, 30, 3, 3 '''
    root.border = 30, 30, 3, 3

    '''Line 664: <ActionGroup> -> ActionSeparator @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 665: <ActionGroup> -> ActionSeparator @ size: root.separator_width, root.height '''
    w1.size = root.separator_width, root.height

    '''Line 666: <ActionGroup> -> ActionSeparator @ opacity: 1 if root.use_separator else 0 '''
    w1.opacity = 1 if root.use_separator else 0

    '''Line 667: <ActionGroup> -> ActionSeparator @ background_image: root.separator_image if root.use_separator else 'action_view' '''
    w1.background_image = root.separator_image if root.use_separator else 'action_view'

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b42(app, root, w1))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b42, app, root, w1))

def __b42(app, root, w1):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    __bound = [None, ] * 6
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h175_pos, __ref_root, __ref_w1), __h175_pos, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "height", __bind_root("height", __h176_size, __ref_root, __ref_w1), __h176_size, [__ref_root, __ref_w1]]
    __bound[2] = [None, None, None, __ref_root, "separator_width", __bind_root("separator_width", __h176_size, __ref_root, __ref_w1), __h176_size, [__ref_root, __ref_w1]]
    __bound[3] = [None, None, None, __ref_root, "use_separator", __bind_root("use_separator", __h177_opacity, __ref_root, __ref_w1), __h177_opacity, [__ref_root, __ref_w1]]
    __bound[4] = [None, None, None, __ref_root, "use_separator", __bind_root("use_separator", __h178_background_image, __ref_root, __ref_w1), __h178_background_image, [__ref_root, __ref_w1]]
    __bound[5] = [None, None, None, __ref_root, "separator_image", __bind_root("separator_image", __h178_background_image, __ref_root, __ref_w1), __h178_background_image, [__ref_root, __ref_w1]]
    __handlers[w1.uid].append((__bound, (0, 1, 2, 3, 4, 5)))

    return __partial(__d42, app, root, w1)

def __d42(app, root, w1):
    args = None, None

    '''Line 664: <ActionGroup> -> ActionSeparator @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 665: <ActionGroup> -> ActionSeparator @ size: root.separator_width, root.height '''
    w1.size = root.separator_width, root.height

    '''Line 666: <ActionGroup> -> ActionSeparator @ opacity: 1 if root.use_separator else 0 '''
    w1.opacity = 1 if root.use_separator else 0

    '''Line 667: <ActionGroup> -> ActionSeparator @ background_image: root.separator_image if root.use_separator else 'action_view' '''
    w1.background_image = root.separator_image if root.use_separator else 'action_view'

    return (w1, )


def __h179_width(root, *args):
    '''Line 676: <ActionOverflow> @ width: self.texture_size[0] if self.texture else self.minimum_width '''
    root = root.__self__
    root.width = root.texture_size[0] if root.texture else root.minimum_width

def __h180_pos(g2, root, *args):
    '''Line 681: <ActionOverflow> -> Rectangle @ pos: root.center_x - sp(16), root.center_y - sp(16) '''
    root = root.__self__
    g2.pos = root.center_x - sp(16), root.center_y - sp(16)

def __h181_source(g2, root, *args):
    '''Line 683: <ActionOverflow> -> Rectangle @ source: root.overflow_image '''
    root = root.__self__
    g2.source = root.overflow_image


# <ActionOverflow> L669
__mc[43] = set()
def __r43(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_after = root.canvas.after.add

    '''Line 678: <ActionOverflow> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_after(g1)

    '''Line 680: <ActionOverflow> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_after(g2)

    if root.__class__ not in __mc[43]:
        __create_property_root = root.create_property
        '''Line 670: <ActionOverflow> @ border: 3, 3, 3, 3 '''
        if not hasattr(root, "border"):
            __create_property_root("border", (3, 3, 3, 3))
        '''Line 671: <ActionOverflow> @ background_normal: 'atlas://data/images/defaulttheme/action_item' '''
        if not hasattr(root, "background_normal"):
            __create_property_root("background_normal", ('atlas://data/images/defaulttheme/action_item'))
        '''Line 672: <ActionOverflow> @ background_down: 'atlas://data/images/defaulttheme/action_item_down' '''
        if not hasattr(root, "background_down"):
            __create_property_root("background_down", ('atlas://data/images/defaulttheme/action_item_down'))
        '''Line 673: <ActionOverflow> @ background_disabled_normal: 'atlas://data/images/defaulttheme/button_disabled' '''
        if not hasattr(root, "background_disabled_normal"):
            __create_property_root("background_disabled_normal", ('atlas://data/images/defaulttheme/button_disabled'))
        '''Line 674: <ActionOverflow> @ size_hint_x: None '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (None))
        '''Line 675: <ActionOverflow> @ minimum_width: '48sp' '''
        if not hasattr(root, "minimum_width"):
            __create_property_root("minimum_width", ('48sp'))
        '''Line 676: <ActionOverflow> @ width: self.texture_size[0] if self.texture else self.minimum_width '''
        if not hasattr(root, "width"):
            __create_property_root("width", (None))

        __mc[43].add(root.__class__)

    '''Line 670: <ActionOverflow> @ border: 3, 3, 3, 3 '''
    root.border = 3, 3, 3, 3

    '''Line 671: <ActionOverflow> @ background_normal: 'atlas://data/images/defaulttheme/action_item' '''
    root.background_normal = 'atlas://data/images/defaulttheme/action_item'

    '''Line 672: <ActionOverflow> @ background_down: 'atlas://data/images/defaulttheme/action_item_down' '''
    root.background_down = 'atlas://data/images/defaulttheme/action_item_down'

    '''Line 673: <ActionOverflow> @ background_disabled_normal: 'atlas://data/images/defaulttheme/button_disabled' '''
    root.background_disabled_normal = 'atlas://data/images/defaulttheme/button_disabled'

    '''Line 674: <ActionOverflow> @ size_hint_x: None '''
    root.size_hint_x = None

    '''Line 675: <ActionOverflow> @ minimum_width: '48sp' '''
    root.minimum_width = '48sp'

    '''Line 679: <ActionOverflow> -> Color @ rgb: 1, 1, 1 '''
    g1.rgb = 1, 1, 1

    '''Line 682: <ActionOverflow> -> Rectangle @ size: sp(32), sp(32) '''
    g2.size = sp(32), sp(32)

    '''Line 676: <ActionOverflow> @ width: self.texture_size[0] if self.texture else self.minimum_width '''
    root.width = root.texture_size[0] if root.texture else root.minimum_width

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b43(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b43, app, g1, g2, root))

def __b43(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 681: <ActionOverflow> -> Rectangle @ pos: root.center_x - sp(16), root.center_y - sp(16) '''
    __delayed___h180_pos = [__h180_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h180_pos, None, None)

    '''Line 683: <ActionOverflow> -> Rectangle @ source: root.overflow_image '''
    __delayed___h181_source = [__h181_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h181_source, None, None)

    __bound = [None, ] * 6
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "texture", __bind_root("texture", __h179_width, __ref_root), __h179_width, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h179_width, __ref_root), __h179_width, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "minimum_width", __bind_root("minimum_width", __h179_width, __ref_root), __h179_width, (__ref_root, )]
    __bound[3] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h180_pos), __delayed_call_fn, (__delayed___h180_pos, )]
    __bound[4] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h180_pos), __delayed_call_fn, (__delayed___h180_pos, )]
    __bound[5] = [None, None, None, __ref_root, "overflow_image", __bind_root("overflow_image", __delayed_call_fn, __delayed___h181_source), __delayed_call_fn, (__delayed___h181_source, )]
    __handlers[root.uid].append((__bound, (0, 1, 2)))
    __handlers[g2.uid].append((__bound, (3, 4, 5)))

    return __partial(__d43, app, g1, g2, root)

def __d43(app, g1, g2, root):
    args = None, None

    '''Line 676: <ActionOverflow> @ width: self.texture_size[0] if self.texture else self.minimum_width '''
    root.width = root.texture_size[0] if root.texture else root.minimum_width

    return ()


# <ActionDropDown> L685
__mc[44] = set()
def __r44(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[44]:
        '''Line 686: <ActionDropDown> @ auto_width: False '''
        if not hasattr(root, "auto_width"):
            root.create_property("auto_width", (None))

        __mc[44].add(root.__class__)

    '''Line 686: <ActionDropDown> @ auto_width: False '''
    root.auto_width = False


def __h182_orientation(root, w1, *args):
    '''Line 721: <AccordionItem> -> BoxLayout @ orientation: root.orientation '''
    root = root.__self__
    w1.orientation = root.orientation

def __h183_pos(root, w1, *args):
    '''Line 722: <AccordionItem> -> BoxLayout @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos

def __h184_size_hint_x(root, w2_container_title, *args):
    '''Line 724: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_x: None if root.orientation == 'horizontal' else 1 '''
    root = root.__self__
    w2_container_title.size_hint_x = None if root.orientation == 'horizontal' else 1

def __h185_size_hint_y(root, w2_container_title, *args):
    '''Line 725: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_y: None if root.orientation == 'vertical' else 1 '''
    root = root.__self__
    w2_container_title.size_hint_y = None if root.orientation == 'vertical' else 1

def __h186_width(root, w2_container_title, *args):
    '''Line 726: <AccordionItem> -> BoxLayout -> BoxLayout @ width: root.min_space if root.orientation == 'horizontal' else 100 '''
    root = root.__self__
    w2_container_title.width = root.min_space if root.orientation == 'horizontal' else 100

def __h187_height(root, w2_container_title, *args):
    '''Line 727: <AccordionItem> -> BoxLayout -> BoxLayout @ height: root.min_space if root.orientation == 'vertical' else 100 '''
    root = root.__self__
    w2_container_title.height = root.min_space if root.orientation == 'vertical' else 100

def __h188_pos(w3_sv, w4_container, *args):
    '''Line 735: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ pos: sv.pos '''
    w3_sv = w3_sv.__self__
    w4_container.pos = w3_sv.pos

def __h189_size(root, w4_container, *args):
    '''Line 736: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ size: root.content_size '''
    root = root.__self__
    w4_container.size = root.content_size


# <AccordionItem> L716
__mc[45] = set()
def __r45(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_BoxLayout = Factory.BoxLayout

    '''Line 720: <AccordionItem> -> BoxLayout'''
    w1 = __cls_BoxLayout(parent=root, __builder_created=__bfuncs)

    '''Line 723: <AccordionItem> -> BoxLayout -> BoxLayout'''
    w2_container_title = __cls_BoxLayout(parent=w1, __builder_created=__bfuncs)

    '''Line 730: <AccordionItem> -> BoxLayout -> StencilView'''
    w3_sv = Factory.StencilView(parent=w1, __builder_created=__bfuncs)

    '''Line 733: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout'''
    w4_container = __cls_BoxLayout(parent=w3_sv, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["container_title"] = w2_container_title.proxy_ref
    __ids["sv"] = w3_sv.proxy_ref
    __ids["container"] = w4_container.proxy_ref

    if root.__class__ not in __mc[45]:
        __create_property_root = root.create_property
        '''Line 717: <AccordionItem> @ container: container '''
        if not hasattr(root, "container"):
            __create_property_root("container", (None))
        '''Line 718: <AccordionItem> @ container_title: container_title '''
        if not hasattr(root, "container_title"):
            __create_property_root("container_title", (None))

        __create_property_w1 = w1.create_property
        '''Line 721: <AccordionItem> -> BoxLayout @ orientation: root.orientation '''
        if not hasattr(w1, "orientation"):
            __create_property_w1("orientation", (None))
        '''Line 722: <AccordionItem> -> BoxLayout @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))

        __create_property_w2_container_title = w2_container_title.create_property
        '''Line 724: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_x: None if root.orientation == 'horizontal' else 1 '''
        if not hasattr(w2_container_title, "size_hint_x"):
            __create_property_w2_container_title("size_hint_x", (None))
        '''Line 725: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_y: None if root.orientation == 'vertical' else 1 '''
        if not hasattr(w2_container_title, "size_hint_y"):
            __create_property_w2_container_title("size_hint_y", (None))
        '''Line 726: <AccordionItem> -> BoxLayout -> BoxLayout @ width: root.min_space if root.orientation == 'horizontal' else 100 '''
        if not hasattr(w2_container_title, "width"):
            __create_property_w2_container_title("width", (None))
        '''Line 727: <AccordionItem> -> BoxLayout -> BoxLayout @ height: root.min_space if root.orientation == 'vertical' else 100 '''
        if not hasattr(w2_container_title, "height"):
            __create_property_w2_container_title("height", (None))

        __create_property_w4_container = w4_container.create_property
        '''Line 735: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ pos: sv.pos '''
        if not hasattr(w4_container, "pos"):
            __create_property_w4_container("pos", (None))
        '''Line 736: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ size: root.content_size '''
        if not hasattr(w4_container, "size"):
            __create_property_w4_container("size", (None))

        __mc[45].add(root.__class__)

    '''Line 717: <AccordionItem> @ container: container '''
    root.container = w4_container

    '''Line 718: <AccordionItem> @ container_title: container_title '''
    root.container_title = w2_container_title

    '''Line 721: <AccordionItem> -> BoxLayout @ orientation: root.orientation '''
    w1.orientation = root.orientation

    '''Line 722: <AccordionItem> -> BoxLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 724: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_x: None if root.orientation == 'horizontal' else 1 '''
    w2_container_title.size_hint_x = None if root.orientation == 'horizontal' else 1

    '''Line 725: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_y: None if root.orientation == 'vertical' else 1 '''
    w2_container_title.size_hint_y = None if root.orientation == 'vertical' else 1

    '''Line 726: <AccordionItem> -> BoxLayout -> BoxLayout @ width: root.min_space if root.orientation == 'horizontal' else 100 '''
    w2_container_title.width = root.min_space if root.orientation == 'horizontal' else 100

    '''Line 727: <AccordionItem> -> BoxLayout -> BoxLayout @ height: root.min_space if root.orientation == 'vertical' else 100 '''
    w2_container_title.height = root.min_space if root.orientation == 'vertical' else 100

    '''Line 735: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ pos: sv.pos '''
    w4_container.pos = w3_sv.pos

    '''Line 736: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ size: root.content_size '''
    w4_container.size = root.content_size

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b45(app, root, w1, w2_container_title, w3_sv, w4_container))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b45, app, root, w1, w2_container_title, w3_sv, w4_container))

def __b45(app, root, w1, w2_container_title, w3_sv, w4_container):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w2_container_title = w2_container_title.proxy_ref
    __ref_w3_sv = w3_sv.proxy_ref
    __ref_w4_container = w4_container.proxy_ref

    __bound = [None, ] * 9
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __h182_orientation, __ref_root, __ref_w1), __h182_orientation, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h183_pos, __ref_root, __ref_w1), __h183_pos, [__ref_root, __ref_w1]]
    __bound[2] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __h184_size_hint_x, __ref_root, __ref_w2_container_title), __h184_size_hint_x, [__ref_root, __ref_w2_container_title]]
    __bound[3] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __h185_size_hint_y, __ref_root, __ref_w2_container_title), __h185_size_hint_y, [__ref_root, __ref_w2_container_title]]
    __bound[4] = [None, None, None, __ref_root, "min_space", __bind_root("min_space", __h186_width, __ref_root, __ref_w2_container_title), __h186_width, [__ref_root, __ref_w2_container_title]]
    __bound[5] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __h186_width, __ref_root, __ref_w2_container_title), __h186_width, [__ref_root, __ref_w2_container_title]]
    __bound[6] = [None, None, None, __ref_root, "min_space", __bind_root("min_space", __h187_height, __ref_root, __ref_w2_container_title), __h187_height, [__ref_root, __ref_w2_container_title]]
    __bound[7] = [None, None, None, __ref_root, "orientation", __bind_root("orientation", __h187_height, __ref_root, __ref_w2_container_title), __h187_height, [__ref_root, __ref_w2_container_title]]
    __bound[8] = [None, None, None, __ref_root, "content_size", __bind_root("content_size", __h189_size, __ref_root, __ref_w4_container), __h189_size, [__ref_root, __ref_w4_container]]
    __handlers[w2_container_title.uid].append((__bound, (2, 3, 4, 5, 6, 7)))
    __handlers[w4_container.uid].append((__bound, (8, )))
    __handlers[w1.uid].append((__bound, (0, 1)))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w3_sv, "pos", w3_sv.fast_bind("pos", __h188_pos, __ref_w3_sv, __ref_w4_container), __h188_pos, [__ref_w3_sv, __ref_w4_container]]
    __handlers[w4_container.uid].append((__bound, (0, )))

    return __partial(__d45, app, root, w1, w2_container_title, w3_sv, w4_container)

def __d45(app, root, w1, w2_container_title, w3_sv, w4_container):
    args = None, None

    '''Line 721: <AccordionItem> -> BoxLayout @ orientation: root.orientation '''
    w1.orientation = root.orientation

    '''Line 722: <AccordionItem> -> BoxLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 724: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_x: None if root.orientation == 'horizontal' else 1 '''
    w2_container_title.size_hint_x = None if root.orientation == 'horizontal' else 1

    '''Line 725: <AccordionItem> -> BoxLayout -> BoxLayout @ size_hint_y: None if root.orientation == 'vertical' else 1 '''
    w2_container_title.size_hint_y = None if root.orientation == 'vertical' else 1

    '''Line 726: <AccordionItem> -> BoxLayout -> BoxLayout @ width: root.min_space if root.orientation == 'horizontal' else 100 '''
    w2_container_title.width = root.min_space if root.orientation == 'horizontal' else 100

    '''Line 727: <AccordionItem> -> BoxLayout -> BoxLayout @ height: root.min_space if root.orientation == 'vertical' else 100 '''
    w2_container_title.height = root.min_space if root.orientation == 'vertical' else 100

    '''Line 735: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ pos: sv.pos '''
    w4_container.pos = w3_sv.pos

    '''Line 736: <AccordionItem> -> BoxLayout -> StencilView -> BoxLayout @ size: root.content_size '''
    w4_container.size = root.content_size

    return (w1, w2_container_title, w3_sv, w4_container)


def __h190_pos(g2, root, *args):
    '''Line 750: <SettingSpacer> -> Rectangle @ pos: self.x, self.center_y '''
    root = root.__self__
    g2.pos = root.x, root.center_y

def __h191_size(g2, root, *args):
    '''Line 751: <SettingSpacer> -> Rectangle @ size: self.width, 1 '''
    root = root.__self__
    g2.size = root.width, 1


# <SettingSpacer> L743
__mc[46] = set()
def __r46(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 747: <SettingSpacer> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 749: <SettingSpacer> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_root(g2)

    if root.__class__ not in __mc[46]:
        __create_property_root = root.create_property
        '''Line 744: <SettingSpacer> @ size_hint_y: None '''
        if not hasattr(root, "size_hint_y"):
            __create_property_root("size_hint_y", (None))
        '''Line 745: <SettingSpacer> @ height: 5 '''
        if not hasattr(root, "height"):
            __create_property_root("height", (5))

        __mc[46].add(root.__class__)

    '''Line 744: <SettingSpacer> @ size_hint_y: None '''
    root.size_hint_y = None

    '''Line 745: <SettingSpacer> @ height: 5 '''
    root.height = 5

    '''Line 748: <SettingSpacer> -> Color @ rgb: .2, .2, .2 '''
    g1.rgb = .2, .2, .2

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b46(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b46, app, g1, g2, root))

def __b46(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 750: <SettingSpacer> -> Rectangle @ pos: self.x, self.center_y '''
    __delayed___h190_pos = [__h190_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h190_pos, None, None)

    '''Line 751: <SettingSpacer> -> Rectangle @ size: self.width, 1 '''
    __delayed___h191_size = [__h191_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h191_size, None, None)

    __bound = [None, ] * 3
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h190_pos), __delayed_call_fn, (__delayed___h190_pos, )]
    __bound[1] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h190_pos), __delayed_call_fn, (__delayed___h190_pos, )]
    __bound[2] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h191_size), __delayed_call_fn, (__delayed___h191_size, )]
    __handlers[g2.uid].append((__bound, (0, 1, 2)))

    return tuple


def __h192_height(root, w2_labellayout, *args):
    '''Line 755: <SettingItem> @ height: labellayout.texture_size[1] + dp(10) '''
    w2_labellayout = w2_labellayout.__self__
    root.height = w2_labellayout.texture_size[1] + dp(10)

def __h193_pos(root, w1, *args):
    '''Line 770: <SettingItem> -> BoxLayout @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos

def __h194_text(root, w2_labellayout, *args):
    '''Line 776: <SettingItem> -> BoxLayout -> Label @ text: u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '') '''
    root = root.__self__
    w2_labellayout.text = u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '')

def __h195_text_size(w2_labellayout, *args):
    '''Line 778: <SettingItem> -> BoxLayout -> Label @ text_size: self.width - 32, None '''
    w2_labellayout = w2_labellayout.__self__
    w2_labellayout.text_size = w2_labellayout.width - 32, None

def __h196_rgba(g4, root, *args):
    '''Line 759: <SettingItem> -> Color @ rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha '''
    root = root.__self__
    g4.rgba = 47 / 255., 167 / 255., 212 / 255., root.selected_alpha

def __h197_pos(g5, root, *args):
    '''Line 761: <SettingItem> -> Rectangle @ pos: self.x, self.y + 1 '''
    root = root.__self__
    g5.pos = root.x, root.y + 1

def __h198_size(g5, root, *args):
    '''Line 762: <SettingItem> -> Rectangle @ size: self.size '''
    root = root.__self__
    g5.size = root.size

def __h199_pos(g7, root, *args):
    '''Line 766: <SettingItem> -> Rectangle @ pos: self.x, self.y - 2 '''
    root = root.__self__
    g7.pos = root.x, root.y - 2

def __h200_size(g7, root, *args):
    '''Line 767: <SettingItem> -> Rectangle @ size: self.width, 1 '''
    root = root.__self__
    g7.size = root.width, 1


# <SettingItem> L753
__mc[47] = set()
def __r47(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_BoxLayout = Factory.BoxLayout
    __cls_Color = Factory.Color
    __cls_Rectangle = Factory.Rectangle

    __add_root_canvas_root = root.canvas.add

    '''Line 769: <SettingItem> -> BoxLayout'''
    w1 = __cls_BoxLayout(parent=root, __builder_created=__bfuncs)

    '''Line 772: <SettingItem> -> BoxLayout -> Label'''
    w2_labellayout = Factory.Label(parent=w1, __builder_created=__bfuncs)

    '''Line 780: <SettingItem> -> BoxLayout -> BoxLayout'''
    w3_content = __cls_BoxLayout(parent=w1, __builder_created=__bfuncs)

    '''Line 758: <SettingItem> -> Color'''
    g4 = __cls_Color()
    __add_root_canvas_root(g4)

    '''Line 760: <SettingItem> -> Rectangle'''
    g5 = __cls_Rectangle()
    __add_root_canvas_root(g5)

    '''Line 763: <SettingItem> -> Color'''
    g6 = __cls_Color()
    __add_root_canvas_root(g6)

    '''Line 765: <SettingItem> -> Rectangle'''
    g7 = __cls_Rectangle()
    __add_root_canvas_root(g7)

    __ids = root.ids
    __ids["labellayout"] = w2_labellayout.proxy_ref
    __ids["content"] = w3_content.proxy_ref

    if root.__class__ not in __mc[47]:
        __create_property_root = root.create_property
        '''Line 754: <SettingItem> @ size_hint: .25, None '''
        if not hasattr(root, "size_hint"):
            __create_property_root("size_hint", (None))
        '''Line 755: <SettingItem> @ height: labellayout.texture_size[1] + dp(10) '''
        if not hasattr(root, "height"):
            __create_property_root("height", (None))
        '''Line 756: <SettingItem> @ content: content '''
        if not hasattr(root, "content"):
            __create_property_root("content", (None))

        '''Line 770: <SettingItem> -> BoxLayout @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            w1.create_property("pos", (None))

        __create_property_w2_labellayout = w2_labellayout.create_property
        '''Line 773: <SettingItem> -> BoxLayout -> Label @ size_hint_x: .66 '''
        if not hasattr(w2_labellayout, "size_hint_x"):
            __create_property_w2_labellayout("size_hint_x", (.66))
        '''Line 775: <SettingItem> -> BoxLayout -> Label @ markup: True '''
        if not hasattr(w2_labellayout, "markup"):
            __create_property_w2_labellayout("markup", (None))
        '''Line 776: <SettingItem> -> BoxLayout -> Label @ text: u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '') '''
        if not hasattr(w2_labellayout, "text"):
            __create_property_w2_labellayout("text", (None))
        '''Line 777: <SettingItem> -> BoxLayout -> Label @ font_size: '15sp' '''
        if not hasattr(w2_labellayout, "font_size"):
            __create_property_w2_labellayout("font_size", ('15sp'))
        '''Line 778: <SettingItem> -> BoxLayout -> Label @ text_size: self.width - 32, None '''
        if not hasattr(w2_labellayout, "text_size"):
            __create_property_w2_labellayout("text_size", (None))

        '''Line 782: <SettingItem> -> BoxLayout -> BoxLayout @ size_hint_x: .33 '''
        if not hasattr(w3_content, "size_hint_x"):
            w3_content.create_property("size_hint_x", (.33))

        __mc[47].add(root.__class__)

    '''Line 754: <SettingItem> @ size_hint: .25, None '''
    root.size_hint = .25, None

    '''Line 756: <SettingItem> @ content: content '''
    root.content = w3_content

    '''Line 773: <SettingItem> -> BoxLayout -> Label @ size_hint_x: .66 '''
    w2_labellayout.size_hint_x = .66

    '''Line 775: <SettingItem> -> BoxLayout -> Label @ markup: True '''
    w2_labellayout.markup = True

    '''Line 777: <SettingItem> -> BoxLayout -> Label @ font_size: '15sp' '''
    w2_labellayout.font_size = '15sp'

    '''Line 782: <SettingItem> -> BoxLayout -> BoxLayout @ size_hint_x: .33 '''
    w3_content.size_hint_x = .33

    '''Line 764: <SettingItem> -> Color @ rgb: .2, .2, .2 '''
    g6.rgb = .2, .2, .2

    '''Line 755: <SettingItem> @ height: labellayout.texture_size[1] + dp(10) '''
    root.height = w2_labellayout.texture_size[1] + dp(10)

    '''Line 770: <SettingItem> -> BoxLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 776: <SettingItem> -> BoxLayout -> Label @ text: u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '') '''
    w2_labellayout.text = u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '')

    '''Line 778: <SettingItem> -> BoxLayout -> Label @ text_size: self.width - 32, None '''
    w2_labellayout.text_size = w2_labellayout.width - 32, None

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b47(app, g4, g5, g6, g7, root, w1, w2_labellayout, w3_content))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b47, app, g4, g5, g6, g7, root, w1, w2_labellayout, w3_content))

def __b47(app, g4, g5, g6, g7, root, w1, w2_labellayout, w3_content):
    __ref_g5 = g5.proxy_ref
    __ref_g7 = g7.proxy_ref
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w2_labellayout = w2_labellayout.proxy_ref

    '''Line 759: <SettingItem> -> Color @ rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha '''
    __delayed___h196_rgba = [__h196_rgba, g4.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h196_rgba, None, None)

    '''Line 761: <SettingItem> -> Rectangle @ pos: self.x, self.y + 1 '''
    __delayed___h197_pos = [__h197_pos, __ref_g5, __ref_root, None]
    __delayed_call_fn(__delayed___h197_pos, None, None)

    '''Line 762: <SettingItem> -> Rectangle @ size: self.size '''
    __delayed___h198_size = [__h198_size, __ref_g5, __ref_root, None]
    __delayed_call_fn(__delayed___h198_size, None, None)

    '''Line 766: <SettingItem> -> Rectangle @ pos: self.x, self.y - 2 '''
    __delayed___h199_pos = [__h199_pos, __ref_g7, __ref_root, None]
    __delayed_call_fn(__delayed___h199_pos, None, None)

    '''Line 767: <SettingItem> -> Rectangle @ size: self.width, 1 '''
    __delayed___h200_size = [__h200_size, __ref_g7, __ref_root, None]
    __delayed_call_fn(__delayed___h200_size, None, None)

    __bound = [None, ] * 10
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h193_pos, __ref_root, __ref_w1), __h193_pos, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "desc", __bind_root("desc", __h194_text, __ref_root, __ref_w2_labellayout), __h194_text, [__ref_root, __ref_w2_labellayout]]
    __bound[2] = [None, None, None, __ref_root, "title", __bind_root("title", __h194_text, __ref_root, __ref_w2_labellayout), __h194_text, [__ref_root, __ref_w2_labellayout]]
    __bound[3] = [None, None, None, __ref_root, "selected_alpha", __bind_root("selected_alpha", __delayed_call_fn, __delayed___h196_rgba), __delayed_call_fn, (__delayed___h196_rgba, )]
    __bound[4] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h197_pos), __delayed_call_fn, (__delayed___h197_pos, )]
    __bound[5] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h197_pos), __delayed_call_fn, (__delayed___h197_pos, )]
    __bound[6] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h198_size), __delayed_call_fn, (__delayed___h198_size, )]
    __bound[7] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h199_pos), __delayed_call_fn, (__delayed___h199_pos, )]
    __bound[8] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h199_pos), __delayed_call_fn, (__delayed___h199_pos, )]
    __bound[9] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h200_size), __delayed_call_fn, (__delayed___h200_size, )]
    __handlers[w2_labellayout.uid].append((__bound, (1, 2)))
    __handlers[g7.uid].append((__bound, (7, 8, 9)))
    __handlers[g5.uid].append((__bound, (4, 5, 6)))
    __handlers[g4.uid].append((__bound, (3, )))
    __handlers[w1.uid].append((__bound, (0, )))

    __bound = [None, ] * 2
    __bind_w2_labellayout = w2_labellayout.fast_bind
    __bound[0] = [None, None, None, __ref_w2_labellayout, "texture_size", __bind_w2_labellayout("texture_size", __h192_height, __ref_root, __ref_w2_labellayout), __h192_height, [__ref_root, __ref_w2_labellayout]]
    __bound[1] = [None, None, None, __ref_w2_labellayout, "width", __bind_w2_labellayout("width", __h195_text_size, __ref_w2_labellayout), __h195_text_size, (__ref_w2_labellayout, )]
    __handlers[w2_labellayout.uid].append((__bound, (1, )))
    __handlers[root.uid].append((__bound, (0, )))

    return __partial(__d47, app, g4, g5, g6, g7, root, w1, w2_labellayout, w3_content)

def __d47(app, g4, g5, g6, g7, root, w1, w2_labellayout, w3_content):
    args = None, None

    '''Line 755: <SettingItem> @ height: labellayout.texture_size[1] + dp(10) '''
    root.height = w2_labellayout.texture_size[1] + dp(10)

    '''Line 770: <SettingItem> -> BoxLayout @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 776: <SettingItem> -> BoxLayout -> Label @ text: u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '') '''
    w2_labellayout.text = u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '')

    '''Line 778: <SettingItem> -> BoxLayout -> Label @ text_size: self.width - 32, None '''
    w2_labellayout.text_size = w2_labellayout.width - 32, None

    return (w1, w2_labellayout, w3_content)


def __h201_pos(root, w1, *args):
    '''Line 788: <SettingBoolean> -> Switch @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos

def __h202_active(root, w1, *args):
    '''Line 789: <SettingBoolean> -> Switch @ active: bool(root.values.index(root.value)) if root.value in root.values else False '''
    root = root.__self__
    w1.active = bool(root.values.index(root.value)) if root.value in root.values else False

def __h15_on_active(root, *args):
    '''Line 790: <SettingBoolean> -> Switch @ on_active: root.value = root.values[int(args[1])] '''
    root = root.__self__
    root.value = root.values[int(args[1])]


# <SettingBoolean> L785
__mc[48] = set()
def __r48(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 786: <SettingBoolean> -> Switch'''
    w1 = Factory.Switch(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[48]:
        __create_property_w1 = w1.create_property
        '''Line 787: <SettingBoolean> -> Switch @ text: 'Boolean' '''
        if not hasattr(w1, "text"):
            __create_property_w1("text", ('Boolean'))
        '''Line 788: <SettingBoolean> -> Switch @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 789: <SettingBoolean> -> Switch @ active: bool(root.values.index(root.value)) if root.value in root.values else False '''
        if not hasattr(w1, "active"):
            __create_property_w1("active", (None))

        __mc[48].add(root.__class__)

    __on_init = [None, ] * 1

    '''Line 790: <SettingBoolean> -> Switch @ on_active: root.value = root.values[int(args[1])] '''
    __prop = w1.property("active", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(w1), None]

    '''Line 787: <SettingBoolean> -> Switch @ text: 'Boolean' '''
    w1.text = 'Boolean'

    '''Line 788: <SettingBoolean> -> Switch @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 789: <SettingBoolean> -> Switch @ active: bool(root.values.index(root.value)) if root.value in root.values else False '''
    w1.active = bool(root.values.index(root.value)) if root.value in root.values else False

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b48(app, root, w1, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b48, app, root, w1, __on_init))

def __b48(app, root, w1, __on_init):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    __bound = [None, ] * 5
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h201_pos, __ref_root, __ref_w1), __h201_pos, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "values", __bind_root("values", __h202_active, __ref_root, __ref_w1), __h202_active, [__ref_root, __ref_w1]]
    __bound[2] = [None, None, None, __ref_root, "value", __bind_root("value", __h202_active, __ref_root, __ref_w1), __h202_active, [__ref_root, __ref_w1]]
    if root.rebind_property("values"):
        __bound[3] = [4, 5, None, __ref_root, "values", __bind_root("values", __rebind_callback, __bound, 3), __rebind_callback, (__bound, 3)]

    obj_root_values = root.values
    if obj_root_values is not None and isinstance(obj_root_values, (__EventDispatcher, __Observable)):
        __bind_obj_root_values = obj_root_values.fast_bind
        __bound[4] = [None, None, 3, obj_root_values.proxy_ref, "index", __bind_obj_root_values("index", __h202_active, __ref_root, __ref_w1), __h202_active, [__ref_root, __ref_w1]]
    if __bound[3] is not None and __bound[4] is None:
        __bound[4] = [None, None, 3, None, "index", None, __h202_active, [__ref_root, __ref_w1]]
    __handlers[w1.uid].append((__bound, (0, 1, 2, 4)))

    '''Line 790: <SettingBoolean> -> Switch @ on_active: root.value = root.values[int(args[1])] '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        w1.fast_bind("on_active", __h15_on_active, __ref_root)
    else:
        w1.fast_bind("active", __h15_on_active, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w1)

    return __partial(__d48, app, root, w1, __on_init)

def __d48(app, root, w1, __on_init):
    args = None, None

    '''Line 788: <SettingBoolean> -> Switch @ pos: root.pos '''
    w1.pos = root.pos

    '''Line 789: <SettingBoolean> -> Switch @ active: bool(root.values.index(root.value)) if root.value in root.values else False '''
    w1.active = bool(root.values.index(root.value)) if root.value in root.values else False

    args = None,

    '''Line 790: <SettingBoolean> -> Switch @ on_active: root.value = root.values[int(args[1])] '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(w1) == e:
            root.value = root.values[int(args[1])]

    return (w1, )


def __h203_text(root, w1, *args):
    '''Line 794: <SettingString> -> Label @ text: root.value or '' '''
    root = root.__self__
    w1.text = root.value or ''

def __h204_pos(root, w1, *args):
    '''Line 795: <SettingString> -> Label @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos


# <SettingString> L792
__mc[49] = set()
def __r49(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 793: <SettingString> -> Label'''
    w1 = Factory.Label(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[49]:
        __create_property_w1 = w1.create_property
        '''Line 794: <SettingString> -> Label @ text: root.value or '' '''
        if not hasattr(w1, "text"):
            __create_property_w1("text", (None))
        '''Line 795: <SettingString> -> Label @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 796: <SettingString> -> Label @ font_size: '15sp' '''
        if not hasattr(w1, "font_size"):
            __create_property_w1("font_size", ('15sp'))

        __mc[49].add(root.__class__)

    '''Line 796: <SettingString> -> Label @ font_size: '15sp' '''
    w1.font_size = '15sp'

    '''Line 794: <SettingString> -> Label @ text: root.value or '' '''
    w1.text = root.value or ''

    '''Line 795: <SettingString> -> Label @ pos: root.pos '''
    w1.pos = root.pos

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b49(app, root, w1))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b49, app, root, w1))

def __b49(app, root, w1):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "value", __bind_root("value", __h203_text, __ref_root, __ref_w1), __h203_text, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h204_pos, __ref_root, __ref_w1), __h204_pos, [__ref_root, __ref_w1]]
    __handlers[w1.uid].append((__bound, (0, 1)))

    return __partial(__d49, app, root, w1)

def __d49(app, root, w1):
    args = None, None

    '''Line 794: <SettingString> -> Label @ text: root.value or '' '''
    w1.text = root.value or ''

    '''Line 795: <SettingString> -> Label @ pos: root.pos '''
    w1.pos = root.pos

    return (w1, )


def __h205_text(root, w1, *args):
    '''Line 800: <SettingPath> -> Label @ text: root.value or '' '''
    root = root.__self__
    w1.text = root.value or ''

def __h206_pos(root, w1, *args):
    '''Line 801: <SettingPath> -> Label @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos


# <SettingPath> L798
__mc[50] = set()
def __r50(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 799: <SettingPath> -> Label'''
    w1 = Factory.Label(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[50]:
        __create_property_w1 = w1.create_property
        '''Line 800: <SettingPath> -> Label @ text: root.value or '' '''
        if not hasattr(w1, "text"):
            __create_property_w1("text", (None))
        '''Line 801: <SettingPath> -> Label @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 802: <SettingPath> -> Label @ font_size: '15sp' '''
        if not hasattr(w1, "font_size"):
            __create_property_w1("font_size", ('15sp'))

        __mc[50].add(root.__class__)

    '''Line 802: <SettingPath> -> Label @ font_size: '15sp' '''
    w1.font_size = '15sp'

    '''Line 800: <SettingPath> -> Label @ text: root.value or '' '''
    w1.text = root.value or ''

    '''Line 801: <SettingPath> -> Label @ pos: root.pos '''
    w1.pos = root.pos

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b50(app, root, w1))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b50, app, root, w1))

def __b50(app, root, w1):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "value", __bind_root("value", __h205_text, __ref_root, __ref_w1), __h205_text, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h206_pos, __ref_root, __ref_w1), __h206_pos, [__ref_root, __ref_w1]]
    __handlers[w1.uid].append((__bound, (0, 1)))

    return __partial(__d50, app, root, w1)

def __d50(app, root, w1):
    args = None, None

    '''Line 800: <SettingPath> -> Label @ text: root.value or '' '''
    w1.text = root.value or ''

    '''Line 801: <SettingPath> -> Label @ pos: root.pos '''
    w1.pos = root.pos

    return (w1, )


def __h207_text(root, w1, *args):
    '''Line 806: <SettingOptions> -> Label @ text: root.value or '' '''
    root = root.__self__
    w1.text = root.value or ''

def __h208_pos(root, w1, *args):
    '''Line 807: <SettingOptions> -> Label @ pos: root.pos '''
    root = root.__self__
    w1.pos = root.pos


# <SettingOptions> L804
__mc[51] = set()
def __r51(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 805: <SettingOptions> -> Label'''
    w1 = Factory.Label(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[51]:
        __create_property_w1 = w1.create_property
        '''Line 806: <SettingOptions> -> Label @ text: root.value or '' '''
        if not hasattr(w1, "text"):
            __create_property_w1("text", (None))
        '''Line 807: <SettingOptions> -> Label @ pos: root.pos '''
        if not hasattr(w1, "pos"):
            __create_property_w1("pos", (None))
        '''Line 808: <SettingOptions> -> Label @ font_size: '15sp' '''
        if not hasattr(w1, "font_size"):
            __create_property_w1("font_size", ('15sp'))

        __mc[51].add(root.__class__)

    '''Line 808: <SettingOptions> -> Label @ font_size: '15sp' '''
    w1.font_size = '15sp'

    '''Line 806: <SettingOptions> -> Label @ text: root.value or '' '''
    w1.text = root.value or ''

    '''Line 807: <SettingOptions> -> Label @ pos: root.pos '''
    w1.pos = root.pos

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b51(app, root, w1))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b51, app, root, w1))

def __b51(app, root, w1):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "value", __bind_root("value", __h207_text, __ref_root, __ref_w1), __h207_text, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h208_pos, __ref_root, __ref_w1), __h208_pos, [__ref_root, __ref_w1]]
    __handlers[w1.uid].append((__bound, (0, 1)))

    return __partial(__d51, app, root, w1)

def __d51(app, root, w1):
    args = None, None

    '''Line 806: <SettingOptions> -> Label @ text: root.value or '' '''
    w1.text = root.value or ''

    '''Line 807: <SettingOptions> -> Label @ pos: root.pos '''
    w1.pos = root.pos

    return (w1, )


def __h209_text_size(root, *args):
    '''Line 811: <SettingTitle> @ text_size: self.width - 32, None '''
    root = root.__self__
    root.text_size = root.width - 32, None

def __h210_height(root, *args):
    '''Line 813: <SettingTitle> @ height: max(dp(20), self.texture_size[1] + dp(20)) '''
    root = root.__self__
    root.height = max(dp(20), root.texture_size[1] + dp(20))

def __h211_pos(g2, root, *args):
    '''Line 820: <SettingTitle> -> Rectangle @ pos: self.x, self.y + 2 '''
    root = root.__self__
    g2.pos = root.x, root.y + 2

def __h212_size(g2, root, *args):
    '''Line 821: <SettingTitle> -> Rectangle @ size: self.width, self.height - 2 '''
    root = root.__self__
    g2.size = root.width, root.height - 2

def __h213_pos(g4, root, *args):
    '''Line 825: <SettingTitle> -> Rectangle @ pos: self.x, self.y - 2 '''
    root = root.__self__
    g4.pos = root.x, root.y - 2

def __h214_size(g4, root, *args):
    '''Line 826: <SettingTitle> -> Rectangle @ size: self.width, 1 '''
    root = root.__self__
    g4.size = root.width, 1


# <SettingTitle> L810
__mc[52] = set()
def __r52(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Color = Factory.Color
    __cls_Rectangle = Factory.Rectangle

    __add_root_canvas_root = root.canvas.add

    '''Line 817: <SettingTitle> -> Color'''
    g1 = __cls_Color()
    __add_root_canvas_root(g1)

    '''Line 819: <SettingTitle> -> Rectangle'''
    g2 = __cls_Rectangle()
    __add_root_canvas_root(g2)

    '''Line 822: <SettingTitle> -> Color'''
    g3 = __cls_Color()
    __add_root_canvas_root(g3)

    '''Line 824: <SettingTitle> -> Rectangle'''
    g4 = __cls_Rectangle()
    __add_root_canvas_root(g4)

    if root.__class__ not in __mc[52]:
        __create_property_root = root.create_property
        '''Line 811: <SettingTitle> @ text_size: self.width - 32, None '''
        if not hasattr(root, "text_size"):
            __create_property_root("text_size", (None))
        '''Line 812: <SettingTitle> @ size_hint_y: None '''
        if not hasattr(root, "size_hint_y"):
            __create_property_root("size_hint_y", (None))
        '''Line 813: <SettingTitle> @ height: max(dp(20), self.texture_size[1] + dp(20)) '''
        if not hasattr(root, "height"):
            __create_property_root("height", (None))
        '''Line 814: <SettingTitle> @ color: (.9, .9, .9, 1) '''
        if not hasattr(root, "color"):
            __create_property_root("color", ((.9, .9, .9, 1)))
        '''Line 815: <SettingTitle> @ font_size: '15sp' '''
        if not hasattr(root, "font_size"):
            __create_property_root("font_size", ('15sp'))

        __mc[52].add(root.__class__)

    '''Line 812: <SettingTitle> @ size_hint_y: None '''
    root.size_hint_y = None

    '''Line 814: <SettingTitle> @ color: (.9, .9, .9, 1) '''
    root.color = (.9, .9, .9, 1)

    '''Line 815: <SettingTitle> @ font_size: '15sp' '''
    root.font_size = '15sp'

    '''Line 818: <SettingTitle> -> Color @ rgba: .15, .15, .15, .5 '''
    g1.rgba = .15, .15, .15, .5

    '''Line 823: <SettingTitle> -> Color @ rgb: .2, .2, .2 '''
    g3.rgb = .2, .2, .2

    '''Line 811: <SettingTitle> @ text_size: self.width - 32, None '''
    root.text_size = root.width - 32, None

    '''Line 813: <SettingTitle> @ height: max(dp(20), self.texture_size[1] + dp(20)) '''
    root.height = max(dp(20), root.texture_size[1] + dp(20))

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b52(app, g1, g2, g3, g4, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b52, app, g1, g2, g3, g4, root))

def __b52(app, g1, g2, g3, g4, root):
    __ref_g2 = g2.proxy_ref
    __ref_g4 = g4.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 820: <SettingTitle> -> Rectangle @ pos: self.x, self.y + 2 '''
    __delayed___h211_pos = [__h211_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h211_pos, None, None)

    '''Line 821: <SettingTitle> -> Rectangle @ size: self.width, self.height - 2 '''
    __delayed___h212_size = [__h212_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h212_size, None, None)

    '''Line 825: <SettingTitle> -> Rectangle @ pos: self.x, self.y - 2 '''
    __delayed___h213_pos = [__h213_pos, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h213_pos, None, None)

    '''Line 826: <SettingTitle> -> Rectangle @ size: self.width, 1 '''
    __delayed___h214_size = [__h214_size, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h214_size, None, None)

    __bound = [None, ] * 9
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "width", __bind_root("width", __h209_text_size, __ref_root), __h209_text_size, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h210_height, __ref_root), __h210_height, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h211_pos), __delayed_call_fn, (__delayed___h211_pos, )]
    __bound[3] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h211_pos), __delayed_call_fn, (__delayed___h211_pos, )]
    __bound[4] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h212_size), __delayed_call_fn, (__delayed___h212_size, )]
    __bound[5] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h212_size), __delayed_call_fn, (__delayed___h212_size, )]
    __bound[6] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h213_pos), __delayed_call_fn, (__delayed___h213_pos, )]
    __bound[7] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h213_pos), __delayed_call_fn, (__delayed___h213_pos, )]
    __bound[8] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h214_size), __delayed_call_fn, (__delayed___h214_size, )]
    __handlers[g4.uid].append((__bound, (6, 7, 8)))
    __handlers[root.uid].append((__bound, (0, 1)))
    __handlers[g2.uid].append((__bound, (2, 3, 4, 5)))

    return __partial(__d52, app, g1, g2, g3, g4, root)

def __d52(app, g1, g2, g3, g4, root):
    args = None, None

    '''Line 811: <SettingTitle> @ text_size: self.width - 32, None '''
    root.text_size = root.width - 32, None

    '''Line 813: <SettingTitle> @ height: max(dp(20), self.texture_size[1] + dp(20)) '''
    root.height = max(dp(20), root.texture_size[1] + dp(20))

    return ()


def __h215_text_size(root, *args):
    '''Line 830: <SettingSidebarLabel> @ text_size: self.width - 32, None '''
    root = root.__self__
    root.text_size = root.width - 32, None

def __h216_height(root, *args):
    '''Line 831: <SettingSidebarLabel> @ height: self.texture_size[1] + dp(20) '''
    root = root.__self__
    root.height = root.texture_size[1] + dp(20)

def __h217_rgba(g1, root, *args):
    '''Line 835: <SettingSidebarLabel> -> Color @ rgba: 47 / 255., 167 / 255., 212 / 255., int(self.selected) '''
    root = root.__self__
    g1.rgba = 47 / 255., 167 / 255., 212 / 255., int(root.selected)

def __h218_pos(g2, root, *args):
    '''Line 837: <SettingSidebarLabel> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h219_size(g2, root, *args):
    '''Line 838: <SettingSidebarLabel> -> Rectangle @ size: self.size '''
    root = root.__self__
    g2.size = root.size


# <SettingSidebarLabel> L828
__mc[53] = set()
def __r53(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_before = root.canvas.before.add

    '''Line 834: <SettingSidebarLabel> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_before(g1)

    '''Line 836: <SettingSidebarLabel> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_before(g2)

    if root.__class__ not in __mc[53]:
        __create_property_root = root.create_property
        '''Line 829: <SettingSidebarLabel> @ size_hint: 1, None '''
        if not hasattr(root, "size_hint"):
            __create_property_root("size_hint", (None))
        '''Line 830: <SettingSidebarLabel> @ text_size: self.width - 32, None '''
        if not hasattr(root, "text_size"):
            __create_property_root("text_size", (None))
        '''Line 831: <SettingSidebarLabel> @ height: self.texture_size[1] + dp(20) '''
        if not hasattr(root, "height"):
            __create_property_root("height", (None))
        '''Line 832: <SettingSidebarLabel> @ font_size: '15sp' '''
        if not hasattr(root, "font_size"):
            __create_property_root("font_size", ('15sp'))

        __mc[53].add(root.__class__)

    '''Line 829: <SettingSidebarLabel> @ size_hint: 1, None '''
    root.size_hint = 1, None

    '''Line 832: <SettingSidebarLabel> @ font_size: '15sp' '''
    root.font_size = '15sp'

    '''Line 830: <SettingSidebarLabel> @ text_size: self.width - 32, None '''
    root.text_size = root.width - 32, None

    '''Line 831: <SettingSidebarLabel> @ height: self.texture_size[1] + dp(20) '''
    root.height = root.texture_size[1] + dp(20)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b53(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b53, app, g1, g2, root))

def __b53(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 835: <SettingSidebarLabel> -> Color @ rgba: 47 / 255., 167 / 255., 212 / 255., int(self.selected) '''
    __delayed___h217_rgba = [__h217_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h217_rgba, None, None)

    '''Line 837: <SettingSidebarLabel> -> Rectangle @ pos: self.pos '''
    __delayed___h218_pos = [__h218_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h218_pos, None, None)

    '''Line 838: <SettingSidebarLabel> -> Rectangle @ size: self.size '''
    __delayed___h219_size = [__h219_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h219_size, None, None)

    __bound = [None, ] * 5
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "width", __bind_root("width", __h215_text_size, __ref_root), __h215_text_size, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h216_height, __ref_root), __h216_height, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "selected", __bind_root("selected", __delayed_call_fn, __delayed___h217_rgba), __delayed_call_fn, (__delayed___h217_rgba, )]
    __bound[3] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h218_pos), __delayed_call_fn, (__delayed___h218_pos, )]
    __bound[4] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h219_size), __delayed_call_fn, (__delayed___h219_size, )]
    __handlers[root.uid].append((__bound, (0, 1)))
    __handlers[g2.uid].append((__bound, (3, 4)))
    __handlers[g1.uid].append((__bound, (2, )))

    return __partial(__d53, app, g1, g2, root)

def __d53(app, g1, g2, root):
    args = None, None

    '''Line 830: <SettingSidebarLabel> @ text_size: self.width - 32, None '''
    root.text_size = root.width - 32, None

    '''Line 831: <SettingSidebarLabel> @ height: self.texture_size[1] + dp(20) '''
    root.height = root.texture_size[1] + dp(20)

    return ()


def __h220_height(root, *args):
    '''Line 844: <SettingsPanel> @ height: self.minimum_height '''
    root = root.__self__
    root.height = root.minimum_height

def __h221_text(root, w1, *args):
    '''Line 848: <SettingsPanel> -> Label @ text: root.title '''
    root = root.__self__
    w1.text = root.title

def __h222_text_size(w1, *args):
    '''Line 849: <SettingsPanel> -> Label @ text_size: self.width - 32, None '''
    w1 = w1.__self__
    w1.text_size = w1.width - 32, None

def __h223_height(w1, *args):
    '''Line 850: <SettingsPanel> -> Label @ height: max(50, self.texture_size[1] + 20) '''
    w1 = w1.__self__
    w1.height = max(50, w1.texture_size[1] + 20)

def __h224_pos(g3, w1, *args):
    '''Line 858: <SettingsPanel> -> Label -> Rectangle @ pos: self.x, self.y - 2 '''
    w1 = w1.__self__
    g3.pos = w1.x, w1.y - 2

def __h225_size(g3, w1, *args):
    '''Line 859: <SettingsPanel> -> Label -> Rectangle @ size: self.width, 1 '''
    w1 = w1.__self__
    g3.size = w1.width, 1


# <SettingsPanel> L840
__mc[54] = set()
def __r54(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 846: <SettingsPanel> -> Label'''
    w1 = Factory.Label(parent=root, __builder_created=__bfuncs)
    __add_w1_canvas_after = w1.canvas.after.add

    '''Line 855: <SettingsPanel> -> Label -> Color'''
    g2 = Factory.Color()
    __add_w1_canvas_after(g2)

    '''Line 857: <SettingsPanel> -> Label -> Rectangle'''
    g3 = Factory.Rectangle()
    __add_w1_canvas_after(g3)

    if root.__class__ not in __mc[54]:
        __create_property_root = root.create_property
        '''Line 841: <SettingsPanel> @ spacing: 5 '''
        if not hasattr(root, "spacing"):
            __create_property_root("spacing", (5))
        '''Line 842: <SettingsPanel> @ padding: 5 '''
        if not hasattr(root, "padding"):
            __create_property_root("padding", (5))
        '''Line 843: <SettingsPanel> @ size_hint_y: None '''
        if not hasattr(root, "size_hint_y"):
            __create_property_root("size_hint_y", (None))
        '''Line 844: <SettingsPanel> @ height: self.minimum_height '''
        if not hasattr(root, "height"):
            __create_property_root("height", (None))

        __create_property_w1 = w1.create_property
        '''Line 847: <SettingsPanel> -> Label @ size_hint_y: None '''
        if not hasattr(w1, "size_hint_y"):
            __create_property_w1("size_hint_y", (None))
        '''Line 848: <SettingsPanel> -> Label @ text: root.title '''
        if not hasattr(w1, "text"):
            __create_property_w1("text", (None))
        '''Line 849: <SettingsPanel> -> Label @ text_size: self.width - 32, None '''
        if not hasattr(w1, "text_size"):
            __create_property_w1("text_size", (None))
        '''Line 850: <SettingsPanel> -> Label @ height: max(50, self.texture_size[1] + 20) '''
        if not hasattr(w1, "height"):
            __create_property_w1("height", (None))
        '''Line 851: <SettingsPanel> -> Label @ color: (.5, .5, .5, 1) '''
        if not hasattr(w1, "color"):
            __create_property_w1("color", ((.5, .5, .5, 1)))
        '''Line 852: <SettingsPanel> -> Label @ font_size: '15sp' '''
        if not hasattr(w1, "font_size"):
            __create_property_w1("font_size", ('15sp'))

        __mc[54].add(root.__class__)

    '''Line 841: <SettingsPanel> @ spacing: 5 '''
    root.spacing = 5

    '''Line 842: <SettingsPanel> @ padding: 5 '''
    root.padding = 5

    '''Line 843: <SettingsPanel> @ size_hint_y: None '''
    root.size_hint_y = None

    '''Line 847: <SettingsPanel> -> Label @ size_hint_y: None '''
    w1.size_hint_y = None

    '''Line 851: <SettingsPanel> -> Label @ color: (.5, .5, .5, 1) '''
    w1.color = (.5, .5, .5, 1)

    '''Line 852: <SettingsPanel> -> Label @ font_size: '15sp' '''
    w1.font_size = '15sp'

    '''Line 856: <SettingsPanel> -> Label -> Color @ rgb: .2, .2, .2 '''
    g2.rgb = .2, .2, .2

    '''Line 844: <SettingsPanel> @ height: self.minimum_height '''
    root.height = root.minimum_height

    '''Line 848: <SettingsPanel> -> Label @ text: root.title '''
    w1.text = root.title

    '''Line 849: <SettingsPanel> -> Label @ text_size: self.width - 32, None '''
    w1.text_size = w1.width - 32, None

    '''Line 850: <SettingsPanel> -> Label @ height: max(50, self.texture_size[1] + 20) '''
    w1.height = max(50, w1.texture_size[1] + 20)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b54(app, g2, g3, root, w1))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b54, app, g2, g3, root, w1))

def __b54(app, g2, g3, root, w1):
    __ref_g3 = g3.proxy_ref
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref

    '''Line 858: <SettingsPanel> -> Label -> Rectangle @ pos: self.x, self.y - 2 '''
    __delayed___h224_pos = [__h224_pos, __ref_g3, __ref_w1, None]
    __delayed_call_fn(__delayed___h224_pos, None, None)

    '''Line 859: <SettingsPanel> -> Label -> Rectangle @ size: self.width, 1 '''
    __delayed___h225_size = [__h225_size, __ref_g3, __ref_w1, None]
    __delayed_call_fn(__delayed___h225_size, None, None)

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "minimum_height", __bind_root("minimum_height", __h220_height, __ref_root), __h220_height, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "title", __bind_root("title", __h221_text, __ref_root, __ref_w1), __h221_text, [__ref_root, __ref_w1]]
    __handlers[root.uid].append((__bound, (0, )))
    __handlers[w1.uid].append((__bound, (1, )))

    __bound = [None, ] * 5
    __bind_w1 = w1.fast_bind
    __bound[0] = [None, None, None, __ref_w1, "width", __bind_w1("width", __h222_text_size, __ref_w1), __h222_text_size, (__ref_w1, )]
    __bound[1] = [None, None, None, __ref_w1, "texture_size", __bind_w1("texture_size", __h223_height, __ref_w1), __h223_height, (__ref_w1, )]
    __bound[2] = [None, None, None, __ref_w1, "x", __bind_w1("x", __delayed_call_fn, __delayed___h224_pos), __delayed_call_fn, (__delayed___h224_pos, )]
    __bound[3] = [None, None, None, __ref_w1, "y", __bind_w1("y", __delayed_call_fn, __delayed___h224_pos), __delayed_call_fn, (__delayed___h224_pos, )]
    __bound[4] = [None, None, None, __ref_w1, "width", __bind_w1("width", __delayed_call_fn, __delayed___h225_size), __delayed_call_fn, (__delayed___h225_size, )]
    __handlers[g3.uid].append((__bound, (2, 3, 4)))
    __handlers[w1.uid].append((__bound, (0, 1)))

    return __partial(__d54, app, g2, g3, root, w1)

def __d54(app, g2, g3, root, w1):
    args = None, None

    '''Line 844: <SettingsPanel> @ height: self.minimum_height '''
    root.height = root.minimum_height

    '''Line 848: <SettingsPanel> -> Label @ text: root.title '''
    w1.text = root.title

    '''Line 849: <SettingsPanel> -> Label @ text_size: self.width - 32, None '''
    w1.text_size = w1.width - 32, None

    '''Line 850: <SettingsPanel> -> Label @ height: max(50, self.texture_size[1] + 20) '''
    w1.height = max(50, w1.texture_size[1] + 20)

    return (w1, )


def __h226_pos(g2, root, *args):
    '''Line 867: <Settings> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h227_size(g2, root, *args):
    '''Line 868: <Settings> -> Rectangle @ size: self.size '''
    root = root.__self__
    g2.size = root.size


# <Settings> L861
__mc[55] = set()
def __r55(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_before = root.canvas.before.add

    '''Line 864: <Settings> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_before(g1)

    '''Line 866: <Settings> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_before(g2)

    if root.__class__ not in __mc[55]:
        '''Line 862: <Settings> @ orientation: 'horizontal' '''
        if not hasattr(root, "orientation"):
            root.create_property("orientation", ('horizontal'))

        __mc[55].add(root.__class__)

    '''Line 862: <Settings> @ orientation: 'horizontal' '''
    root.orientation = 'horizontal'

    '''Line 865: <Settings> -> Color @ rgb: 0, 0, 0 '''
    g1.rgb = 0, 0, 0

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b55(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b55, app, g1, g2, root))

def __b55(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 867: <Settings> -> Rectangle @ pos: self.pos '''
    __delayed___h226_pos = [__h226_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h226_pos, None, None)

    '''Line 868: <Settings> -> Rectangle @ size: self.size '''
    __delayed___h227_size = [__h227_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h227_size, None, None)

    __bound = [None, ] * 2
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h226_pos), __delayed_call_fn, (__delayed___h226_pos, )]
    __bound[1] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h227_size), __delayed_call_fn, (__delayed___h227_size, )]
    __handlers[g2.uid].append((__bound, (0, 1)))

    return tuple


def __h228_current_uid(w1_menu, w2_content, *args):
    '''Line 878: <InterfaceWithSidebar> -> ContentPanel @ current_uid: menu.selected_uid '''
    w1_menu = w1_menu.__self__
    w2_content.current_uid = w1_menu.selected_uid


# <InterfaceWithSidebar> L870
__mc[56] = set()
def __r56(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 874: <InterfaceWithSidebar> -> MenuSidebar'''
    w1_menu = Factory.MenuSidebar(parent=root, __builder_created=__bfuncs)

    '''Line 876: <InterfaceWithSidebar> -> ContentPanel'''
    w2_content = Factory.ContentPanel(parent=root, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["menu"] = w1_menu.proxy_ref
    __ids["content"] = w2_content.proxy_ref

    if root.__class__ not in __mc[56]:
        __create_property_root = root.create_property
        '''Line 871: <InterfaceWithSidebar> @ orientation: 'horizontal' '''
        if not hasattr(root, "orientation"):
            __create_property_root("orientation", ('horizontal'))
        '''Line 872: <InterfaceWithSidebar> @ menu: menu '''
        if not hasattr(root, "menu"):
            __create_property_root("menu", (None))
        '''Line 873: <InterfaceWithSidebar> @ content: content '''
        if not hasattr(root, "content"):
            __create_property_root("content", (None))

        '''Line 878: <InterfaceWithSidebar> -> ContentPanel @ current_uid: menu.selected_uid '''
        if not hasattr(w2_content, "current_uid"):
            w2_content.create_property("current_uid", (None))

        __mc[56].add(root.__class__)

    '''Line 871: <InterfaceWithSidebar> @ orientation: 'horizontal' '''
    root.orientation = 'horizontal'

    '''Line 872: <InterfaceWithSidebar> @ menu: menu '''
    root.menu = w1_menu

    '''Line 873: <InterfaceWithSidebar> @ content: content '''
    root.content = w2_content

    '''Line 878: <InterfaceWithSidebar> -> ContentPanel @ current_uid: menu.selected_uid '''
    w2_content.current_uid = w1_menu.selected_uid

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b56(app, root, w1_menu, w2_content))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b56, app, root, w1_menu, w2_content))

def __b56(app, root, w1_menu, w2_content):
    __ref_w1_menu = w1_menu.proxy_ref
    __ref_w2_content = w2_content.proxy_ref

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w1_menu, "selected_uid", w1_menu.fast_bind("selected_uid", __h228_current_uid, __ref_w1_menu, __ref_w2_content), __h228_current_uid, [__ref_w1_menu, __ref_w2_content]]
    __handlers[w2_content.uid].append((__bound, (0, )))

    return __partial(__d56, app, root, w1_menu, w2_content)

def __d56(app, root, w1_menu, w2_content):
    args = None, None

    '''Line 878: <InterfaceWithSidebar> -> ContentPanel @ current_uid: menu.selected_uid '''
    w2_content.current_uid = w1_menu.selected_uid

    return (w1_menu, w2_content)


def __h229_current_uid(w1_menu, w2_content, *args):
    '''Line 888: <InterfaceWithSpinner> -> ContentPanel @ current_uid: menu.selected_uid '''
    w1_menu = w1_menu.__self__
    w2_content.current_uid = w1_menu.selected_uid


# <InterfaceWithSpinner> L880
__mc[57] = set()
def __r57(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 884: <InterfaceWithSpinner> -> MenuSpinner'''
    w1_menu = Factory.MenuSpinner(parent=root, __builder_created=__bfuncs)

    '''Line 886: <InterfaceWithSpinner> -> ContentPanel'''
    w2_content = Factory.ContentPanel(parent=root, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["menu"] = w1_menu.proxy_ref
    __ids["content"] = w2_content.proxy_ref

    if root.__class__ not in __mc[57]:
        __create_property_root = root.create_property
        '''Line 881: <InterfaceWithSpinner> @ orientation: 'vertical' '''
        if not hasattr(root, "orientation"):
            __create_property_root("orientation", ('vertical'))
        '''Line 882: <InterfaceWithSpinner> @ menu: menu '''
        if not hasattr(root, "menu"):
            __create_property_root("menu", (None))
        '''Line 883: <InterfaceWithSpinner> @ content: content '''
        if not hasattr(root, "content"):
            __create_property_root("content", (None))

        '''Line 888: <InterfaceWithSpinner> -> ContentPanel @ current_uid: menu.selected_uid '''
        if not hasattr(w2_content, "current_uid"):
            w2_content.create_property("current_uid", (None))

        __mc[57].add(root.__class__)

    '''Line 881: <InterfaceWithSpinner> @ orientation: 'vertical' '''
    root.orientation = 'vertical'

    '''Line 882: <InterfaceWithSpinner> @ menu: menu '''
    root.menu = w1_menu

    '''Line 883: <InterfaceWithSpinner> @ content: content '''
    root.content = w2_content

    '''Line 888: <InterfaceWithSpinner> -> ContentPanel @ current_uid: menu.selected_uid '''
    w2_content.current_uid = w1_menu.selected_uid

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b57(app, root, w1_menu, w2_content))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b57, app, root, w1_menu, w2_content))

def __b57(app, root, w1_menu, w2_content):
    __ref_w1_menu = w1_menu.proxy_ref
    __ref_w2_content = w2_content.proxy_ref

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w1_menu, "selected_uid", w1_menu.fast_bind("selected_uid", __h229_current_uid, __ref_w1_menu, __ref_w2_content), __h229_current_uid, [__ref_w1_menu, __ref_w2_content]]
    __handlers[w2_content.uid].append((__bound, (0, )))

    return __partial(__d57, app, root, w1_menu, w2_content)

def __d57(app, root, w1_menu, w2_content):
    args = None, None

    '''Line 888: <InterfaceWithSpinner> -> ContentPanel @ current_uid: menu.selected_uid '''
    w2_content.current_uid = w1_menu.selected_uid

    return (w1_menu, w2_content)


def __h230_spinner_text(root, w1_spinner, *args):
    '''Line 895: <MenuSpinner> @ spinner_text: spinner.text '''
    w1_spinner = w1_spinner.__self__
    root.spinner_text = w1_spinner.text

def __h231_width(root, w2_button, *args):
    '''Line 903: <MenuSpinner> -> Button @ width: min(dp(200), 0.4*root.width) '''
    root = root.__self__
    w2_button.width = min(dp(200), 0.4*root.width)


# <MenuSpinner> L890
__mc[58] = set()
def __r58(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 897: <MenuSpinner> -> Spinner'''
    w1_spinner = Factory.Spinner(parent=root, __builder_created=__bfuncs)

    '''Line 899: <MenuSpinner> -> Button'''
    w2_button = Factory.Button(parent=root, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["spinner"] = w1_spinner.proxy_ref
    __ids["button"] = w2_button.proxy_ref

    if root.__class__ not in __mc[58]:
        __create_property_root = root.create_property
        '''Line 891: <MenuSpinner> @ orientation: 'horizontal' '''
        if not hasattr(root, "orientation"):
            __create_property_root("orientation", ('horizontal'))
        '''Line 892: <MenuSpinner> @ size_hint_y: None '''
        if not hasattr(root, "size_hint_y"):
            __create_property_root("size_hint_y", (None))
        '''Line 893: <MenuSpinner> @ height: '50dp' '''
        if not hasattr(root, "height"):
            __create_property_root("height", ('50dp'))
        '''Line 894: <MenuSpinner> @ spinner: spinner '''
        if not hasattr(root, "spinner"):
            __create_property_root("spinner", (None))
        '''Line 895: <MenuSpinner> @ spinner_text: spinner.text '''
        if not hasattr(root, "spinner_text"):
            __create_property_root("spinner_text", (None))
        '''Line 896: <MenuSpinner> @ close_button: button '''
        if not hasattr(root, "close_button"):
            __create_property_root("close_button", (None))

        __create_property_w2_button = w2_button.create_property
        '''Line 900: <MenuSpinner> -> Button @ text: 'Close' '''
        if not hasattr(w2_button, "text"):
            __create_property_w2_button("text", ('Close'))
        '''Line 902: <MenuSpinner> -> Button @ size_hint_x: None '''
        if not hasattr(w2_button, "size_hint_x"):
            __create_property_w2_button("size_hint_x", (None))
        '''Line 903: <MenuSpinner> -> Button @ width: min(dp(200), 0.4*root.width) '''
        if not hasattr(w2_button, "width"):
            __create_property_w2_button("width", (None))
        '''Line 904: <MenuSpinner> -> Button @ font_size: '15sp' '''
        if not hasattr(w2_button, "font_size"):
            __create_property_w2_button("font_size", ('15sp'))

        __mc[58].add(root.__class__)

    '''Line 891: <MenuSpinner> @ orientation: 'horizontal' '''
    root.orientation = 'horizontal'

    '''Line 892: <MenuSpinner> @ size_hint_y: None '''
    root.size_hint_y = None

    '''Line 893: <MenuSpinner> @ height: '50dp' '''
    root.height = '50dp'

    '''Line 894: <MenuSpinner> @ spinner: spinner '''
    root.spinner = w1_spinner

    '''Line 896: <MenuSpinner> @ close_button: button '''
    root.close_button = w2_button

    '''Line 900: <MenuSpinner> -> Button @ text: 'Close' '''
    w2_button.text = 'Close'

    '''Line 902: <MenuSpinner> -> Button @ size_hint_x: None '''
    w2_button.size_hint_x = None

    '''Line 904: <MenuSpinner> -> Button @ font_size: '15sp' '''
    w2_button.font_size = '15sp'

    '''Line 895: <MenuSpinner> @ spinner_text: spinner.text '''
    root.spinner_text = w1_spinner.text

    '''Line 903: <MenuSpinner> -> Button @ width: min(dp(200), 0.4*root.width) '''
    w2_button.width = min(dp(200), 0.4*root.width)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b58(app, root, w1_spinner, w2_button))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b58, app, root, w1_spinner, w2_button))

def __b58(app, root, w1_spinner, w2_button):
    __ref_root = root.proxy_ref
    __ref_w1_spinner = w1_spinner.proxy_ref
    __ref_w2_button = w2_button.proxy_ref

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_root, "width", root.fast_bind("width", __h231_width, __ref_root, __ref_w2_button), __h231_width, [__ref_root, __ref_w2_button]]
    __handlers[w2_button.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w1_spinner, "text", w1_spinner.fast_bind("text", __h230_spinner_text, __ref_root, __ref_w1_spinner), __h230_spinner_text, [__ref_root, __ref_w1_spinner]]
    __handlers[root.uid].append((__bound, (0, )))

    return __partial(__d58, app, root, w1_spinner, w2_button)

def __d58(app, root, w1_spinner, w2_button):
    args = None, None

    '''Line 895: <MenuSpinner> @ spinner_text: spinner.text '''
    root.spinner_text = w1_spinner.text

    '''Line 903: <MenuSpinner> -> Button @ width: min(dp(200), 0.4*root.width) '''
    w2_button.width = min(dp(200), 0.4*root.width)

    return (w1_spinner, w2_button)


def __h232_pos(root, w1_menu, *args):
    '''Line 913: <MenuSidebar> -> GridLayout @ pos: root.pos '''
    root = root.__self__
    w1_menu.pos = root.pos

def __h233_pos(g3, w1_menu, *args):
    '''Line 923: <MenuSidebar> -> GridLayout -> Rectangle @ pos: self.right - 1, self.y '''
    w1_menu = w1_menu.__self__
    g3.pos = w1_menu.right - 1, w1_menu.y

def __h234_size(g3, w1_menu, *args):
    '''Line 924: <MenuSidebar> -> GridLayout -> Rectangle @ size: 1, self.height '''
    w1_menu = w1_menu.__self__
    g3.size = 1, w1_menu.height

def __h235_width(root, w4_button, *args):
    '''Line 930: <MenuSidebar> -> Button @ width: root.width - dp(20) '''
    root = root.__self__
    w4_button.width = root.width - dp(20)

def __h236_height(w4_button, *args):
    '''Line 931: <MenuSidebar> -> Button @ height: max(50, self.texture_size[1] + dp(20)) '''
    w4_button = w4_button.__self__
    w4_button.height = max(50, w4_button.texture_size[1] + dp(20))

def __h237_pos(root, w4_button, *args):
    '''Line 932: <MenuSidebar> -> Button @ pos: root.x + dp(10), root.y + dp(10) '''
    root = root.__self__
    w4_button.pos = root.x + dp(10), root.y + dp(10)


# <MenuSidebar> L907
__mc[59] = set()
def __r59(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 912: <MenuSidebar> -> GridLayout'''
    w1_menu = Factory.GridLayout(parent=root, __builder_created=__bfuncs)
    __add_w1_menu_canvas_after = w1_menu.canvas.after.add

    '''Line 920: <MenuSidebar> -> GridLayout -> Color'''
    g2 = Factory.Color()
    __add_w1_menu_canvas_after(g2)

    '''Line 922: <MenuSidebar> -> GridLayout -> Rectangle'''
    g3 = Factory.Rectangle()
    __add_w1_menu_canvas_after(g3)

    '''Line 926: <MenuSidebar> -> Button'''
    w4_button = Factory.Button(parent=root, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["menu"] = w1_menu.proxy_ref
    __ids["button"] = w4_button.proxy_ref

    if root.__class__ not in __mc[59]:
        __create_property_root = root.create_property
        '''Line 908: <MenuSidebar> @ size_hint_x: None '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (None))
        '''Line 909: <MenuSidebar> @ width: '200dp' '''
        if not hasattr(root, "width"):
            __create_property_root("width", ('200dp'))
        '''Line 910: <MenuSidebar> @ buttons_layout: menu '''
        if not hasattr(root, "buttons_layout"):
            __create_property_root("buttons_layout", (None))
        '''Line 911: <MenuSidebar> @ close_button: button '''
        if not hasattr(root, "close_button"):
            __create_property_root("close_button", (None))

        __create_property_w1_menu = w1_menu.create_property
        '''Line 913: <MenuSidebar> -> GridLayout @ pos: root.pos '''
        if not hasattr(w1_menu, "pos"):
            __create_property_w1_menu("pos", (None))
        '''Line 914: <MenuSidebar> -> GridLayout @ cols: 1 '''
        if not hasattr(w1_menu, "cols"):
            __create_property_w1_menu("cols", (1))
        '''Line 916: <MenuSidebar> -> GridLayout @ orientation: 'vertical' '''
        if not hasattr(w1_menu, "orientation"):
            __create_property_w1_menu("orientation", ('vertical'))
        '''Line 917: <MenuSidebar> -> GridLayout @ padding: 5 '''
        if not hasattr(w1_menu, "padding"):
            __create_property_w1_menu("padding", (5))

        __create_property_w4_button = w4_button.create_property
        '''Line 927: <MenuSidebar> -> Button @ text: 'Close' '''
        if not hasattr(w4_button, "text"):
            __create_property_w4_button("text", ('Close'))
        '''Line 929: <MenuSidebar> -> Button @ size_hint: None, None '''
        if not hasattr(w4_button, "size_hint"):
            __create_property_w4_button("size_hint", (None))
        '''Line 930: <MenuSidebar> -> Button @ width: root.width - dp(20) '''
        if not hasattr(w4_button, "width"):
            __create_property_w4_button("width", (None))
        '''Line 931: <MenuSidebar> -> Button @ height: max(50, self.texture_size[1] + dp(20)) '''
        if not hasattr(w4_button, "height"):
            __create_property_w4_button("height", (None))
        '''Line 932: <MenuSidebar> -> Button @ pos: root.x + dp(10), root.y + dp(10) '''
        if not hasattr(w4_button, "pos"):
            __create_property_w4_button("pos", (None))
        '''Line 933: <MenuSidebar> -> Button @ font_size: '15sp' '''
        if not hasattr(w4_button, "font_size"):
            __create_property_w4_button("font_size", ('15sp'))

        __mc[59].add(root.__class__)

    '''Line 908: <MenuSidebar> @ size_hint_x: None '''
    root.size_hint_x = None

    '''Line 909: <MenuSidebar> @ width: '200dp' '''
    root.width = '200dp'

    '''Line 910: <MenuSidebar> @ buttons_layout: menu '''
    root.buttons_layout = w1_menu

    '''Line 911: <MenuSidebar> @ close_button: button '''
    root.close_button = w4_button

    '''Line 914: <MenuSidebar> -> GridLayout @ cols: 1 '''
    w1_menu.cols = 1

    '''Line 916: <MenuSidebar> -> GridLayout @ orientation: 'vertical' '''
    w1_menu.orientation = 'vertical'

    '''Line 917: <MenuSidebar> -> GridLayout @ padding: 5 '''
    w1_menu.padding = 5

    '''Line 921: <MenuSidebar> -> GridLayout -> Color @ rgb: .2, .2, .2 '''
    g2.rgb = .2, .2, .2

    '''Line 927: <MenuSidebar> -> Button @ text: 'Close' '''
    w4_button.text = 'Close'

    '''Line 929: <MenuSidebar> -> Button @ size_hint: None, None '''
    w4_button.size_hint = None, None

    '''Line 933: <MenuSidebar> -> Button @ font_size: '15sp' '''
    w4_button.font_size = '15sp'

    '''Line 913: <MenuSidebar> -> GridLayout @ pos: root.pos '''
    w1_menu.pos = root.pos

    '''Line 930: <MenuSidebar> -> Button @ width: root.width - dp(20) '''
    w4_button.width = root.width - dp(20)

    '''Line 931: <MenuSidebar> -> Button @ height: max(50, self.texture_size[1] + dp(20)) '''
    w4_button.height = max(50, w4_button.texture_size[1] + dp(20))

    '''Line 932: <MenuSidebar> -> Button @ pos: root.x + dp(10), root.y + dp(10) '''
    w4_button.pos = root.x + dp(10), root.y + dp(10)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b59(app, g2, g3, root, w1_menu, w4_button))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b59, app, g2, g3, root, w1_menu, w4_button))

def __b59(app, g2, g3, root, w1_menu, w4_button):
    __ref_g3 = g3.proxy_ref
    __ref_root = root.proxy_ref
    __ref_w1_menu = w1_menu.proxy_ref
    __ref_w4_button = w4_button.proxy_ref

    '''Line 923: <MenuSidebar> -> GridLayout -> Rectangle @ pos: self.right - 1, self.y '''
    __delayed___h233_pos = [__h233_pos, __ref_g3, __ref_w1_menu, None]
    __delayed_call_fn(__delayed___h233_pos, None, None)

    '''Line 924: <MenuSidebar> -> GridLayout -> Rectangle @ size: 1, self.height '''
    __delayed___h234_size = [__h234_size, __ref_g3, __ref_w1_menu, None]
    __delayed_call_fn(__delayed___h234_size, None, None)

    __bound = [None, ] * 4
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h232_pos, __ref_root, __ref_w1_menu), __h232_pos, [__ref_root, __ref_w1_menu]]
    __bound[1] = [None, None, None, __ref_root, "width", __bind_root("width", __h235_width, __ref_root, __ref_w4_button), __h235_width, [__ref_root, __ref_w4_button]]
    __bound[2] = [None, None, None, __ref_root, "x", __bind_root("x", __h237_pos, __ref_root, __ref_w4_button), __h237_pos, [__ref_root, __ref_w4_button]]
    __bound[3] = [None, None, None, __ref_root, "y", __bind_root("y", __h237_pos, __ref_root, __ref_w4_button), __h237_pos, [__ref_root, __ref_w4_button]]
    __handlers[w4_button.uid].append((__bound, (1, 2, 3)))
    __handlers[w1_menu.uid].append((__bound, (0, )))

    __bound = [None, ] * 3
    __bind_w1_menu = w1_menu.fast_bind
    __bound[0] = [None, None, None, __ref_w1_menu, "right", __bind_w1_menu("right", __delayed_call_fn, __delayed___h233_pos), __delayed_call_fn, (__delayed___h233_pos, )]
    __bound[1] = [None, None, None, __ref_w1_menu, "y", __bind_w1_menu("y", __delayed_call_fn, __delayed___h233_pos), __delayed_call_fn, (__delayed___h233_pos, )]
    __bound[2] = [None, None, None, __ref_w1_menu, "height", __bind_w1_menu("height", __delayed_call_fn, __delayed___h234_size), __delayed_call_fn, (__delayed___h234_size, )]
    __handlers[g3.uid].append((__bound, (0, 1, 2)))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w4_button, "texture_size", w4_button.fast_bind("texture_size", __h236_height, __ref_w4_button), __h236_height, (__ref_w4_button, )]
    __handlers[w4_button.uid].append((__bound, (0, )))

    return __partial(__d59, app, g2, g3, root, w1_menu, w4_button)

def __d59(app, g2, g3, root, w1_menu, w4_button):
    args = None, None

    '''Line 913: <MenuSidebar> -> GridLayout @ pos: root.pos '''
    w1_menu.pos = root.pos

    '''Line 930: <MenuSidebar> -> Button @ width: root.width - dp(20) '''
    w4_button.width = root.width - dp(20)

    '''Line 931: <MenuSidebar> -> Button @ height: max(50, self.texture_size[1] + dp(20)) '''
    w4_button.height = max(50, w4_button.texture_size[1] + dp(20))

    '''Line 932: <MenuSidebar> -> Button @ pos: root.x + dp(10), root.y + dp(10) '''
    w4_button.pos = root.x + dp(10), root.y + dp(10)

    return (w1_menu, w4_button)


def __h238_height(w1_content, *args):
    '''Line 942: <ContentPanel> -> GridLayout @ height: self.minimum_height '''
    w1_content = w1_content.__self__
    w1_content.height = w1_content.minimum_height


# <ContentPanel> L935
__mc[60] = set()
def __r60(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 938: <ContentPanel> -> GridLayout'''
    w1_content = Factory.GridLayout(parent=root, __builder_created=__bfuncs)

    root.ids["content"] = w1_content.proxy_ref

    if root.__class__ not in __mc[60]:
        __create_property_root = root.create_property
        '''Line 936: <ContentPanel> @ do_scroll_x: False '''
        if not hasattr(root, "do_scroll_x"):
            __create_property_root("do_scroll_x", (None))
        '''Line 937: <ContentPanel> @ container: content '''
        if not hasattr(root, "container"):
            __create_property_root("container", (None))

        __create_property_w1_content = w1_content.create_property
        '''Line 940: <ContentPanel> -> GridLayout @ cols: 1 '''
        if not hasattr(w1_content, "cols"):
            __create_property_w1_content("cols", (1))
        '''Line 941: <ContentPanel> -> GridLayout @ size_hint_y: None '''
        if not hasattr(w1_content, "size_hint_y"):
            __create_property_w1_content("size_hint_y", (None))
        '''Line 942: <ContentPanel> -> GridLayout @ height: self.minimum_height '''
        if not hasattr(w1_content, "height"):
            __create_property_w1_content("height", (None))

        __mc[60].add(root.__class__)

    '''Line 936: <ContentPanel> @ do_scroll_x: False '''
    root.do_scroll_x = False

    '''Line 937: <ContentPanel> @ container: content '''
    root.container = w1_content

    '''Line 940: <ContentPanel> -> GridLayout @ cols: 1 '''
    w1_content.cols = 1

    '''Line 941: <ContentPanel> -> GridLayout @ size_hint_y: None '''
    w1_content.size_hint_y = None

    '''Line 942: <ContentPanel> -> GridLayout @ height: self.minimum_height '''
    w1_content.height = w1_content.minimum_height

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b60(app, root, w1_content))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b60, app, root, w1_content))

def __b60(app, root, w1_content):
    __ref_w1_content = w1_content.proxy_ref

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w1_content, "minimum_height", w1_content.fast_bind("minimum_height", __h238_height, __ref_w1_content), __h238_height, (__ref_w1_content, )]
    __handlers[w1_content.uid].append((__bound, (0, )))

    return __partial(__d60, app, root, w1_content)

def __d60(app, root, w1_content):
    args = None, None

    '''Line 942: <ContentPanel> -> GridLayout @ height: self.minimum_height '''
    w1_content.height = w1_content.minimum_height

    return (w1_content, )


def __h239_size(root, w1_tp, *args):
    '''Line 949: <InterfaceWithTabbedPanel> -> TabbedPanel @ size: root.size '''
    root = root.__self__
    w1_tp.size = root.size

def __h240_pos(root, w1_tp, *args):
    '''Line 950: <InterfaceWithTabbedPanel> -> TabbedPanel @ pos: root.pos '''
    root = root.__self__
    w1_tp.pos = root.pos

def __h241_width(root, w2_button, *args):
    '''Line 958: <InterfaceWithTabbedPanel> -> Button @ width: min(dp(200), 0.3*root.width) '''
    root = root.__self__
    w2_button.width = min(dp(200), 0.3*root.width)

def __h242_x(root, w2_button, *args):
    '''Line 959: <InterfaceWithTabbedPanel> -> Button @ x: root.x + root.width - self.width '''
    w2_button = w2_button.__self__
    root = root.__self__
    w2_button.x = root.x + root.width - w2_button.width

def __h243_y(root, w2_button, *args):
    '''Line 960: <InterfaceWithTabbedPanel> -> Button @ y: root.y + root.height - self.height '''
    w2_button = w2_button.__self__
    root = root.__self__
    w2_button.y = root.y + root.height - w2_button.height


# <InterfaceWithTabbedPanel> L944
__mc[61] = set()
def __r61(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 947: <InterfaceWithTabbedPanel> -> TabbedPanel'''
    w1_tp = Factory.TabbedPanel(parent=root, __builder_created=__bfuncs)

    '''Line 953: <InterfaceWithTabbedPanel> -> Button'''
    w2_button = Factory.Button(parent=root, __builder_created=__bfuncs)

    __ids = root.ids
    __ids["tp"] = w1_tp.proxy_ref
    __ids["button"] = w2_button.proxy_ref

    if root.__class__ not in __mc[61]:
        __create_property_root = root.create_property
        '''Line 945: <InterfaceWithTabbedPanel> @ tabbedpanel: tp '''
        if not hasattr(root, "tabbedpanel"):
            __create_property_root("tabbedpanel", (None))
        '''Line 946: <InterfaceWithTabbedPanel> @ close_button: button '''
        if not hasattr(root, "close_button"):
            __create_property_root("close_button", (None))

        __create_property_w1_tp = w1_tp.create_property
        '''Line 949: <InterfaceWithTabbedPanel> -> TabbedPanel @ size: root.size '''
        if not hasattr(w1_tp, "size"):
            __create_property_w1_tp("size", (None))
        '''Line 950: <InterfaceWithTabbedPanel> -> TabbedPanel @ pos: root.pos '''
        if not hasattr(w1_tp, "pos"):
            __create_property_w1_tp("pos", (None))
        '''Line 952: <InterfaceWithTabbedPanel> -> TabbedPanel @ background_color: (0,0,0,1) '''
        if not hasattr(w1_tp, "background_color"):
            __create_property_w1_tp("background_color", ((0,0,0,1)))

        __create_property_w2_button = w2_button.create_property
        '''Line 955: <InterfaceWithTabbedPanel> -> Button @ text: 'Close' '''
        if not hasattr(w2_button, "text"):
            __create_property_w2_button("text", ('Close'))
        '''Line 956: <InterfaceWithTabbedPanel> -> Button @ size_hint: None, None '''
        if not hasattr(w2_button, "size_hint"):
            __create_property_w2_button("size_hint", (None))
        '''Line 957: <InterfaceWithTabbedPanel> -> Button @ height: '45dp' '''
        if not hasattr(w2_button, "height"):
            __create_property_w2_button("height", ('45dp'))
        '''Line 958: <InterfaceWithTabbedPanel> -> Button @ width: min(dp(200), 0.3*root.width) '''
        if not hasattr(w2_button, "width"):
            __create_property_w2_button("width", (None))
        '''Line 959: <InterfaceWithTabbedPanel> -> Button @ x: root.x + root.width - self.width '''
        if not hasattr(w2_button, "x"):
            __create_property_w2_button("x", (None))
        '''Line 960: <InterfaceWithTabbedPanel> -> Button @ y: root.y + root.height - self.height '''
        if not hasattr(w2_button, "y"):
            __create_property_w2_button("y", (None))

        __mc[61].add(root.__class__)

    '''Line 945: <InterfaceWithTabbedPanel> @ tabbedpanel: tp '''
    root.tabbedpanel = w1_tp

    '''Line 946: <InterfaceWithTabbedPanel> @ close_button: button '''
    root.close_button = w2_button

    '''Line 952: <InterfaceWithTabbedPanel> -> TabbedPanel @ background_color: (0,0,0,1) '''
    w1_tp.background_color = (0,0,0,1)

    '''Line 955: <InterfaceWithTabbedPanel> -> Button @ text: 'Close' '''
    w2_button.text = 'Close'

    '''Line 956: <InterfaceWithTabbedPanel> -> Button @ size_hint: None, None '''
    w2_button.size_hint = None, None

    '''Line 957: <InterfaceWithTabbedPanel> -> Button @ height: '45dp' '''
    w2_button.height = '45dp'

    '''Line 949: <InterfaceWithTabbedPanel> -> TabbedPanel @ size: root.size '''
    w1_tp.size = root.size

    '''Line 950: <InterfaceWithTabbedPanel> -> TabbedPanel @ pos: root.pos '''
    w1_tp.pos = root.pos

    '''Line 958: <InterfaceWithTabbedPanel> -> Button @ width: min(dp(200), 0.3*root.width) '''
    w2_button.width = min(dp(200), 0.3*root.width)

    '''Line 959: <InterfaceWithTabbedPanel> -> Button @ x: root.x + root.width - self.width '''
    w2_button.x = root.x + root.width - w2_button.width

    '''Line 960: <InterfaceWithTabbedPanel> -> Button @ y: root.y + root.height - self.height '''
    w2_button.y = root.y + root.height - w2_button.height

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b61(app, root, w1_tp, w2_button))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b61, app, root, w1_tp, w2_button))

def __b61(app, root, w1_tp, w2_button):
    __ref_root = root.proxy_ref
    __ref_w1_tp = w1_tp.proxy_ref
    __ref_w2_button = w2_button.proxy_ref

    __bound = [None, ] * 7
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "size", __bind_root("size", __h239_size, __ref_root, __ref_w1_tp), __h239_size, [__ref_root, __ref_w1_tp]]
    __bound[1] = [None, None, None, __ref_root, "pos", __bind_root("pos", __h240_pos, __ref_root, __ref_w1_tp), __h240_pos, [__ref_root, __ref_w1_tp]]
    __bound[2] = [None, None, None, __ref_root, "width", __bind_root("width", __h241_width, __ref_root, __ref_w2_button), __h241_width, [__ref_root, __ref_w2_button]]
    __bound[3] = [None, None, None, __ref_root, "width", __bind_root("width", __h242_x, __ref_root, __ref_w2_button), __h242_x, [__ref_root, __ref_w2_button]]
    __bound[4] = [None, None, None, __ref_root, "x", __bind_root("x", __h242_x, __ref_root, __ref_w2_button), __h242_x, [__ref_root, __ref_w2_button]]
    __bound[5] = [None, None, None, __ref_root, "height", __bind_root("height", __h243_y, __ref_root, __ref_w2_button), __h243_y, [__ref_root, __ref_w2_button]]
    __bound[6] = [None, None, None, __ref_root, "y", __bind_root("y", __h243_y, __ref_root, __ref_w2_button), __h243_y, [__ref_root, __ref_w2_button]]
    __handlers[w1_tp.uid].append((__bound, (0, 1)))
    __handlers[w2_button.uid].append((__bound, (2, 3, 4, 5, 6)))

    __bound = [None, ] * 2
    __bind_w2_button = w2_button.fast_bind
    __bound[0] = [None, None, None, __ref_w2_button, "width", __bind_w2_button("width", __h242_x, __ref_root, __ref_w2_button), __h242_x, [__ref_root, __ref_w2_button]]
    __bound[1] = [None, None, None, __ref_w2_button, "height", __bind_w2_button("height", __h243_y, __ref_root, __ref_w2_button), __h243_y, [__ref_root, __ref_w2_button]]
    __handlers[w2_button.uid].append((__bound, (0, 1)))

    return __partial(__d61, app, root, w1_tp, w2_button)

def __d61(app, root, w1_tp, w2_button):
    args = None, None

    '''Line 949: <InterfaceWithTabbedPanel> -> TabbedPanel @ size: root.size '''
    w1_tp.size = root.size

    '''Line 950: <InterfaceWithTabbedPanel> -> TabbedPanel @ pos: root.pos '''
    w1_tp.pos = root.pos

    '''Line 958: <InterfaceWithTabbedPanel> -> Button @ width: min(dp(200), 0.3*root.width) '''
    w2_button.width = min(dp(200), 0.3*root.width)

    '''Line 959: <InterfaceWithTabbedPanel> -> Button @ x: root.x + root.width - self.width '''
    w2_button.x = root.x + root.width - w2_button.width

    '''Line 960: <InterfaceWithTabbedPanel> -> Button @ y: root.y + root.height - self.height '''
    w2_button.y = root.y + root.height - w2_button.height

    return (w1_tp, w2_button)


def __h244_rgba(g1, root, *args):
    '''Line 966: <ScrollView> -> Color @ rgba: self._bar_color if (self.do_scroll_y and self.viewport_size[1] > self.height) else [0, 0, 0, 0] '''
    root = root.__self__
    g1.rgba = root._bar_color if (root.do_scroll_y and root.viewport_size[1] > root.height) else [0, 0, 0, 0]

def __h245_pos(g2, root, *args):
    '''Line 968: <ScrollView> -> Rectangle @ pos: (self.right - self.bar_width - self.bar_margin) if self.bar_pos_y == 'right' else (self.x + self.bar_margin), self.y + self.height * self.vbar[0] '''
    root = root.__self__
    g2.pos = (root.right - root.bar_width - root.bar_margin) if root.bar_pos_y == 'right' else (root.x + root.bar_margin), root.y + root.height * root.vbar[0]

def __h246_size(g2, root, *args):
    '''Line 969: <ScrollView> -> Rectangle @ size: min(self.bar_width, self.width), self.height * self.vbar[1] '''
    root = root.__self__
    g2.size = min(root.bar_width, root.width), root.height * root.vbar[1]

def __h247_rgba(g3, root, *args):
    '''Line 971: <ScrollView> -> Color @ rgba: self._bar_color if (self.do_scroll_x and self.viewport_size[0] > self.width) else [0, 0, 0, 0] '''
    root = root.__self__
    g3.rgba = root._bar_color if (root.do_scroll_x and root.viewport_size[0] > root.width) else [0, 0, 0, 0]

def __h248_pos(g4, root, *args):
    '''Line 973: <ScrollView> -> Rectangle @ pos: self.x + self.width * self.hbar[0], (self.y + self.bar_margin) if self.bar_pos_x == 'bottom' else (self.top - self.bar_margin - self.bar_width) '''
    root = root.__self__
    g4.pos = root.x + root.width * root.hbar[0], (root.y + root.bar_margin) if root.bar_pos_x == 'bottom' else (root.top - root.bar_margin - root.bar_width)

def __h249_size(g4, root, *args):
    '''Line 974: <ScrollView> -> Rectangle @ size: self.width * self.hbar[1], min(self.bar_width, self.height) '''
    root = root.__self__
    g4.size = root.width * root.hbar[1], min(root.bar_width, root.height)


# <ScrollView> L963
def __r62(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __cls_Color = Factory.Color
    __cls_Rectangle = Factory.Rectangle

    __add_root_canvas_after = root.canvas.after.add

    '''Line 965: <ScrollView> -> Color'''
    g1 = __cls_Color()
    __add_root_canvas_after(g1)

    '''Line 967: <ScrollView> -> Rectangle'''
    g2 = __cls_Rectangle()
    __add_root_canvas_after(g2)

    '''Line 970: <ScrollView> -> Color'''
    g3 = __cls_Color()
    __add_root_canvas_after(g3)

    '''Line 972: <ScrollView> -> Rectangle'''
    g4 = __cls_Rectangle()
    __add_root_canvas_after(g4)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b62(app, g1, g2, g3, g4, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b62, app, g1, g2, g3, g4, root))

def __b62(app, g1, g2, g3, g4, root):
    __ref_g2 = g2.proxy_ref
    __ref_g4 = g4.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 966: <ScrollView> -> Color @ rgba: self._bar_color if (self.do_scroll_y and self.viewport_size[1] > self.height) else [0, 0, 0, 0] '''
    __delayed___h244_rgba = [__h244_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h244_rgba, None, None)

    '''Line 968: <ScrollView> -> Rectangle @ pos: (self.right - self.bar_width - self.bar_margin) if self.bar_pos_y == 'right' else (self.x + self.bar_margin), self.y + self.height * self.vbar[0] '''
    __delayed___h245_pos = [__h245_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h245_pos, None, None)

    '''Line 969: <ScrollView> -> Rectangle @ size: min(self.bar_width, self.width), self.height * self.vbar[1] '''
    __delayed___h246_size = [__h246_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h246_size, None, None)

    '''Line 971: <ScrollView> -> Color @ rgba: self._bar_color if (self.do_scroll_x and self.viewport_size[0] > self.width) else [0, 0, 0, 0] '''
    __delayed___h247_rgba = [__h247_rgba, g3.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h247_rgba, None, None)

    '''Line 973: <ScrollView> -> Rectangle @ pos: self.x + self.width * self.hbar[0], (self.y + self.bar_margin) if self.bar_pos_x == 'bottom' else (self.top - self.bar_margin - self.bar_width) '''
    __delayed___h248_pos = [__h248_pos, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h248_pos, None, None)

    '''Line 974: <ScrollView> -> Rectangle @ size: self.width * self.hbar[1], min(self.bar_width, self.height) '''
    __delayed___h249_size = [__h249_size, __ref_g4, __ref_root, None]
    __delayed_call_fn(__delayed___h249_size, None, None)

    __bound = [None, ] * 32
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "_bar_color", __bind_root("_bar_color", __delayed_call_fn, __delayed___h244_rgba), __delayed_call_fn, (__delayed___h244_rgba, )]
    __bound[1] = [None, None, None, __ref_root, "viewport_size", __bind_root("viewport_size", __delayed_call_fn, __delayed___h244_rgba), __delayed_call_fn, (__delayed___h244_rgba, )]
    __bound[2] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h244_rgba), __delayed_call_fn, (__delayed___h244_rgba, )]
    __bound[3] = [None, None, None, __ref_root, "do_scroll_y", __bind_root("do_scroll_y", __delayed_call_fn, __delayed___h244_rgba), __delayed_call_fn, (__delayed___h244_rgba, )]
    __bound[4] = [None, None, None, __ref_root, "bar_pos_y", __bind_root("bar_pos_y", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[5] = [None, None, None, __ref_root, "bar_margin", __bind_root("bar_margin", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[6] = [None, None, None, __ref_root, "bar_width", __bind_root("bar_width", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[7] = [None, None, None, __ref_root, "right", __bind_root("right", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[8] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[9] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[10] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[11] = [None, None, None, __ref_root, "vbar", __bind_root("vbar", __delayed_call_fn, __delayed___h245_pos), __delayed_call_fn, (__delayed___h245_pos, )]
    __bound[12] = [None, None, None, __ref_root, "vbar", __bind_root("vbar", __delayed_call_fn, __delayed___h246_size), __delayed_call_fn, (__delayed___h246_size, )]
    __bound[13] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h246_size), __delayed_call_fn, (__delayed___h246_size, )]
    __bound[14] = [None, None, None, __ref_root, "bar_width", __bind_root("bar_width", __delayed_call_fn, __delayed___h246_size), __delayed_call_fn, (__delayed___h246_size, )]
    __bound[15] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h246_size), __delayed_call_fn, (__delayed___h246_size, )]
    __bound[16] = [None, None, None, __ref_root, "do_scroll_x", __bind_root("do_scroll_x", __delayed_call_fn, __delayed___h247_rgba), __delayed_call_fn, (__delayed___h247_rgba, )]
    __bound[17] = [None, None, None, __ref_root, "_bar_color", __bind_root("_bar_color", __delayed_call_fn, __delayed___h247_rgba), __delayed_call_fn, (__delayed___h247_rgba, )]
    __bound[18] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h247_rgba), __delayed_call_fn, (__delayed___h247_rgba, )]
    __bound[19] = [None, None, None, __ref_root, "viewport_size", __bind_root("viewport_size", __delayed_call_fn, __delayed___h247_rgba), __delayed_call_fn, (__delayed___h247_rgba, )]
    __bound[20] = [None, None, None, __ref_root, "bar_margin", __bind_root("bar_margin", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[21] = [None, None, None, __ref_root, "y", __bind_root("y", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[22] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[23] = [None, None, None, __ref_root, "top", __bind_root("top", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[24] = [None, None, None, __ref_root, "x", __bind_root("x", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[25] = [None, None, None, __ref_root, "bar_pos_x", __bind_root("bar_pos_x", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[26] = [None, None, None, __ref_root, "bar_width", __bind_root("bar_width", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[27] = [None, None, None, __ref_root, "hbar", __bind_root("hbar", __delayed_call_fn, __delayed___h248_pos), __delayed_call_fn, (__delayed___h248_pos, )]
    __bound[28] = [None, None, None, __ref_root, "width", __bind_root("width", __delayed_call_fn, __delayed___h249_size), __delayed_call_fn, (__delayed___h249_size, )]
    __bound[29] = [None, None, None, __ref_root, "bar_width", __bind_root("bar_width", __delayed_call_fn, __delayed___h249_size), __delayed_call_fn, (__delayed___h249_size, )]
    __bound[30] = [None, None, None, __ref_root, "hbar", __bind_root("hbar", __delayed_call_fn, __delayed___h249_size), __delayed_call_fn, (__delayed___h249_size, )]
    __bound[31] = [None, None, None, __ref_root, "height", __bind_root("height", __delayed_call_fn, __delayed___h249_size), __delayed_call_fn, (__delayed___h249_size, )]
    __handlers[g4.uid].append((__bound, (20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)))
    __handlers[g3.uid].append((__bound, (16, 17, 18, 19)))
    __handlers[g2.uid].append((__bound, (4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)))
    __handlers[g1.uid].append((__bound, (0, 1, 2, 3)))

    return tuple


def __h250_source(root, w1, *args):
    '''Line 986: <VideoPlayerPreview> -> Image @ source: root.source '''
    root = root.__self__
    w1.source = root.source

def __h251_source(root, w2, *args):
    '''Line 990: <VideoPlayerPreview> -> Image @ source: root.image_overlay_play if not root.click_done else root.image_loading '''
    root = root.__self__
    w2.source = root.image_overlay_play if not root.click_done else root.image_loading


# <VideoPlayerPreview> L981
__mc[63] = set()
def __r63(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Image = Factory.Image

    '''Line 985: <VideoPlayerPreview> -> Image'''
    w1 = __cls_Image(parent=root, __builder_created=__bfuncs)

    '''Line 989: <VideoPlayerPreview> -> Image'''
    w2 = __cls_Image(parent=root, __builder_created=__bfuncs)

    if root.__class__ not in __mc[63]:
        __create_property_root = root.create_property
        '''Line 982: <VideoPlayerPreview> @ pos_hint: {'x': 0, 'y': 0} '''
        if not hasattr(root, "pos_hint"):
            __create_property_root("pos_hint", ({'x': 0, 'y': 0}))
        '''Line 983: <VideoPlayerPreview> @ image_overlay_play: 'atlas://data/images/defaulttheme/player-play-overlay' '''
        if not hasattr(root, "image_overlay_play"):
            __create_property_root("image_overlay_play", ('atlas://data/images/defaulttheme/player-play-overlay'))
        '''Line 984: <VideoPlayerPreview> @ image_loading: 'data/images/image-loading.gif' '''
        if not hasattr(root, "image_loading"):
            __create_property_root("image_loading", ('data/images/image-loading.gif'))

        __create_property_w1 = w1.create_property
        '''Line 986: <VideoPlayerPreview> -> Image @ source: root.source '''
        if not hasattr(w1, "source"):
            __create_property_w1("source", (None))
        '''Line 987: <VideoPlayerPreview> -> Image @ color: (.5, .5, .5, 1) '''
        if not hasattr(w1, "color"):
            __create_property_w1("color", ((.5, .5, .5, 1)))
        '''Line 988: <VideoPlayerPreview> -> Image @ pos_hint: {'x': 0, 'y': 0} '''
        if not hasattr(w1, "pos_hint"):
            __create_property_w1("pos_hint", ({'x': 0, 'y': 0}))

        __create_property_w2 = w2.create_property
        '''Line 990: <VideoPlayerPreview> -> Image @ source: root.image_overlay_play if not root.click_done else root.image_loading '''
        if not hasattr(w2, "source"):
            __create_property_w2("source", (None))
        '''Line 991: <VideoPlayerPreview> -> Image @ pos_hint: {'x': 0, 'y': 0} '''
        if not hasattr(w2, "pos_hint"):
            __create_property_w2("pos_hint", ({'x': 0, 'y': 0}))

        __mc[63].add(root.__class__)

    '''Line 982: <VideoPlayerPreview> @ pos_hint: {'x': 0, 'y': 0} '''
    root.pos_hint = {'x': 0, 'y': 0}

    '''Line 983: <VideoPlayerPreview> @ image_overlay_play: 'atlas://data/images/defaulttheme/player-play-overlay' '''
    root.image_overlay_play = 'atlas://data/images/defaulttheme/player-play-overlay'

    '''Line 984: <VideoPlayerPreview> @ image_loading: 'data/images/image-loading.gif' '''
    root.image_loading = 'data/images/image-loading.gif'

    '''Line 987: <VideoPlayerPreview> -> Image @ color: (.5, .5, .5, 1) '''
    w1.color = (.5, .5, .5, 1)

    '''Line 988: <VideoPlayerPreview> -> Image @ pos_hint: {'x': 0, 'y': 0} '''
    w1.pos_hint = {'x': 0, 'y': 0}

    '''Line 991: <VideoPlayerPreview> -> Image @ pos_hint: {'x': 0, 'y': 0} '''
    w2.pos_hint = {'x': 0, 'y': 0}

    '''Line 986: <VideoPlayerPreview> -> Image @ source: root.source '''
    w1.source = root.source

    '''Line 990: <VideoPlayerPreview> -> Image @ source: root.image_overlay_play if not root.click_done else root.image_loading '''
    w2.source = root.image_overlay_play if not root.click_done else root.image_loading

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b63(app, root, w1, w2))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b63, app, root, w1, w2))

def __b63(app, root, w1, w2):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w2 = w2.proxy_ref

    __bound = [None, ] * 4
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "source", __bind_root("source", __h250_source, __ref_root, __ref_w1), __h250_source, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "image_loading", __bind_root("image_loading", __h251_source, __ref_root, __ref_w2), __h251_source, [__ref_root, __ref_w2]]
    __bound[2] = [None, None, None, __ref_root, "click_done", __bind_root("click_done", __h251_source, __ref_root, __ref_w2), __h251_source, [__ref_root, __ref_w2]]
    __bound[3] = [None, None, None, __ref_root, "image_overlay_play", __bind_root("image_overlay_play", __h251_source, __ref_root, __ref_w2), __h251_source, [__ref_root, __ref_w2]]
    __handlers[w2.uid].append((__bound, (1, 2, 3)))
    __handlers[w1.uid].append((__bound, (0, )))

    return __partial(__d63, app, root, w1, w2)

def __d63(app, root, w1, w2):
    args = None, None

    '''Line 986: <VideoPlayerPreview> -> Image @ source: root.source '''
    w1.source = root.source

    '''Line 990: <VideoPlayerPreview> -> Image @ source: root.image_overlay_play if not root.click_done else root.image_loading '''
    w2.source = root.image_overlay_play if not root.click_done else root.image_loading

    return (w1, w2)


def __h252_size_hint(root, *args):
    '''Line 1003: <VideoPlayerAnnotation> @ size_hint: self.annotation['size_hint'] if 'size_hint' in self.annotation else (None, None) '''
    root = root.__self__
    root.size_hint = root.annotation['size_hint'] if 'size_hint' in root.annotation else (None, None)

def __h253_size(root, *args):
    '''Line 1004: <VideoPlayerAnnotation> @ size: self.annotation['size'] if 'size' in self.annotation else (self.texture_size[0] + 20, self.texture_size[1] + 20) '''
    root = root.__self__
    root.size = root.annotation['size'] if 'size' in root.annotation else (root.texture_size[0] + 20, root.texture_size[1] + 20)

def __h254_pos_hint(root, *args):
    '''Line 1005: <VideoPlayerAnnotation> @ pos_hint: self.annotation['pos_hint'] if 'pos_hint' in self.annotation else {'center_x': .5, 'y': .05} '''
    root = root.__self__
    root.pos_hint = root.annotation['pos_hint'] if 'pos_hint' in root.annotation else {'center_x': .5, 'y': .05}

def __h255_rgba(g1, root, *args):
    '''Line 997: <VideoPlayerAnnotation> -> Color @ rgba: self.annotation['bgcolor'] if 'bgcolor' in self.annotation else (0, 0, 0, 0.8) '''
    root = root.__self__
    g1.rgba = root.annotation['bgcolor'] if 'bgcolor' in root.annotation else (0, 0, 0, 0.8)

def __h256_pos(g2, root, *args):
    '''Line 999: <VideoPlayerAnnotation> -> BorderImage @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h257_size(g2, root, *args):
    '''Line 1000: <VideoPlayerAnnotation> -> BorderImage @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h258_source(g2, root, *args):
    '''Line 1001: <VideoPlayerAnnotation> -> BorderImage @ source: self.annotation['bgsource'] if 'bgsource' in self.annotation else None '''
    root = root.__self__
    g2.source = root.annotation['bgsource'] if 'bgsource' in root.annotation else None

def __h259_border(g2, root, *args):
    '''Line 1002: <VideoPlayerAnnotation> -> BorderImage @ border: self.annotation['border'] if 'border' in self.annotation else (0, 0, 0, 0) '''
    root = root.__self__
    g2.border = root.annotation['border'] if 'border' in root.annotation else (0, 0, 0, 0)


# <VideoPlayerAnnotation> L994
__mc[64] = set()
def __r64(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_before = root.canvas.before.add

    '''Line 996: <VideoPlayerAnnotation> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_before(g1)

    '''Line 998: <VideoPlayerAnnotation> -> BorderImage'''
    g2 = Factory.BorderImage()
    __add_root_canvas_before(g2)

    if root.__class__ not in __mc[64]:
        __create_property_root = root.create_property
        '''Line 1003: <VideoPlayerAnnotation> @ size_hint: self.annotation['size_hint'] if 'size_hint' in self.annotation else (None, None) '''
        if not hasattr(root, "size_hint"):
            __create_property_root("size_hint", (None))
        '''Line 1004: <VideoPlayerAnnotation> @ size: self.annotation['size'] if 'size' in self.annotation else (self.texture_size[0] + 20, self.texture_size[1] + 20) '''
        if not hasattr(root, "size"):
            __create_property_root("size", (None))
        '''Line 1005: <VideoPlayerAnnotation> @ pos_hint: self.annotation['pos_hint'] if 'pos_hint' in self.annotation else {'center_x': .5, 'y': .05} '''
        if not hasattr(root, "pos_hint"):
            __create_property_root("pos_hint", (None))

        __mc[64].add(root.__class__)

    '''Line 1003: <VideoPlayerAnnotation> @ size_hint: self.annotation['size_hint'] if 'size_hint' in self.annotation else (None, None) '''
    root.size_hint = root.annotation['size_hint'] if 'size_hint' in root.annotation else (None, None)

    '''Line 1004: <VideoPlayerAnnotation> @ size: self.annotation['size'] if 'size' in self.annotation else (self.texture_size[0] + 20, self.texture_size[1] + 20) '''
    root.size = root.annotation['size'] if 'size' in root.annotation else (root.texture_size[0] + 20, root.texture_size[1] + 20)

    '''Line 1005: <VideoPlayerAnnotation> @ pos_hint: self.annotation['pos_hint'] if 'pos_hint' in self.annotation else {'center_x': .5, 'y': .05} '''
    root.pos_hint = root.annotation['pos_hint'] if 'pos_hint' in root.annotation else {'center_x': .5, 'y': .05}

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b64(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b64, app, g1, g2, root))

def __b64(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 997: <VideoPlayerAnnotation> -> Color @ rgba: self.annotation['bgcolor'] if 'bgcolor' in self.annotation else (0, 0, 0, 0.8) '''
    __delayed___h255_rgba = [__h255_rgba, g1.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h255_rgba, None, None)

    '''Line 999: <VideoPlayerAnnotation> -> BorderImage @ pos: self.pos '''
    __delayed___h256_pos = [__h256_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h256_pos, None, None)

    '''Line 1000: <VideoPlayerAnnotation> -> BorderImage @ size: self.size '''
    __delayed___h257_size = [__h257_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h257_size, None, None)

    '''Line 1001: <VideoPlayerAnnotation> -> BorderImage @ source: self.annotation['bgsource'] if 'bgsource' in self.annotation else None '''
    __delayed___h258_source = [__h258_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h258_source, None, None)

    '''Line 1002: <VideoPlayerAnnotation> -> BorderImage @ border: self.annotation['border'] if 'border' in self.annotation else (0, 0, 0, 0) '''
    __delayed___h259_border = [__h259_border, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h259_border, None, None)

    __bound = [None, ] * 9
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "annotation", __bind_root("annotation", __h252_size_hint, __ref_root), __h252_size_hint, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "texture_size", __bind_root("texture_size", __h253_size, __ref_root), __h253_size, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "annotation", __bind_root("annotation", __h253_size, __ref_root), __h253_size, (__ref_root, )]
    __bound[3] = [None, None, None, __ref_root, "annotation", __bind_root("annotation", __h254_pos_hint, __ref_root), __h254_pos_hint, (__ref_root, )]
    __bound[4] = [None, None, None, __ref_root, "annotation", __bind_root("annotation", __delayed_call_fn, __delayed___h255_rgba), __delayed_call_fn, (__delayed___h255_rgba, )]
    __bound[5] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h256_pos), __delayed_call_fn, (__delayed___h256_pos, )]
    __bound[6] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h257_size), __delayed_call_fn, (__delayed___h257_size, )]
    __bound[7] = [None, None, None, __ref_root, "annotation", __bind_root("annotation", __delayed_call_fn, __delayed___h258_source), __delayed_call_fn, (__delayed___h258_source, )]
    __bound[8] = [None, None, None, __ref_root, "annotation", __bind_root("annotation", __delayed_call_fn, __delayed___h259_border), __delayed_call_fn, (__delayed___h259_border, )]
    __handlers[root.uid].append((__bound, (0, 1, 2, 3)))
    __handlers[g2.uid].append((__bound, (5, 6, 7, 8)))
    __handlers[g1.uid].append((__bound, (4, )))

    return __partial(__d64, app, g1, g2, root)

def __d64(app, g1, g2, root):
    args = None, None

    '''Line 1003: <VideoPlayerAnnotation> @ size_hint: self.annotation['size_hint'] if 'size_hint' in self.annotation else (None, None) '''
    root.size_hint = root.annotation['size_hint'] if 'size_hint' in root.annotation else (None, None)

    '''Line 1004: <VideoPlayerAnnotation> @ size: self.annotation['size'] if 'size' in self.annotation else (self.texture_size[0] + 20, self.texture_size[1] + 20) '''
    root.size = root.annotation['size'] if 'size' in root.annotation else (root.texture_size[0] + 20, root.texture_size[1] + 20)

    '''Line 1005: <VideoPlayerAnnotation> @ pos_hint: self.annotation['pos_hint'] if 'pos_hint' in self.annotation else {'center_x': .5, 'y': .05} '''
    root.pos_hint = root.annotation['pos_hint'] if 'pos_hint' in root.annotation else {'center_x': .5, 'y': .05}

    return ()


def __h260_source(root, w3, *args):
    '''Line 1024: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ source: root.image_stop '''
    root = root.__self__
    w3.source = root.image_stop

def __h261_source(root, w4, *args):
    '''Line 1031: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ source: root.image_pause if root.state == 'play' else root.image_play '''
    root = root.__self__
    w4.source = root.image_pause if root.state == 'play' else root.image_play

def __h262_source(root, w5, *args):
    '''Line 1038: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ source: root.image_volumehigh if root.volume > 0.8 else (root.image_volumemedium if root.volume > 0.4 else (root.image_volumelow if root.volume > 0 else root.image_volumemuted)) '''
    root = root.__self__
    w5.source = root.image_volumehigh if root.volume > 0.8 else (root.image_volumemedium if root.volume > 0.4 else (root.image_volumelow if root.volume > 0 else root.image_volumemuted))

def __h263_max(root, w7, *args):
    '''Line 1047: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ max: max(root.duration, root.position, 1) '''
    root = root.__self__
    w7.max = max(root.duration, root.position, 1)

def __h264_value(root, w7, *args):
    '''Line 1048: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ value: root.position '''
    root = root.__self__
    w7.value = root.position


# <VideoPlayer> L1007
__mc[65] = set()
def __r65(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_Widget = Factory.Widget

    '''Line 1011: <VideoPlayer> -> FloatLayout'''
    w1_container = Factory.FloatLayout(parent=root, __builder_created=__bfuncs)

    '''Line 1015: <VideoPlayer> -> GridLayout'''
    w2 = Factory.GridLayout(parent=root, __builder_created=__bfuncs)

    '''Line 1020: <VideoPlayer> -> GridLayout -> VideoPlayerStop'''
    w3 = Factory.VideoPlayerStop(parent=w2, __builder_created=__bfuncs)

    '''Line 1027: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause'''
    w4 = Factory.VideoPlayerPlayPause(parent=w2, __builder_created=__bfuncs)

    '''Line 1034: <VideoPlayer> -> GridLayout -> VideoPlayerVolume'''
    w5 = Factory.VideoPlayerVolume(parent=w2, __builder_created=__bfuncs)

    '''Line 1041: <VideoPlayer> -> GridLayout -> Widget'''
    w6 = __cls_Widget(parent=w2, __builder_created=__bfuncs)

    '''Line 1045: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar'''
    w7 = Factory.VideoPlayerProgressBar(parent=w2, __builder_created=__bfuncs)

    '''Line 1050: <VideoPlayer> -> GridLayout -> Widget'''
    w8 = __cls_Widget(parent=w2, __builder_created=__bfuncs)

    root.ids["container"] = w1_container.proxy_ref

    if root.__class__ not in __mc[65]:
        __create_property_root = root.create_property
        '''Line 1008: <VideoPlayer> @ container: container '''
        if not hasattr(root, "container"):
            __create_property_root("container", (None))
        '''Line 1009: <VideoPlayer> @ cols: 1 '''
        if not hasattr(root, "cols"):
            __create_property_root("cols", (1))

        '''Line 1012: <VideoPlayer> -> FloatLayout @ cols: 1 '''
        if not hasattr(w1_container, "cols"):
            w1_container.create_property("cols", (1))

        __create_property_w2 = w2.create_property
        '''Line 1016: <VideoPlayer> -> GridLayout @ rows: 1 '''
        if not hasattr(w2, "rows"):
            __create_property_w2("rows", (1))
        '''Line 1017: <VideoPlayer> -> GridLayout @ size_hint_y: None '''
        if not hasattr(w2, "size_hint_y"):
            __create_property_w2("size_hint_y", (None))
        '''Line 1018: <VideoPlayer> -> GridLayout @ height: '44dp' '''
        if not hasattr(w2, "height"):
            __create_property_w2("height", ('44dp'))

        __create_property_w3 = w3.create_property
        '''Line 1021: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ size_hint_x: None '''
        if not hasattr(w3, "size_hint_x"):
            __create_property_w3("size_hint_x", (None))
        '''Line 1022: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ video: root '''
        if not hasattr(w3, "video"):
            __create_property_w3("video", (None))
        '''Line 1023: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ width: '44dp' '''
        if not hasattr(w3, "width"):
            __create_property_w3("width", ('44dp'))
        '''Line 1024: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ source: root.image_stop '''
        if not hasattr(w3, "source"):
            __create_property_w3("source", (None))
        '''Line 1025: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ allow_stretch: True '''
        if not hasattr(w3, "allow_stretch"):
            __create_property_w3("allow_stretch", (None))

        __create_property_w4 = w4.create_property
        '''Line 1028: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ size_hint_x: None '''
        if not hasattr(w4, "size_hint_x"):
            __create_property_w4("size_hint_x", (None))
        '''Line 1029: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ video: root '''
        if not hasattr(w4, "video"):
            __create_property_w4("video", (None))
        '''Line 1030: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ width: '44dp' '''
        if not hasattr(w4, "width"):
            __create_property_w4("width", ('44dp'))
        '''Line 1031: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ source: root.image_pause if root.state == 'play' else root.image_play '''
        if not hasattr(w4, "source"):
            __create_property_w4("source", (None))
        '''Line 1032: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ allow_stretch: True '''
        if not hasattr(w4, "allow_stretch"):
            __create_property_w4("allow_stretch", (None))

        __create_property_w5 = w5.create_property
        '''Line 1035: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ video: root '''
        if not hasattr(w5, "video"):
            __create_property_w5("video", (None))
        '''Line 1036: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ size_hint_x: None '''
        if not hasattr(w5, "size_hint_x"):
            __create_property_w5("size_hint_x", (None))
        '''Line 1037: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ width: '44dp' '''
        if not hasattr(w5, "width"):
            __create_property_w5("width", ('44dp'))
        '''Line 1038: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ source: root.image_volumehigh if root.volume > 0.8 else (root.image_volumemedium if root.volume > 0.4 else (root.image_volumelow if root.volume > 0 else root.image_volumemuted)) '''
        if not hasattr(w5, "source"):
            __create_property_w5("source", (None))
        '''Line 1039: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ allow_stretch: True '''
        if not hasattr(w5, "allow_stretch"):
            __create_property_w5("allow_stretch", (None))

        __create_property_w6 = w6.create_property
        '''Line 1042: <VideoPlayer> -> GridLayout -> Widget @ size_hint_x: None '''
        if not hasattr(w6, "size_hint_x"):
            __create_property_w6("size_hint_x", (None))
        '''Line 1043: <VideoPlayer> -> GridLayout -> Widget @ width: 5 '''
        if not hasattr(w6, "width"):
            __create_property_w6("width", (5))

        __create_property_w7 = w7.create_property
        '''Line 1046: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ video: root '''
        if not hasattr(w7, "video"):
            __create_property_w7("video", (None))
        '''Line 1047: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ max: max(root.duration, root.position, 1) '''
        if not hasattr(w7, "max"):
            __create_property_w7("max", (None))
        '''Line 1048: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ value: root.position '''
        if not hasattr(w7, "value"):
            __create_property_w7("value", (None))

        __create_property_w8 = w8.create_property
        '''Line 1051: <VideoPlayer> -> GridLayout -> Widget @ size_hint_x: None '''
        if not hasattr(w8, "size_hint_x"):
            __create_property_w8("size_hint_x", (None))
        '''Line 1052: <VideoPlayer> -> GridLayout -> Widget @ width: 10 '''
        if not hasattr(w8, "width"):
            __create_property_w8("width", (10))

        __mc[65].add(root.__class__)

    '''Line 1008: <VideoPlayer> @ container: container '''
    root.container = w1_container

    '''Line 1009: <VideoPlayer> @ cols: 1 '''
    root.cols = 1

    '''Line 1012: <VideoPlayer> -> FloatLayout @ cols: 1 '''
    w1_container.cols = 1

    '''Line 1016: <VideoPlayer> -> GridLayout @ rows: 1 '''
    w2.rows = 1

    '''Line 1017: <VideoPlayer> -> GridLayout @ size_hint_y: None '''
    w2.size_hint_y = None

    '''Line 1018: <VideoPlayer> -> GridLayout @ height: '44dp' '''
    w2.height = '44dp'

    '''Line 1021: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ size_hint_x: None '''
    w3.size_hint_x = None

    '''Line 1022: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ video: root '''
    w3.video = root

    '''Line 1023: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ width: '44dp' '''
    w3.width = '44dp'

    '''Line 1025: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ allow_stretch: True '''
    w3.allow_stretch = True

    '''Line 1028: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ size_hint_x: None '''
    w4.size_hint_x = None

    '''Line 1029: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ video: root '''
    w4.video = root

    '''Line 1030: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ width: '44dp' '''
    w4.width = '44dp'

    '''Line 1032: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ allow_stretch: True '''
    w4.allow_stretch = True

    '''Line 1035: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ video: root '''
    w5.video = root

    '''Line 1036: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ size_hint_x: None '''
    w5.size_hint_x = None

    '''Line 1037: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ width: '44dp' '''
    w5.width = '44dp'

    '''Line 1039: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ allow_stretch: True '''
    w5.allow_stretch = True

    '''Line 1042: <VideoPlayer> -> GridLayout -> Widget @ size_hint_x: None '''
    w6.size_hint_x = None

    '''Line 1043: <VideoPlayer> -> GridLayout -> Widget @ width: 5 '''
    w6.width = 5

    '''Line 1046: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ video: root '''
    w7.video = root

    '''Line 1051: <VideoPlayer> -> GridLayout -> Widget @ size_hint_x: None '''
    w8.size_hint_x = None

    '''Line 1052: <VideoPlayer> -> GridLayout -> Widget @ width: 10 '''
    w8.width = 10

    '''Line 1024: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ source: root.image_stop '''
    w3.source = root.image_stop

    '''Line 1031: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ source: root.image_pause if root.state == 'play' else root.image_play '''
    w4.source = root.image_pause if root.state == 'play' else root.image_play

    '''Line 1038: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ source: root.image_volumehigh if root.volume > 0.8 else (root.image_volumemedium if root.volume > 0.4 else (root.image_volumelow if root.volume > 0 else root.image_volumemuted)) '''
    w5.source = root.image_volumehigh if root.volume > 0.8 else (root.image_volumemedium if root.volume > 0.4 else (root.image_volumelow if root.volume > 0 else root.image_volumemuted))

    '''Line 1047: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ max: max(root.duration, root.position, 1) '''
    w7.max = max(root.duration, root.position, 1)

    '''Line 1048: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ value: root.position '''
    w7.value = root.position

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b65(app, root, w1_container, w2, w3, w4, w5, w6, w7, w8))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b65, app, root, w1_container, w2, w3, w4, w5, w6, w7, w8))

def __b65(app, root, w1_container, w2, w3, w4, w5, w6, w7, w8):
    __ref_root = root.proxy_ref
    __ref_w3 = w3.proxy_ref
    __ref_w4 = w4.proxy_ref
    __ref_w5 = w5.proxy_ref
    __ref_w7 = w7.proxy_ref

    __bound = [None, ] * 12
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "image_stop", __bind_root("image_stop", __h260_source, __ref_root, __ref_w3), __h260_source, [__ref_root, __ref_w3]]
    __bound[1] = [None, None, None, __ref_root, "image_play", __bind_root("image_play", __h261_source, __ref_root, __ref_w4), __h261_source, [__ref_root, __ref_w4]]
    __bound[2] = [None, None, None, __ref_root, "image_pause", __bind_root("image_pause", __h261_source, __ref_root, __ref_w4), __h261_source, [__ref_root, __ref_w4]]
    __bound[3] = [None, None, None, __ref_root, "state", __bind_root("state", __h261_source, __ref_root, __ref_w4), __h261_source, [__ref_root, __ref_w4]]
    __bound[4] = [None, None, None, __ref_root, "image_volumelow", __bind_root("image_volumelow", __h262_source, __ref_root, __ref_w5), __h262_source, [__ref_root, __ref_w5]]
    __bound[5] = [None, None, None, __ref_root, "image_volumehigh", __bind_root("image_volumehigh", __h262_source, __ref_root, __ref_w5), __h262_source, [__ref_root, __ref_w5]]
    __bound[6] = [None, None, None, __ref_root, "image_volumemedium", __bind_root("image_volumemedium", __h262_source, __ref_root, __ref_w5), __h262_source, [__ref_root, __ref_w5]]
    __bound[7] = [None, None, None, __ref_root, "image_volumemuted", __bind_root("image_volumemuted", __h262_source, __ref_root, __ref_w5), __h262_source, [__ref_root, __ref_w5]]
    __bound[8] = [None, None, None, __ref_root, "volume", __bind_root("volume", __h262_source, __ref_root, __ref_w5), __h262_source, [__ref_root, __ref_w5]]
    __bound[9] = [None, None, None, __ref_root, "position", __bind_root("position", __h263_max, __ref_root, __ref_w7), __h263_max, [__ref_root, __ref_w7]]
    __bound[10] = [None, None, None, __ref_root, "duration", __bind_root("duration", __h263_max, __ref_root, __ref_w7), __h263_max, [__ref_root, __ref_w7]]
    __bound[11] = [None, None, None, __ref_root, "position", __bind_root("position", __h264_value, __ref_root, __ref_w7), __h264_value, [__ref_root, __ref_w7]]
    __handlers[w7.uid].append((__bound, (9, 10, 11)))
    __handlers[w5.uid].append((__bound, (4, 5, 6, 7, 8)))
    __handlers[w4.uid].append((__bound, (1, 2, 3)))
    __handlers[w3.uid].append((__bound, (0, )))

    return __partial(__d65, app, root, w1_container, w2, w3, w4, w5, w6, w7, w8)

def __d65(app, root, w1_container, w2, w3, w4, w5, w6, w7, w8):
    args = None, None

    '''Line 1024: <VideoPlayer> -> GridLayout -> VideoPlayerStop @ source: root.image_stop '''
    w3.source = root.image_stop

    '''Line 1031: <VideoPlayer> -> GridLayout -> VideoPlayerPlayPause @ source: root.image_pause if root.state == 'play' else root.image_play '''
    w4.source = root.image_pause if root.state == 'play' else root.image_play

    '''Line 1038: <VideoPlayer> -> GridLayout -> VideoPlayerVolume @ source: root.image_volumehigh if root.volume > 0.8 else (root.image_volumemedium if root.volume > 0.4 else (root.image_volumelow if root.volume > 0 else root.image_volumemuted)) '''
    w5.source = root.image_volumehigh if root.volume > 0.8 else (root.image_volumemedium if root.volume > 0.4 else (root.image_volumelow if root.volume > 0 else root.image_volumemuted))

    '''Line 1047: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ max: max(root.duration, root.position, 1) '''
    w7.max = max(root.duration, root.position, 1)

    '''Line 1048: <VideoPlayer> -> GridLayout -> VideoPlayerProgressBar @ value: root.position '''
    w7.value = root.position

    return (w1_container, w2, w3, w4, w5, w6, w7, w8)


def __h265__checkbox_state_image(root, *args):
    '''Line 1060: <CheckBox> @ _checkbox_state_image: self.background_checkbox_down \
    if self.active else self.background_checkbox_normal '''
    root = root.__self__
    root._checkbox_state_image = root.background_checkbox_down \
    if root.active else root.background_checkbox_normal

def __h266__checkbox_disabled_image(root, *args):
    '''Line 1063: <CheckBox> @ _checkbox_disabled_image: self.background_checkbox_disabled_down \
    if self.active else self.background_checkbox_disabled_normal '''
    root = root.__self__
    root._checkbox_disabled_image = root.background_checkbox_disabled_down \
    if root.active else root.background_checkbox_disabled_normal

def __h267__radio_state_image(root, *args):
    '''Line 1066: <CheckBox> @ _radio_state_image: self.background_radio_down \
    if self.active else self.background_radio_normal '''
    root = root.__self__
    root._radio_state_image = root.background_radio_down \
    if root.active else root.background_radio_normal

def __h268__radio_disabled_image(root, *args):
    '''Line 1069: <CheckBox> @ _radio_disabled_image: self.background_radio_disabled_down \
    if self.active else self.background_radio_disabled_normal '''
    root = root.__self__
    root._radio_disabled_image = root.background_radio_disabled_down \
    if root.active else root.background_radio_disabled_normal

def __h269__checkbox_image(root, *args):
    '''Line 1072: <CheckBox> @ _checkbox_image: self._checkbox_disabled_image \
    if self.disabled else self._checkbox_state_image '''
    root = root.__self__
    root._checkbox_image = root._checkbox_disabled_image \
    if root.disabled else root._checkbox_state_image

def __h270__radio_image(root, *args):
    '''Line 1075: <CheckBox> @ _radio_image: self._radio_disabled_image \
    if self.disabled else self._radio_state_image '''
    root = root.__self__
    root._radio_image = root._radio_disabled_image \
    if root.disabled else root._radio_state_image

def __h271_source(g2, root, *args):
    '''Line 1081: <CheckBox> -> Rectangle @ source: self._radio_image if self.group else self._checkbox_image '''
    root = root.__self__
    g2.source = root._radio_image if root.group else root._checkbox_image

def __h272_pos(g2, root, *args):
    '''Line 1083: <CheckBox> -> Rectangle @ pos: int(self.center_x - sp(16)), int(self.center_y - sp(16)) '''
    root = root.__self__
    g2.pos = int(root.center_x - sp(16)), int(root.center_y - sp(16))


# <CheckBox> L1058
__mc[66] = set()
def __r66(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __add_root_canvas_root = root.canvas.add

    '''Line 1078: <CheckBox> -> Color'''
    g1 = Factory.Color()
    __add_root_canvas_root(g1)

    '''Line 1080: <CheckBox> -> Rectangle'''
    g2 = Factory.Rectangle()
    __add_root_canvas_root(g2)

    if root.__class__ not in __mc[66]:
        __create_property_root = root.create_property
        '''Line 1060: <CheckBox> @ _checkbox_state_image: self.background_checkbox_down \
        if self.active else self.background_checkbox_normal '''
        if not hasattr(root, "_checkbox_state_image"):
            __create_property_root("_checkbox_state_image", (None))
        '''Line 1063: <CheckBox> @ _checkbox_disabled_image: self.background_checkbox_disabled_down \
        if self.active else self.background_checkbox_disabled_normal '''
        if not hasattr(root, "_checkbox_disabled_image"):
            __create_property_root("_checkbox_disabled_image", (None))
        '''Line 1066: <CheckBox> @ _radio_state_image: self.background_radio_down \
        if self.active else self.background_radio_normal '''
        if not hasattr(root, "_radio_state_image"):
            __create_property_root("_radio_state_image", (None))
        '''Line 1069: <CheckBox> @ _radio_disabled_image: self.background_radio_disabled_down \
        if self.active else self.background_radio_disabled_normal '''
        if not hasattr(root, "_radio_disabled_image"):
            __create_property_root("_radio_disabled_image", (None))
        '''Line 1072: <CheckBox> @ _checkbox_image: self._checkbox_disabled_image \
        if self.disabled else self._checkbox_state_image '''
        if not hasattr(root, "_checkbox_image"):
            __create_property_root("_checkbox_image", (None))
        '''Line 1075: <CheckBox> @ _radio_image: self._radio_disabled_image \
        if self.disabled else self._radio_state_image '''
        if not hasattr(root, "_radio_image"):
            __create_property_root("_radio_image", (None))

        __mc[66].add(root.__class__)

    '''Line 1079: <CheckBox> -> Color @ rgb: 1, 1, 1 '''
    g1.rgb = 1, 1, 1

    '''Line 1082: <CheckBox> -> Rectangle @ size: sp(32), sp(32) '''
    g2.size = sp(32), sp(32)

    '''Line 1060: <CheckBox> @ _checkbox_state_image: self.background_checkbox_down \
    if self.active else self.background_checkbox_normal '''
    root._checkbox_state_image = root.background_checkbox_down \
    if root.active else root.background_checkbox_normal

    '''Line 1063: <CheckBox> @ _checkbox_disabled_image: self.background_checkbox_disabled_down \
    if self.active else self.background_checkbox_disabled_normal '''
    root._checkbox_disabled_image = root.background_checkbox_disabled_down \
    if root.active else root.background_checkbox_disabled_normal

    '''Line 1066: <CheckBox> @ _radio_state_image: self.background_radio_down \
    if self.active else self.background_radio_normal '''
    root._radio_state_image = root.background_radio_down \
    if root.active else root.background_radio_normal

    '''Line 1069: <CheckBox> @ _radio_disabled_image: self.background_radio_disabled_down \
    if self.active else self.background_radio_disabled_normal '''
    root._radio_disabled_image = root.background_radio_disabled_down \
    if root.active else root.background_radio_disabled_normal

    '''Line 1072: <CheckBox> @ _checkbox_image: self._checkbox_disabled_image \
    if self.disabled else self._checkbox_state_image '''
    root._checkbox_image = root._checkbox_disabled_image \
    if root.disabled else root._checkbox_state_image

    '''Line 1075: <CheckBox> @ _radio_image: self._radio_disabled_image \
    if self.disabled else self._radio_state_image '''
    root._radio_image = root._radio_disabled_image \
    if root.disabled else root._radio_state_image

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b66(app, g1, g2, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b66, app, g1, g2, root))

def __b66(app, g1, g2, root):
    __ref_g2 = g2.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 1081: <CheckBox> -> Rectangle @ source: self._radio_image if self.group else self._checkbox_image '''
    __delayed___h271_source = [__h271_source, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h271_source, None, None)

    '''Line 1083: <CheckBox> -> Rectangle @ pos: int(self.center_x - sp(16)), int(self.center_y - sp(16)) '''
    __delayed___h272_pos = [__h272_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h272_pos, None, None)

    __bound = [None, ] * 23
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "active", __bind_root("active", __h265__checkbox_state_image, __ref_root), __h265__checkbox_state_image, (__ref_root, )]
    __bound[1] = [None, None, None, __ref_root, "background_checkbox_down", __bind_root("background_checkbox_down", __h265__checkbox_state_image, __ref_root), __h265__checkbox_state_image, (__ref_root, )]
    __bound[2] = [None, None, None, __ref_root, "background_checkbox_normal", __bind_root("background_checkbox_normal", __h265__checkbox_state_image, __ref_root), __h265__checkbox_state_image, (__ref_root, )]
    __bound[3] = [None, None, None, __ref_root, "active", __bind_root("active", __h266__checkbox_disabled_image, __ref_root), __h266__checkbox_disabled_image, (__ref_root, )]
    __bound[4] = [None, None, None, __ref_root, "background_checkbox_disabled_down", __bind_root("background_checkbox_disabled_down", __h266__checkbox_disabled_image, __ref_root), __h266__checkbox_disabled_image, (__ref_root, )]
    __bound[5] = [None, None, None, __ref_root, "background_checkbox_disabled_normal", __bind_root("background_checkbox_disabled_normal", __h266__checkbox_disabled_image, __ref_root), __h266__checkbox_disabled_image, (__ref_root, )]
    __bound[6] = [None, None, None, __ref_root, "background_radio_down", __bind_root("background_radio_down", __h267__radio_state_image, __ref_root), __h267__radio_state_image, (__ref_root, )]
    __bound[7] = [None, None, None, __ref_root, "background_radio_normal", __bind_root("background_radio_normal", __h267__radio_state_image, __ref_root), __h267__radio_state_image, (__ref_root, )]
    __bound[8] = [None, None, None, __ref_root, "active", __bind_root("active", __h267__radio_state_image, __ref_root), __h267__radio_state_image, (__ref_root, )]
    __bound[9] = [None, None, None, __ref_root, "active", __bind_root("active", __h268__radio_disabled_image, __ref_root), __h268__radio_disabled_image, (__ref_root, )]
    __bound[10] = [None, None, None, __ref_root, "background_radio_disabled_down", __bind_root("background_radio_disabled_down", __h268__radio_disabled_image, __ref_root), __h268__radio_disabled_image, (__ref_root, )]
    __bound[11] = [None, None, None, __ref_root, "background_radio_disabled_normal", __bind_root("background_radio_disabled_normal", __h268__radio_disabled_image, __ref_root), __h268__radio_disabled_image, (__ref_root, )]
    __bound[12] = [None, None, None, __ref_root, "_checkbox_disabled_image", __bind_root("_checkbox_disabled_image", __h269__checkbox_image, __ref_root), __h269__checkbox_image, (__ref_root, )]
    __bound[13] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __h269__checkbox_image, __ref_root), __h269__checkbox_image, (__ref_root, )]
    __bound[14] = [None, None, None, __ref_root, "_checkbox_state_image", __bind_root("_checkbox_state_image", __h269__checkbox_image, __ref_root), __h269__checkbox_image, (__ref_root, )]
    __bound[15] = [None, None, None, __ref_root, "disabled", __bind_root("disabled", __h270__radio_image, __ref_root), __h270__radio_image, (__ref_root, )]
    __bound[16] = [None, None, None, __ref_root, "_radio_disabled_image", __bind_root("_radio_disabled_image", __h270__radio_image, __ref_root), __h270__radio_image, (__ref_root, )]
    __bound[17] = [None, None, None, __ref_root, "_radio_state_image", __bind_root("_radio_state_image", __h270__radio_image, __ref_root), __h270__radio_image, (__ref_root, )]
    __bound[18] = [None, None, None, __ref_root, "group", __bind_root("group", __delayed_call_fn, __delayed___h271_source), __delayed_call_fn, (__delayed___h271_source, )]
    __bound[19] = [None, None, None, __ref_root, "_checkbox_image", __bind_root("_checkbox_image", __delayed_call_fn, __delayed___h271_source), __delayed_call_fn, (__delayed___h271_source, )]
    __bound[20] = [None, None, None, __ref_root, "_radio_image", __bind_root("_radio_image", __delayed_call_fn, __delayed___h271_source), __delayed_call_fn, (__delayed___h271_source, )]
    __bound[21] = [None, None, None, __ref_root, "center_y", __bind_root("center_y", __delayed_call_fn, __delayed___h272_pos), __delayed_call_fn, (__delayed___h272_pos, )]
    __bound[22] = [None, None, None, __ref_root, "center_x", __bind_root("center_x", __delayed_call_fn, __delayed___h272_pos), __delayed_call_fn, (__delayed___h272_pos, )]
    __handlers[root.uid].append((__bound, (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)))
    __handlers[g2.uid].append((__bound, (18, 19, 20, 21, 22)))

    return __partial(__d66, app, g1, g2, root)

def __d66(app, g1, g2, root):
    args = None, None

    '''Line 1060: <CheckBox> @ _checkbox_state_image: self.background_checkbox_down \
    if self.active else self.background_checkbox_normal '''
    root._checkbox_state_image = root.background_checkbox_down \
    if root.active else root.background_checkbox_normal

    '''Line 1063: <CheckBox> @ _checkbox_disabled_image: self.background_checkbox_disabled_down \
    if self.active else self.background_checkbox_disabled_normal '''
    root._checkbox_disabled_image = root.background_checkbox_disabled_down \
    if root.active else root.background_checkbox_disabled_normal

    '''Line 1066: <CheckBox> @ _radio_state_image: self.background_radio_down \
    if self.active else self.background_radio_normal '''
    root._radio_state_image = root.background_radio_down \
    if root.active else root.background_radio_normal

    '''Line 1069: <CheckBox> @ _radio_disabled_image: self.background_radio_disabled_down \
    if self.active else self.background_radio_disabled_normal '''
    root._radio_disabled_image = root.background_radio_disabled_down \
    if root.active else root.background_radio_disabled_normal

    '''Line 1072: <CheckBox> @ _checkbox_image: self._checkbox_disabled_image \
    if self.disabled else self._checkbox_state_image '''
    root._checkbox_image = root._checkbox_disabled_image \
    if root.disabled else root._checkbox_state_image

    '''Line 1075: <CheckBox> @ _radio_image: self._radio_disabled_image \
    if self.disabled else self._radio_state_image '''
    root._radio_image = root._radio_disabled_image \
    if root.disabled else root._radio_state_image

    return ()


def __h273_pos(g2, root, *args):
    '''Line 1093: <ScreenManager> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g2.pos = root.pos

def __h274_size(g2, root, *args):
    '''Line 1094: <ScreenManager> -> Rectangle @ size: self.size '''
    root = root.__self__
    g2.size = root.size

def __h275_pos(g5, root, *args):
    '''Line 1099: <ScreenManager> -> Rectangle @ pos: self.pos '''
    root = root.__self__
    g5.pos = root.pos

def __h276_size(g5, root, *args):
    '''Line 1100: <ScreenManager> -> Rectangle @ size: self.size '''
    root = root.__self__
    g5.size = root.size


# <ScreenManager> L1089
def __r67(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created

    __cls_Rectangle = Factory.Rectangle

    __add_root_canvas_before = root.canvas.before.add
    __add_root_canvas_after = root.canvas.after.add

    '''Line 1091: <ScreenManager> -> StencilPush'''
    g1 = Factory.StencilPush()
    __add_root_canvas_before(g1)

    '''Line 1092: <ScreenManager> -> Rectangle'''
    g2 = __cls_Rectangle()
    __add_root_canvas_before(g2)

    '''Line 1095: <ScreenManager> -> StencilUse'''
    g3 = Factory.StencilUse()
    __add_root_canvas_before(g3)

    '''Line 1097: <ScreenManager> -> StencilUnUse'''
    g4 = Factory.StencilUnUse()
    __add_root_canvas_after(g4)

    '''Line 1098: <ScreenManager> -> Rectangle'''
    g5 = __cls_Rectangle()
    __add_root_canvas_after(g5)

    '''Line 1101: <ScreenManager> -> StencilPop'''
    g6 = Factory.StencilPop()
    __add_root_canvas_after(g6)

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b67(app, g1, g2, g3, g4, g5, g6, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b67, app, g1, g2, g3, g4, g5, g6, root))

def __b67(app, g1, g2, g3, g4, g5, g6, root):
    __ref_g2 = g2.proxy_ref
    __ref_g5 = g5.proxy_ref
    __ref_root = root.proxy_ref

    '''Line 1093: <ScreenManager> -> Rectangle @ pos: self.pos '''
    __delayed___h273_pos = [__h273_pos, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h273_pos, None, None)

    '''Line 1094: <ScreenManager> -> Rectangle @ size: self.size '''
    __delayed___h274_size = [__h274_size, __ref_g2, __ref_root, None]
    __delayed_call_fn(__delayed___h274_size, None, None)

    '''Line 1099: <ScreenManager> -> Rectangle @ pos: self.pos '''
    __delayed___h275_pos = [__h275_pos, __ref_g5, __ref_root, None]
    __delayed_call_fn(__delayed___h275_pos, None, None)

    '''Line 1100: <ScreenManager> -> Rectangle @ size: self.size '''
    __delayed___h276_size = [__h276_size, __ref_g5, __ref_root, None]
    __delayed_call_fn(__delayed___h276_size, None, None)

    __bound = [None, ] * 4
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h273_pos), __delayed_call_fn, (__delayed___h273_pos, )]
    __bound[1] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h274_size), __delayed_call_fn, (__delayed___h274_size, )]
    __bound[2] = [None, None, None, __ref_root, "pos", __bind_root("pos", __delayed_call_fn, __delayed___h275_pos), __delayed_call_fn, (__delayed___h275_pos, )]
    __bound[3] = [None, None, None, __ref_root, "size", __bind_root("size", __delayed_call_fn, __delayed___h276_size), __delayed_call_fn, (__delayed___h276_size, )]
    __handlers[g5.uid].append((__bound, (2, 3)))
    __handlers[g2.uid].append((__bound, (0, 1)))

    return tuple


# <ColorPicker_Input@TextInput> L1106
__mc[68] = set()
def __r68(root, __builder_created):
    args = None, None

    if root.__class__ not in __mc[68]:
        __create_property_root = root.create_property
        '''Line 1107: <ColorPicker_Input@TextInput> @ multiline: False '''
        if not hasattr(root, "multiline"):
            __create_property_root("multiline", (None))
        '''Line 1108: <ColorPicker_Input@TextInput> @ mroot: None '''
        if not hasattr(root, "mroot"):
            __create_property_root("mroot", (None))
        '''Line 1109: <ColorPicker_Input@TextInput> @ padding: sp(5) '''
        if not hasattr(root, "padding"):
            __create_property_root("padding", (None))
        '''Line 1110: <ColorPicker_Input@TextInput> @ border: 4, 9, 4, 9 '''
        if not hasattr(root, "border"):
            __create_property_root("border", (4, 9, 4, 9))

        __mc[68].add(root.__class__)

    '''Line 1107: <ColorPicker_Input@TextInput> @ multiline: False '''
    root.multiline = False

    '''Line 1108: <ColorPicker_Input@TextInput> @ mroot: None '''
    root.mroot = None

    '''Line 1109: <ColorPicker_Input@TextInput> @ padding: sp(5) '''
    root.padding = sp(5)

    '''Line 1110: <ColorPicker_Input@TextInput> @ border: 4, 9, 4, 9 '''
    root.border = 4, 9, 4, 9


def __h277_text_size(root, *args):
    '''Line 1116: <ColorPicker_Label@Label> @ text_size: self.size '''
    root = root.__self__
    root.text_size = root.size


# <ColorPicker_Label@Label> L1112
__mc[69] = set()
def __r69(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    if root.__class__ not in __mc[69]:
        __create_property_root = root.create_property
        '''Line 1113: <ColorPicker_Label@Label> @ mroot: None '''
        if not hasattr(root, "mroot"):
            __create_property_root("mroot", (None))
        '''Line 1114: <ColorPicker_Label@Label> @ size_hint_x: None '''
        if not hasattr(root, "size_hint_x"):
            __create_property_root("size_hint_x", (None))
        '''Line 1115: <ColorPicker_Label@Label> @ width: '30sp' '''
        if not hasattr(root, "width"):
            __create_property_root("width", ('30sp'))
        '''Line 1116: <ColorPicker_Label@Label> @ text_size: self.size '''
        if not hasattr(root, "text_size"):
            __create_property_root("text_size", (None))
        '''Line 1117: <ColorPicker_Label@Label> @ halign: "center" '''
        if not hasattr(root, "halign"):
            __create_property_root("halign", ("center"))
        '''Line 1118: <ColorPicker_Label@Label> @ valign: "middle" '''
        if not hasattr(root, "valign"):
            __create_property_root("valign", ("middle"))

        __mc[69].add(root.__class__)

    '''Line 1113: <ColorPicker_Label@Label> @ mroot: None '''
    root.mroot = None

    '''Line 1114: <ColorPicker_Label@Label> @ size_hint_x: None '''
    root.size_hint_x = None

    '''Line 1115: <ColorPicker_Label@Label> @ width: '30sp' '''
    root.width = '30sp'

    '''Line 1117: <ColorPicker_Label@Label> @ halign: "center" '''
    root.halign = "center"

    '''Line 1118: <ColorPicker_Label@Label> @ valign: "middle" '''
    root.valign = "middle"

    '''Line 1116: <ColorPicker_Label@Label> @ text_size: self.size '''
    root.text_size = root.size

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b69(app, root))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b69, app, root))

def __b69(app, root):
    __ref_root = root.proxy_ref

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_root, "size", root.fast_bind("size", __h277_text_size, __ref_root), __h277_text_size, (__ref_root, )]
    __handlers[root.uid].append((__bound, (0, )))

    return __partial(__d69, app, root)

def __d69(app, root):
    args = None, None

    '''Line 1116: <ColorPicker_Label@Label> @ text_size: self.size '''
    root.text_size = root.size

    return ()


def __h278_text(root, w1, *args):
    '''Line 1128: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ text: root.text '''
    root = root.__self__
    w1.text = root.text

def __h279_mroot(root, w1, *args):
    '''Line 1129: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ mroot: root.mroot '''
    root = root.__self__
    w1.mroot = root.mroot

def __h280_color(root, w1, *args):
    '''Line 1130: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ color: root.foreground_color or (1, 1, 1, 1) '''
    root = root.__self__
    w1.color = root.foreground_color or (1, 1, 1, 1)

def __h281_mroot(root, w3, *args):
    '''Line 1135: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ mroot: root.mroot '''
    root = root.__self__
    w3.mroot = root.mroot

def __h282_text(w3, w4_sldr, *args):
    '''Line 1136: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ text: str(int(sldr.value)) '''
    w4_sldr = w4_sldr.__self__
    w3.text = str(int(w4_sldr.value))

def __h283_value(root, w4_sldr, *args):
    '''Line 1146: <ColorPicker_Selector@BoxLayout> -> Slider @ value: root.color * 255 '''
    root = root.__self__
    w4_sldr.value = root.color * 255

def __h16_on_text(root, *args):
    '''Line 1140: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ on_text: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    root = root.__self__
    root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1])

def __h17_on_value(root, *args):
    '''Line 1148: <ColorPicker_Selector@BoxLayout> -> Slider @ on_value: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    root = root.__self__
    root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1])


# <ColorPicker_Selector@BoxLayout> L1120
__mc[70] = set()
def __r70(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    '''Line 1127: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label'''
    w1 = Factory.ColorPicker_Label(parent=root, __builder_created=__bfuncs)

    '''Line 1131: <ColorPicker_Selector@BoxLayout> -> AnchorLayout'''
    w2 = Factory.AnchorLayout(parent=root, __builder_created=__bfuncs)

    '''Line 1134: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input'''
    w3 = Factory.ColorPicker_Input(parent=w2, __builder_created=__bfuncs)

    '''Line 1141: <ColorPicker_Selector@BoxLayout> -> Slider'''
    w4_sldr = Factory.Slider(parent=root, __builder_created=__bfuncs)

    root.ids["sldr"] = w4_sldr.proxy_ref

    if root.__class__ not in __mc[70]:
        __create_property_root = root.create_property
        '''Line 1121: <ColorPicker_Selector@BoxLayout> @ foreground_color: None '''
        if not hasattr(root, "foreground_color"):
            __create_property_root("foreground_color", (None))
        '''Line 1122: <ColorPicker_Selector@BoxLayout> @ text: '' '''
        if not hasattr(root, "text"):
            __create_property_root("text", (''))
        '''Line 1123: <ColorPicker_Selector@BoxLayout> @ mroot: None '''
        if not hasattr(root, "mroot"):
            __create_property_root("mroot", (None))
        '''Line 1124: <ColorPicker_Selector@BoxLayout> @ mode: 'rgb' '''
        if not hasattr(root, "mode"):
            __create_property_root("mode", ('rgb'))
        '''Line 1125: <ColorPicker_Selector@BoxLayout> @ color: 0 '''
        if not hasattr(root, "color"):
            __create_property_root("color", (0))
        '''Line 1126: <ColorPicker_Selector@BoxLayout> @ spacing: '2sp' '''
        if not hasattr(root, "spacing"):
            __create_property_root("spacing", ('2sp'))

        __create_property_w1 = w1.create_property
        '''Line 1128: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ text: root.text '''
        if not hasattr(w1, "text"):
            __create_property_w1("text", (None))
        '''Line 1129: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ mroot: root.mroot '''
        if not hasattr(w1, "mroot"):
            __create_property_w1("mroot", (None))
        '''Line 1130: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ color: root.foreground_color or (1, 1, 1, 1) '''
        if not hasattr(w1, "color"):
            __create_property_w1("color", (None))

        __create_property_w2 = w2.create_property
        '''Line 1132: <ColorPicker_Selector@BoxLayout> -> AnchorLayout @ size_hint_x: None '''
        if not hasattr(w2, "size_hint_x"):
            __create_property_w2("size_hint_x", (None))
        '''Line 1133: <ColorPicker_Selector@BoxLayout> -> AnchorLayout @ width: '50sp' '''
        if not hasattr(w2, "width"):
            __create_property_w2("width", ('50sp'))

        __create_property_w3 = w3.create_property
        '''Line 1135: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ mroot: root.mroot '''
        if not hasattr(w3, "mroot"):
            __create_property_w3("mroot", (None))
        '''Line 1136: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ text: str(int(sldr.value)) '''
        if not hasattr(w3, "text"):
            __create_property_w3("text", (None))
        '''Line 1137: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ size_hint_y: None '''
        if not hasattr(w3, "size_hint_y"):
            __create_property_w3("size_hint_y", (None))
        '''Line 1138: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ height: '28sp' '''
        if not hasattr(w3, "height"):
            __create_property_w3("height", ('28sp'))

        __create_property_w4_sldr = w4_sldr.create_property
        '''Line 1143: <ColorPicker_Selector@BoxLayout> -> Slider @ size_hint: 1, .25 '''
        if not hasattr(w4_sldr, "size_hint"):
            __create_property_w4_sldr("size_hint", (1, .25))
        '''Line 1144: <ColorPicker_Selector@BoxLayout> -> Slider @ pos_hint: {'center_y':.5} '''
        if not hasattr(w4_sldr, "pos_hint"):
            __create_property_w4_sldr("pos_hint", ({'center_y':.5}))
        '''Line 1145: <ColorPicker_Selector@BoxLayout> -> Slider @ range: 0, 255 '''
        if not hasattr(w4_sldr, "range"):
            __create_property_w4_sldr("range", (0, 255))
        '''Line 1146: <ColorPicker_Selector@BoxLayout> -> Slider @ value: root.color * 255 '''
        if not hasattr(w4_sldr, "value"):
            __create_property_w4_sldr("value", (None))

        __mc[70].add(root.__class__)

    __on_init = [None, ] * 2

    '''Line 1140: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ on_text: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    __prop = w3.property("text", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(w3), None]

    '''Line 1148: <ColorPicker_Selector@BoxLayout> -> Slider @ on_value: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    __prop = w4_sldr.property("value", quiet=True)
    if __prop is not None:
        __on_init[1] = [__prop, __prop.dispatch_count(w4_sldr), None]

    '''Line 1121: <ColorPicker_Selector@BoxLayout> @ foreground_color: None '''
    root.foreground_color = None

    '''Line 1122: <ColorPicker_Selector@BoxLayout> @ text: '' '''
    root.text = ''

    '''Line 1123: <ColorPicker_Selector@BoxLayout> @ mroot: None '''
    root.mroot = None

    '''Line 1124: <ColorPicker_Selector@BoxLayout> @ mode: 'rgb' '''
    root.mode = 'rgb'

    '''Line 1125: <ColorPicker_Selector@BoxLayout> @ color: 0 '''
    root.color = 0

    '''Line 1126: <ColorPicker_Selector@BoxLayout> @ spacing: '2sp' '''
    root.spacing = '2sp'

    '''Line 1132: <ColorPicker_Selector@BoxLayout> -> AnchorLayout @ size_hint_x: None '''
    w2.size_hint_x = None

    '''Line 1133: <ColorPicker_Selector@BoxLayout> -> AnchorLayout @ width: '50sp' '''
    w2.width = '50sp'

    '''Line 1137: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ size_hint_y: None '''
    w3.size_hint_y = None

    '''Line 1138: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ height: '28sp' '''
    w3.height = '28sp'

    '''Line 1143: <ColorPicker_Selector@BoxLayout> -> Slider @ size_hint: 1, .25 '''
    w4_sldr.size_hint = 1, .25

    '''Line 1144: <ColorPicker_Selector@BoxLayout> -> Slider @ pos_hint: {'center_y':.5} '''
    w4_sldr.pos_hint = {'center_y':.5}

    '''Line 1145: <ColorPicker_Selector@BoxLayout> -> Slider @ range: 0, 255 '''
    w4_sldr.range = 0, 255

    '''Line 1128: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ text: root.text '''
    w1.text = root.text

    '''Line 1129: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ mroot: root.mroot '''
    w1.mroot = root.mroot

    '''Line 1130: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ color: root.foreground_color or (1, 1, 1, 1) '''
    w1.color = root.foreground_color or (1, 1, 1, 1)

    '''Line 1135: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ mroot: root.mroot '''
    w3.mroot = root.mroot

    '''Line 1136: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ text: str(int(sldr.value)) '''
    w3.text = str(int(w4_sldr.value))

    '''Line 1146: <ColorPicker_Selector@BoxLayout> -> Slider @ value: root.color * 255 '''
    w4_sldr.value = root.color * 255

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b70(app, root, w1, w2, w3, w4_sldr, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b70, app, root, w1, w2, w3, w4_sldr, __on_init))

def __b70(app, root, w1, w2, w3, w4_sldr, __on_init):
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w3 = w3.proxy_ref
    __ref_w4_sldr = w4_sldr.proxy_ref

    __bound = [None, ] * 5
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "text", __bind_root("text", __h278_text, __ref_root, __ref_w1), __h278_text, [__ref_root, __ref_w1]]
    __bound[1] = [None, None, None, __ref_root, "mroot", __bind_root("mroot", __h279_mroot, __ref_root, __ref_w1), __h279_mroot, [__ref_root, __ref_w1]]
    __bound[2] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h280_color, __ref_root, __ref_w1), __h280_color, [__ref_root, __ref_w1]]
    __bound[3] = [None, None, None, __ref_root, "mroot", __bind_root("mroot", __h281_mroot, __ref_root, __ref_w3), __h281_mroot, [__ref_root, __ref_w3]]
    __bound[4] = [None, None, None, __ref_root, "color", __bind_root("color", __h283_value, __ref_root, __ref_w4_sldr), __h283_value, [__ref_root, __ref_w4_sldr]]
    __handlers[w4_sldr.uid].append((__bound, (4, )))
    __handlers[w3.uid].append((__bound, (3, )))
    __handlers[w1.uid].append((__bound, (0, 1, 2)))

    __bound = [None, ] * 1
    __bind_w4_sldr = w4_sldr.fast_bind
    __bound[0] = [None, None, None, __ref_w4_sldr, "value", __bind_w4_sldr("value", __h282_text, __ref_w3, __ref_w4_sldr), __h282_text, [__ref_w3, __ref_w4_sldr]]
    __handlers[w3.uid].append((__bound, (0, )))

    '''Line 1140: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ on_text: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        w3.fast_bind("on_text", __h16_on_text, __ref_root)
    else:
        w3.fast_bind("text", __h16_on_text, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w3)

    '''Line 1148: <ColorPicker_Selector@BoxLayout> -> Slider @ on_value: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    __prop_init = __on_init[1]
    if __prop_init is None:
        __bind_w4_sldr("on_value", __h17_on_value, __ref_root)
    else:
        __bind_w4_sldr("value", __h17_on_value, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w4_sldr)

    return __partial(__d70, app, root, w1, w2, w3, w4_sldr, __on_init)

def __d70(app, root, w1, w2, w3, w4_sldr, __on_init):
    args = None, None

    '''Line 1128: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ text: root.text '''
    w1.text = root.text

    '''Line 1129: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ mroot: root.mroot '''
    w1.mroot = root.mroot

    '''Line 1130: <ColorPicker_Selector@BoxLayout> -> ColorPicker_Label @ color: root.foreground_color or (1, 1, 1, 1) '''
    w1.color = root.foreground_color or (1, 1, 1, 1)

    '''Line 1135: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ mroot: root.mroot '''
    w3.mroot = root.mroot

    '''Line 1136: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ text: str(int(sldr.value)) '''
    w3.text = str(int(w4_sldr.value))

    '''Line 1146: <ColorPicker_Selector@BoxLayout> -> Slider @ value: root.color * 255 '''
    w4_sldr.value = root.color * 255

    args = None,

    '''Line 1140: <ColorPicker_Selector@BoxLayout> -> AnchorLayout -> ColorPicker_Input @ on_text: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(w3) == e:
            root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1])

    '''Line 1148: <ColorPicker_Selector@BoxLayout> -> Slider @ on_value: root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1]) '''
    if __on_init[1] is not None:
        __prop, s, e = __on_init[1]
        if s != e and __prop.dispatch_count(w4_sldr) == e:
            root.mroot._trigger_update_clr(root.mode, root.clr_idx, args[1])

    return (w1, w2, w3, w4_sldr)


def __h284_foreground_color(root, w16_wheel, *args):
    '''Line 1151: <ColorPicker> @ foreground_color: (1, 1, 1, 1) if self.hsv[2] * wheel.a < .5 else (0, 0, 0, 1) '''
    root = root.__self__
    w16_wheel = w16_wheel.__self__
    root.foreground_color = (1, 1, 1, 1) if root.hsv[2] * w16_wheel.a < .5 else (0, 0, 0, 1)

def __h285_orientation(root, w1, *args):
    '''Line 1154: <ColorPicker> -> BoxLayout @ orientation: 'vertical' if root.width < root.height else 'horizontal' '''
    root = root.__self__
    w1.orientation = 'vertical' if root.width < root.height else 'horizontal'

def __h286_size_hint_y(root, w2, *args):
    '''Line 1158: <ColorPicker> -> BoxLayout -> StackLayout @ size_hint_y: None if root.width < root.height else 1 '''
    root = root.__self__
    w2.size_hint_y = None if root.width < root.height else 1

def __h287_height(root, w2, *args):
    '''Line 1159: <ColorPicker> -> BoxLayout -> StackLayout @ height: sp(33) * 4 if root.width < root.height else self.height '''
    root = root.__self__
    w2 = w2.__self__
    w2.height = sp(33) * 4 if root.width < root.height else w2.height

def __h288_color(w16_wheel, w3, *args):
    '''Line 1171: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.r '''
    w16_wheel = w16_wheel.__self__
    w3.color = w16_wheel.r

def __h289_foreground_color(root, w3, *args):
    '''Line 1172: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    root = root.__self__
    w3.foreground_color = root.foreground_color

def __h290_size_hint_y(root, w3, *args):
    '''Line 1173: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w3.size_hint_y = None if root.width < root.height else 0.125

def __h291_size_hint_x(root, w3, *args):
    '''Line 1174: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w3.size_hint_x = .5 if root.width < root.height else 1

def __h292_height(root, w3, *args):
    '''Line 1175: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w3 = w3.__self__
    root = root.__self__
    w3.height = '33sp' if root.width < root.height else w3.height

def __h293_color(w16_wheel, w4, *args):
    '''Line 1181: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.g '''
    w16_wheel = w16_wheel.__self__
    w4.color = w16_wheel.g

def __h294_foreground_color(root, w4, *args):
    '''Line 1182: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    root = root.__self__
    w4.foreground_color = root.foreground_color

def __h295_size_hint_y(root, w4, *args):
    '''Line 1183: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w4.size_hint_y = None if root.width < root.height else 0.125

def __h296_size_hint_x(root, w4, *args):
    '''Line 1184: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w4.size_hint_x = .5 if root.width < root.height else 1

def __h297_height(root, w4, *args):
    '''Line 1185: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w4 = w4.__self__
    root = root.__self__
    w4.height = '33sp' if root.width < root.height else w4.height

def __h298_color(w16_wheel, w5, *args):
    '''Line 1191: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.b '''
    w16_wheel = w16_wheel.__self__
    w5.color = w16_wheel.b

def __h299_foreground_color(root, w5, *args):
    '''Line 1192: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    root = root.__self__
    w5.foreground_color = root.foreground_color

def __h300_size_hint_y(root, w5, *args):
    '''Line 1193: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w5.size_hint_y = None if root.width < root.height else 0.125

def __h301_size_hint_x(root, w5, *args):
    '''Line 1194: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w5.size_hint_x = .5 if root.width < root.height else 1

def __h302_height(root, w5, *args):
    '''Line 1195: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w5 = w5.__self__
    root = root.__self__
    w5.height = '33sp' if root.width < root.height else w5.height

def __h303_color(root, w6, *args):
    '''Line 1201: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.color[3] '''
    root = root.__self__
    w6.color = root.color[3]

def __h304_foreground_color(root, w6, *args):
    '''Line 1202: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    root = root.__self__
    w6.foreground_color = root.foreground_color

def __h305_size_hint_y(root, w6, *args):
    '''Line 1203: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w6.size_hint_y = None if root.width < root.height else 0.125

def __h306_size_hint_x(root, w6, *args):
    '''Line 1204: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w6.size_hint_x = .5 if root.width < root.height else 1

def __h307_height(root, w6, *args):
    '''Line 1205: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w6 = w6.__self__
    root = root.__self__
    w6.height = '33sp' if root.width < root.height else w6.height

def __h308_color(root, w7, *args):
    '''Line 1212: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[0] '''
    root = root.__self__
    w7.color = root.hsv[0]

def __h309_foreground_color(root, w7, *args):
    '''Line 1213: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    root = root.__self__
    w7.foreground_color = root.foreground_color

def __h310_size_hint_y(root, w7, *args):
    '''Line 1214: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w7.size_hint_y = None if root.width < root.height else 0.125

def __h311_size_hint_x(root, w7, *args):
    '''Line 1215: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w7.size_hint_x = .5 if root.width < root.height else 1

def __h312_height(root, w7, *args):
    '''Line 1216: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w7 = w7.__self__
    root = root.__self__
    w7.height = '33sp' if root.width < root.height else w7.height

def __h313_color(root, w8, *args):
    '''Line 1223: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[1] '''
    root = root.__self__
    w8.color = root.hsv[1]

def __h314_foreground_color(root, w8, *args):
    '''Line 1224: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    root = root.__self__
    w8.foreground_color = root.foreground_color

def __h315_size_hint_y(root, w8, *args):
    '''Line 1225: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w8.size_hint_y = None if root.width < root.height else 0.125

def __h316_size_hint_x(root, w8, *args):
    '''Line 1226: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w8.size_hint_x = .5 if root.width < root.height else 1

def __h317_height(root, w8, *args):
    '''Line 1227: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    root = root.__self__
    w8 = w8.__self__
    w8.height = '33sp' if root.width < root.height else w8.height

def __h318_color(root, w9, *args):
    '''Line 1234: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[2] '''
    root = root.__self__
    w9.color = root.hsv[2]

def __h319_foreground_color(root, w9, *args):
    '''Line 1235: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    root = root.__self__
    w9.foreground_color = root.foreground_color

def __h320_size_hint_y(root, w9, *args):
    '''Line 1236: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w9.size_hint_y = None if root.width < root.height else 0.125

def __h321_size_hint_x(root, w9, *args):
    '''Line 1237: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w9.size_hint_x = .5 if root.width < root.height else 1

def __h322_height(root, w9, *args):
    '''Line 1238: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    root = root.__self__
    w9 = w9.__self__
    w9.height = '33sp' if root.width < root.height else w9.height

def __h323_size_hint_y(root, w10, *args):
    '''Line 1241: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_y: None if root.width < root.height else 0.125 '''
    root = root.__self__
    w10.size_hint_y = None if root.width < root.height else 0.125

def __h324_size_hint_x(root, w10, *args):
    '''Line 1242: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_x: .5 if root.width < root.height else 1 '''
    root = root.__self__
    w10.size_hint_x = .5 if root.width < root.height else 1

def __h325_height(root, w10, *args):
    '''Line 1243: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ height: '33sp' if root.width < root.height else self.height '''
    root = root.__self__
    w10 = w10.__self__
    w10.height = '33sp' if root.width < root.height else w10.height

def __h326_color(root, w11, *args):
    '''Line 1249: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ color: root.foreground_color '''
    root = root.__self__
    w11.color = root.foreground_color

def __h327_text(root, w13, *args):
    '''Line 1255: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ text: str(root.hex_color) '''
    root = root.__self__
    w13.text = str(root.hex_color)

def __h328_rgba(g14, root, *args):
    '''Line 1162: <ColorPicker> -> BoxLayout -> StackLayout -> Color @ rgba: root.color '''
    root = root.__self__
    g14.rgba = root.color

def __h329_size(g15, w2, *args):
    '''Line 1164: <ColorPicker> -> BoxLayout -> StackLayout -> Rectangle @ size: self.size '''
    w2 = w2.__self__
    g15.size = w2.size

def __h330_pos(g15, w2, *args):
    '''Line 1165: <ColorPicker> -> BoxLayout -> StackLayout -> Rectangle @ pos: self.pos '''
    w2 = w2.__self__
    g15.pos = w2.pos

def __h331__origin(w16_wheel, *args):
    '''Line 1261: <ColorPicker> -> BoxLayout -> ColorWheel @ _origin: (self.center_x, self.center_y) '''
    w16_wheel = w16_wheel.__self__
    w16_wheel._origin = (w16_wheel.center_x, w16_wheel.center_y)

def __h332__radius(w16_wheel, *args):
    '''Line 1262: <ColorPicker> -> BoxLayout -> ColorWheel @ _radius: 0.45 * min(self.size) '''
    w16_wheel = w16_wheel.__self__
    w16_wheel._radius = 0.45 * min(w16_wheel.size)

def __h333_color(root, w16_wheel, *args):
    '''Line 1263: <ColorPicker> -> BoxLayout -> ColorWheel @ color: root.color '''
    root = root.__self__
    w16_wheel.color = root.color

def __h18_on_text(root, *args):
    '''Line 1256: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ on_text: root._trigger_update_hex(args[1]) '''
    root = root.__self__
    root._trigger_update_hex(args[1])

def __h19_on_color(root, *args):
    '''Line 1264: <ColorPicker> -> BoxLayout -> ColorWheel @ on_color: root.color[:3] = args[1][:3] '''
    root = root.__self__
    root.color[:3] = args[1][:3]


# <ColorPicker> L1150
__mc[71] = set()
def __r71(root, __builder_created):
    __bfuncs = [] if __builder_created is None else __builder_created
    args = None, None

    __cls_BoxLayout = Factory.BoxLayout
    __cls_ColorPicker_Selector = Factory.ColorPicker_Selector

    '''Line 1153: <ColorPicker> -> BoxLayout'''
    w1 = __cls_BoxLayout(parent=root, __builder_created=__bfuncs)

    '''Line 1156: <ColorPicker> -> BoxLayout -> StackLayout'''
    w2 = Factory.StackLayout(parent=w1, __builder_created=__bfuncs)
    __add_w2_canvas_root = w2.canvas.add

    '''Line 1167: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector'''
    w3 = __cls_ColorPicker_Selector(parent=w2, __builder_created=__bfuncs)

    '''Line 1177: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector'''
    w4 = __cls_ColorPicker_Selector(parent=w2, __builder_created=__bfuncs)

    '''Line 1187: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector'''
    w5 = __cls_ColorPicker_Selector(parent=w2, __builder_created=__bfuncs)

    '''Line 1197: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector'''
    w6 = __cls_ColorPicker_Selector(parent=w2, __builder_created=__bfuncs)

    '''Line 1207: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector'''
    w7 = __cls_ColorPicker_Selector(parent=w2, __builder_created=__bfuncs)

    '''Line 1218: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector'''
    w8 = __cls_ColorPicker_Selector(parent=w2, __builder_created=__bfuncs)

    '''Line 1229: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector'''
    w9 = __cls_ColorPicker_Selector(parent=w2, __builder_created=__bfuncs)

    '''Line 1240: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout'''
    w10 = __cls_BoxLayout(parent=w2, __builder_created=__bfuncs)

    '''Line 1246: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label'''
    w11 = Factory.ColorPicker_Label(parent=w10, __builder_created=__bfuncs)

    '''Line 1250: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout'''
    w12 = Factory.AnchorLayout(parent=w10, __builder_created=__bfuncs)

    '''Line 1251: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input'''
    w13 = Factory.ColorPicker_Input(parent=w12, __builder_created=__bfuncs)

    '''Line 1161: <ColorPicker> -> BoxLayout -> StackLayout -> Color'''
    g14 = Factory.Color()
    __add_w2_canvas_root(g14)

    '''Line 1163: <ColorPicker> -> BoxLayout -> StackLayout -> Rectangle'''
    g15 = Factory.Rectangle()
    __add_w2_canvas_root(g15)

    '''Line 1259: <ColorPicker> -> BoxLayout -> ColorWheel'''
    w16_wheel = Factory.ColorWheel(parent=w1, __builder_created=__bfuncs)

    root.ids["wheel"] = w16_wheel.proxy_ref

    if root.__class__ not in __mc[71]:
        __create_property_root = root.create_property
        '''Line 1151: <ColorPicker> @ foreground_color: (1, 1, 1, 1) if self.hsv[2] * wheel.a < .5 else (0, 0, 0, 1) '''
        if not hasattr(root, "foreground_color"):
            __create_property_root("foreground_color", (None))
        '''Line 1152: <ColorPicker> @ wheel: wheel '''
        if not hasattr(root, "wheel"):
            __create_property_root("wheel", (None))

        __create_property_w1 = w1.create_property
        '''Line 1154: <ColorPicker> -> BoxLayout @ orientation: 'vertical' if root.width < root.height else 'horizontal' '''
        if not hasattr(w1, "orientation"):
            __create_property_w1("orientation", (None))
        '''Line 1155: <ColorPicker> -> BoxLayout @ spacing: '5sp' '''
        if not hasattr(w1, "spacing"):
            __create_property_w1("spacing", ('5sp'))

        __create_property_w2 = w2.create_property
        '''Line 1157: <ColorPicker> -> BoxLayout -> StackLayout @ orientation: 'tb-lr' '''
        if not hasattr(w2, "orientation"):
            __create_property_w2("orientation", ('tb-lr'))
        '''Line 1158: <ColorPicker> -> BoxLayout -> StackLayout @ size_hint_y: None if root.width < root.height else 1 '''
        if not hasattr(w2, "size_hint_y"):
            __create_property_w2("size_hint_y", (None))
        '''Line 1159: <ColorPicker> -> BoxLayout -> StackLayout @ height: sp(33) * 4 if root.width < root.height else self.height '''
        if not hasattr(w2, "height"):
            __create_property_w2("height", (None))

        __create_property_w3 = w3.create_property
        '''Line 1168: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
        if not hasattr(w3, "mroot"):
            __create_property_w3("mroot", (None))
        '''Line 1169: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'R' '''
        if not hasattr(w3, "text"):
            __create_property_w3("text", ('R'))
        '''Line 1170: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 0 '''
        if not hasattr(w3, "clr_idx"):
            __create_property_w3("clr_idx", (0))
        '''Line 1171: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.r '''
        if not hasattr(w3, "color"):
            __create_property_w3("color", (None))
        '''Line 1172: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
        if not hasattr(w3, "foreground_color"):
            __create_property_w3("foreground_color", (None))
        '''Line 1173: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w3, "size_hint_y"):
            __create_property_w3("size_hint_y", (None))
        '''Line 1174: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w3, "size_hint_x"):
            __create_property_w3("size_hint_x", (None))
        '''Line 1175: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w3, "height"):
            __create_property_w3("height", (None))

        __create_property_w4 = w4.create_property
        '''Line 1178: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
        if not hasattr(w4, "mroot"):
            __create_property_w4("mroot", (None))
        '''Line 1179: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'G' '''
        if not hasattr(w4, "text"):
            __create_property_w4("text", ('G'))
        '''Line 1180: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 1 '''
        if not hasattr(w4, "clr_idx"):
            __create_property_w4("clr_idx", (1))
        '''Line 1181: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.g '''
        if not hasattr(w4, "color"):
            __create_property_w4("color", (None))
        '''Line 1182: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
        if not hasattr(w4, "foreground_color"):
            __create_property_w4("foreground_color", (None))
        '''Line 1183: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w4, "size_hint_y"):
            __create_property_w4("size_hint_y", (None))
        '''Line 1184: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w4, "size_hint_x"):
            __create_property_w4("size_hint_x", (None))
        '''Line 1185: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w4, "height"):
            __create_property_w4("height", (None))

        __create_property_w5 = w5.create_property
        '''Line 1188: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
        if not hasattr(w5, "mroot"):
            __create_property_w5("mroot", (None))
        '''Line 1189: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'B' '''
        if not hasattr(w5, "text"):
            __create_property_w5("text", ('B'))
        '''Line 1190: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 2 '''
        if not hasattr(w5, "clr_idx"):
            __create_property_w5("clr_idx", (2))
        '''Line 1191: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.b '''
        if not hasattr(w5, "color"):
            __create_property_w5("color", (None))
        '''Line 1192: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
        if not hasattr(w5, "foreground_color"):
            __create_property_w5("foreground_color", (None))
        '''Line 1193: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w5, "size_hint_y"):
            __create_property_w5("size_hint_y", (None))
        '''Line 1194: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w5, "size_hint_x"):
            __create_property_w5("size_hint_x", (None))
        '''Line 1195: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w5, "height"):
            __create_property_w5("height", (None))

        __create_property_w6 = w6.create_property
        '''Line 1198: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
        if not hasattr(w6, "mroot"):
            __create_property_w6("mroot", (None))
        '''Line 1199: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'A' '''
        if not hasattr(w6, "text"):
            __create_property_w6("text", ('A'))
        '''Line 1200: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 3 '''
        if not hasattr(w6, "clr_idx"):
            __create_property_w6("clr_idx", (3))
        '''Line 1201: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.color[3] '''
        if not hasattr(w6, "color"):
            __create_property_w6("color", (None))
        '''Line 1202: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
        if not hasattr(w6, "foreground_color"):
            __create_property_w6("foreground_color", (None))
        '''Line 1203: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w6, "size_hint_y"):
            __create_property_w6("size_hint_y", (None))
        '''Line 1204: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w6, "size_hint_x"):
            __create_property_w6("size_hint_x", (None))
        '''Line 1205: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w6, "height"):
            __create_property_w6("height", (None))

        __create_property_w7 = w7.create_property
        '''Line 1208: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
        if not hasattr(w7, "mroot"):
            __create_property_w7("mroot", (None))
        '''Line 1209: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mode: 'hsv' '''
        if not hasattr(w7, "mode"):
            __create_property_w7("mode", ('hsv'))
        '''Line 1210: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'H' '''
        if not hasattr(w7, "text"):
            __create_property_w7("text", ('H'))
        '''Line 1211: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 0 '''
        if not hasattr(w7, "clr_idx"):
            __create_property_w7("clr_idx", (0))
        '''Line 1212: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[0] '''
        if not hasattr(w7, "color"):
            __create_property_w7("color", (None))
        '''Line 1213: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
        if not hasattr(w7, "foreground_color"):
            __create_property_w7("foreground_color", (None))
        '''Line 1214: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w7, "size_hint_y"):
            __create_property_w7("size_hint_y", (None))
        '''Line 1215: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w7, "size_hint_x"):
            __create_property_w7("size_hint_x", (None))
        '''Line 1216: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w7, "height"):
            __create_property_w7("height", (None))

        __create_property_w8 = w8.create_property
        '''Line 1219: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
        if not hasattr(w8, "mroot"):
            __create_property_w8("mroot", (None))
        '''Line 1220: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mode: 'hsv' '''
        if not hasattr(w8, "mode"):
            __create_property_w8("mode", ('hsv'))
        '''Line 1221: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'S' '''
        if not hasattr(w8, "text"):
            __create_property_w8("text", ('S'))
        '''Line 1222: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 1 '''
        if not hasattr(w8, "clr_idx"):
            __create_property_w8("clr_idx", (1))
        '''Line 1223: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[1] '''
        if not hasattr(w8, "color"):
            __create_property_w8("color", (None))
        '''Line 1224: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
        if not hasattr(w8, "foreground_color"):
            __create_property_w8("foreground_color", (None))
        '''Line 1225: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w8, "size_hint_y"):
            __create_property_w8("size_hint_y", (None))
        '''Line 1226: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w8, "size_hint_x"):
            __create_property_w8("size_hint_x", (None))
        '''Line 1227: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w8, "height"):
            __create_property_w8("height", (None))

        __create_property_w9 = w9.create_property
        '''Line 1230: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
        if not hasattr(w9, "mroot"):
            __create_property_w9("mroot", (None))
        '''Line 1231: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mode: 'hsv' '''
        if not hasattr(w9, "mode"):
            __create_property_w9("mode", ('hsv'))
        '''Line 1232: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'V' '''
        if not hasattr(w9, "text"):
            __create_property_w9("text", ('V'))
        '''Line 1233: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 2 '''
        if not hasattr(w9, "clr_idx"):
            __create_property_w9("clr_idx", (2))
        '''Line 1234: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[2] '''
        if not hasattr(w9, "color"):
            __create_property_w9("color", (None))
        '''Line 1235: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
        if not hasattr(w9, "foreground_color"):
            __create_property_w9("foreground_color", (None))
        '''Line 1236: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w9, "size_hint_y"):
            __create_property_w9("size_hint_y", (None))
        '''Line 1237: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w9, "size_hint_x"):
            __create_property_w9("size_hint_x", (None))
        '''Line 1238: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w9, "height"):
            __create_property_w9("height", (None))

        __create_property_w10 = w10.create_property
        '''Line 1241: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_y: None if root.width < root.height else 0.125 '''
        if not hasattr(w10, "size_hint_y"):
            __create_property_w10("size_hint_y", (None))
        '''Line 1242: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_x: .5 if root.width < root.height else 1 '''
        if not hasattr(w10, "size_hint_x"):
            __create_property_w10("size_hint_x", (None))
        '''Line 1243: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ height: '33sp' if root.width < root.height else self.height '''
        if not hasattr(w10, "height"):
            __create_property_w10("height", (None))
        '''Line 1245: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ spacing: '2sp' '''
        if not hasattr(w10, "spacing"):
            __create_property_w10("spacing", ('2sp'))

        __create_property_w11 = w11.create_property
        '''Line 1247: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ mroot: root '''
        if not hasattr(w11, "mroot"):
            __create_property_w11("mroot", (None))
        '''Line 1248: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ text: 'X' '''
        if not hasattr(w11, "text"):
            __create_property_w11("text", ('X'))
        '''Line 1249: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ color: root.foreground_color '''
        if not hasattr(w11, "color"):
            __create_property_w11("color", (None))

        __create_property_w13 = w13.create_property
        '''Line 1252: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ size_hint_y: None '''
        if not hasattr(w13, "size_hint_y"):
            __create_property_w13("size_hint_y", (None))
        '''Line 1253: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ height: '28sp' '''
        if not hasattr(w13, "height"):
            __create_property_w13("height", ('28sp'))
        '''Line 1254: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ mroot: root '''
        if not hasattr(w13, "mroot"):
            __create_property_w13("mroot", (None))
        '''Line 1255: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ text: str(root.hex_color) '''
        if not hasattr(w13, "text"):
            __create_property_w13("text", (None))

        __create_property_w16_wheel = w16_wheel.create_property
        '''Line 1261: <ColorPicker> -> BoxLayout -> ColorWheel @ _origin: (self.center_x, self.center_y) '''
        if not hasattr(w16_wheel, "_origin"):
            __create_property_w16_wheel("_origin", (None))
        '''Line 1262: <ColorPicker> -> BoxLayout -> ColorWheel @ _radius: 0.45 * min(self.size) '''
        if not hasattr(w16_wheel, "_radius"):
            __create_property_w16_wheel("_radius", (None))
        '''Line 1263: <ColorPicker> -> BoxLayout -> ColorWheel @ color: root.color '''
        if not hasattr(w16_wheel, "color"):
            __create_property_w16_wheel("color", (None))

        __mc[71].add(root.__class__)

    __on_init = [None, ] * 2

    '''Line 1256: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ on_text: root._trigger_update_hex(args[1]) '''
    __prop = w13.property("text", quiet=True)
    if __prop is not None:
        __on_init[0] = [__prop, __prop.dispatch_count(w13), None]

    '''Line 1264: <ColorPicker> -> BoxLayout -> ColorWheel @ on_color: root.color[:3] = args[1][:3] '''
    __prop = w16_wheel.property("color", quiet=True)
    if __prop is not None:
        __on_init[1] = [__prop, __prop.dispatch_count(w16_wheel), None]

    '''Line 1152: <ColorPicker> @ wheel: wheel '''
    root.wheel = w16_wheel

    '''Line 1155: <ColorPicker> -> BoxLayout @ spacing: '5sp' '''
    w1.spacing = '5sp'

    '''Line 1157: <ColorPicker> -> BoxLayout -> StackLayout @ orientation: 'tb-lr' '''
    w2.orientation = 'tb-lr'

    '''Line 1168: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
    w3.mroot = root

    '''Line 1169: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'R' '''
    w3.text = 'R'

    '''Line 1170: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 0 '''
    w3.clr_idx = 0

    '''Line 1178: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
    w4.mroot = root

    '''Line 1179: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'G' '''
    w4.text = 'G'

    '''Line 1180: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 1 '''
    w4.clr_idx = 1

    '''Line 1188: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
    w5.mroot = root

    '''Line 1189: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'B' '''
    w5.text = 'B'

    '''Line 1190: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 2 '''
    w5.clr_idx = 2

    '''Line 1198: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
    w6.mroot = root

    '''Line 1199: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'A' '''
    w6.text = 'A'

    '''Line 1200: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 3 '''
    w6.clr_idx = 3

    '''Line 1208: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
    w7.mroot = root

    '''Line 1209: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mode: 'hsv' '''
    w7.mode = 'hsv'

    '''Line 1210: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'H' '''
    w7.text = 'H'

    '''Line 1211: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 0 '''
    w7.clr_idx = 0

    '''Line 1219: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
    w8.mroot = root

    '''Line 1220: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mode: 'hsv' '''
    w8.mode = 'hsv'

    '''Line 1221: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'S' '''
    w8.text = 'S'

    '''Line 1222: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 1 '''
    w8.clr_idx = 1

    '''Line 1230: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mroot: root '''
    w9.mroot = root

    '''Line 1231: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ mode: 'hsv' '''
    w9.mode = 'hsv'

    '''Line 1232: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ text: 'V' '''
    w9.text = 'V'

    '''Line 1233: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ clr_idx: 2 '''
    w9.clr_idx = 2

    '''Line 1245: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ spacing: '2sp' '''
    w10.spacing = '2sp'

    '''Line 1247: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ mroot: root '''
    w11.mroot = root

    '''Line 1248: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ text: 'X' '''
    w11.text = 'X'

    '''Line 1252: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ size_hint_y: None '''
    w13.size_hint_y = None

    '''Line 1253: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ height: '28sp' '''
    w13.height = '28sp'

    '''Line 1254: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ mroot: root '''
    w13.mroot = root

    '''Line 1151: <ColorPicker> @ foreground_color: (1, 1, 1, 1) if self.hsv[2] * wheel.a < .5 else (0, 0, 0, 1) '''
    root.foreground_color = (1, 1, 1, 1) if root.hsv[2] * w16_wheel.a < .5 else (0, 0, 0, 1)

    '''Line 1154: <ColorPicker> -> BoxLayout @ orientation: 'vertical' if root.width < root.height else 'horizontal' '''
    w1.orientation = 'vertical' if root.width < root.height else 'horizontal'

    '''Line 1158: <ColorPicker> -> BoxLayout -> StackLayout @ size_hint_y: None if root.width < root.height else 1 '''
    w2.size_hint_y = None if root.width < root.height else 1

    '''Line 1159: <ColorPicker> -> BoxLayout -> StackLayout @ height: sp(33) * 4 if root.width < root.height else self.height '''
    w2.height = sp(33) * 4 if root.width < root.height else w2.height

    '''Line 1171: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.r '''
    w3.color = w16_wheel.r

    '''Line 1172: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w3.foreground_color = root.foreground_color

    '''Line 1173: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w3.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1174: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w3.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1175: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w3.height = '33sp' if root.width < root.height else w3.height

    '''Line 1181: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.g '''
    w4.color = w16_wheel.g

    '''Line 1182: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w4.foreground_color = root.foreground_color

    '''Line 1183: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w4.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1184: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w4.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1185: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w4.height = '33sp' if root.width < root.height else w4.height

    '''Line 1191: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.b '''
    w5.color = w16_wheel.b

    '''Line 1192: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w5.foreground_color = root.foreground_color

    '''Line 1193: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w5.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1194: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w5.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1195: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w5.height = '33sp' if root.width < root.height else w5.height

    '''Line 1201: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.color[3] '''
    w6.color = root.color[3]

    '''Line 1202: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w6.foreground_color = root.foreground_color

    '''Line 1203: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w6.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1204: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w6.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1205: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w6.height = '33sp' if root.width < root.height else w6.height

    '''Line 1212: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[0] '''
    w7.color = root.hsv[0]

    '''Line 1213: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w7.foreground_color = root.foreground_color

    '''Line 1214: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w7.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1215: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w7.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1216: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w7.height = '33sp' if root.width < root.height else w7.height

    '''Line 1223: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[1] '''
    w8.color = root.hsv[1]

    '''Line 1224: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w8.foreground_color = root.foreground_color

    '''Line 1225: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w8.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1226: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w8.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1227: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w8.height = '33sp' if root.width < root.height else w8.height

    '''Line 1234: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[2] '''
    w9.color = root.hsv[2]

    '''Line 1235: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w9.foreground_color = root.foreground_color

    '''Line 1236: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w9.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1237: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w9.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1238: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w9.height = '33sp' if root.width < root.height else w9.height

    '''Line 1241: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_y: None if root.width < root.height else 0.125 '''
    w10.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1242: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_x: .5 if root.width < root.height else 1 '''
    w10.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1243: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ height: '33sp' if root.width < root.height else self.height '''
    w10.height = '33sp' if root.width < root.height else w10.height

    '''Line 1249: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ color: root.foreground_color '''
    w11.color = root.foreground_color

    '''Line 1255: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ text: str(root.hex_color) '''
    w13.text = str(root.hex_color)

    '''Line 1261: <ColorPicker> -> BoxLayout -> ColorWheel @ _origin: (self.center_x, self.center_y) '''
    w16_wheel._origin = (w16_wheel.center_x, w16_wheel.center_y)

    '''Line 1262: <ColorPicker> -> BoxLayout -> ColorWheel @ _radius: 0.45 * min(self.size) '''
    w16_wheel._radius = 0.45 * min(w16_wheel.size)

    '''Line 1263: <ColorPicker> -> BoxLayout -> ColorWheel @ color: root.color '''
    w16_wheel.color = root.color

    if __builder_created is None:
        __bfuncs = [f() for f in __bfuncs]
        __bfuncs.append(__b71(app, g14, g15, root, w1, w10, w11, w12, w13, w16_wheel, w2, w3, w4, w5, w6, w7, w8, w9, __on_init))
        __bfuncs = [f() for f in reversed(__bfuncs)]
        for __children in reversed(__bfuncs):
            for __child in __children:
                __child.dispatch("on_kv_apply", root)
    else:
        __bfuncs.append(__partial(__b71, app, g14, g15, root, w1, w10, w11, w12, w13, w16_wheel, w2, w3, w4, w5, w6, w7, w8, w9, __on_init))

def __b71(app, g14, g15, root, w1, w10, w11, w12, w13, w16_wheel, w2, w3, w4, w5, w6, w7, w8, w9, __on_init):
    __ref_g15 = g15.proxy_ref
    __ref_root = root.proxy_ref
    __ref_w1 = w1.proxy_ref
    __ref_w10 = w10.proxy_ref
    __ref_w11 = w11.proxy_ref
    __ref_w13 = w13.proxy_ref
    __ref_w16_wheel = w16_wheel.proxy_ref
    __ref_w2 = w2.proxy_ref
    __ref_w3 = w3.proxy_ref
    __ref_w4 = w4.proxy_ref
    __ref_w5 = w5.proxy_ref
    __ref_w6 = w6.proxy_ref
    __ref_w7 = w7.proxy_ref
    __ref_w8 = w8.proxy_ref
    __ref_w9 = w9.proxy_ref

    '''Line 1162: <ColorPicker> -> BoxLayout -> StackLayout -> Color @ rgba: root.color '''
    __delayed___h328_rgba = [__h328_rgba, g14.proxy_ref, __ref_root, None]
    __delayed_call_fn(__delayed___h328_rgba, None, None)

    '''Line 1164: <ColorPicker> -> BoxLayout -> StackLayout -> Rectangle @ size: self.size '''
    __delayed___h329_size = [__h329_size, __ref_g15, __ref_w2, None]
    __delayed_call_fn(__delayed___h329_size, None, None)

    '''Line 1165: <ColorPicker> -> BoxLayout -> StackLayout -> Rectangle @ pos: self.pos '''
    __delayed___h330_pos = [__h330_pos, __ref_g15, __ref_w2, None]
    __delayed_call_fn(__delayed___h330_pos, None, None)

    __bound = [None, ] * 70
    __bind_root = root.fast_bind
    __bound[0] = [None, None, None, __ref_root, "hsv", __bind_root("hsv", __h284_foreground_color, __ref_root, __ref_w16_wheel), __h284_foreground_color, [__ref_root, __ref_w16_wheel]]
    __bound[1] = [None, None, None, __ref_root, "width", __bind_root("width", __h285_orientation, __ref_root, __ref_w1), __h285_orientation, [__ref_root, __ref_w1]]
    __bound[2] = [None, None, None, __ref_root, "height", __bind_root("height", __h285_orientation, __ref_root, __ref_w1), __h285_orientation, [__ref_root, __ref_w1]]
    __bound[3] = [None, None, None, __ref_root, "width", __bind_root("width", __h286_size_hint_y, __ref_root, __ref_w2), __h286_size_hint_y, [__ref_root, __ref_w2]]
    __bound[4] = [None, None, None, __ref_root, "height", __bind_root("height", __h286_size_hint_y, __ref_root, __ref_w2), __h286_size_hint_y, [__ref_root, __ref_w2]]
    __bound[5] = [None, None, None, __ref_root, "width", __bind_root("width", __h287_height, __ref_root, __ref_w2), __h287_height, [__ref_root, __ref_w2]]
    __bound[6] = [None, None, None, __ref_root, "height", __bind_root("height", __h287_height, __ref_root, __ref_w2), __h287_height, [__ref_root, __ref_w2]]
    __bound[7] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h289_foreground_color, __ref_root, __ref_w3), __h289_foreground_color, [__ref_root, __ref_w3]]
    __bound[8] = [None, None, None, __ref_root, "width", __bind_root("width", __h290_size_hint_y, __ref_root, __ref_w3), __h290_size_hint_y, [__ref_root, __ref_w3]]
    __bound[9] = [None, None, None, __ref_root, "height", __bind_root("height", __h290_size_hint_y, __ref_root, __ref_w3), __h290_size_hint_y, [__ref_root, __ref_w3]]
    __bound[10] = [None, None, None, __ref_root, "width", __bind_root("width", __h291_size_hint_x, __ref_root, __ref_w3), __h291_size_hint_x, [__ref_root, __ref_w3]]
    __bound[11] = [None, None, None, __ref_root, "height", __bind_root("height", __h291_size_hint_x, __ref_root, __ref_w3), __h291_size_hint_x, [__ref_root, __ref_w3]]
    __bound[12] = [None, None, None, __ref_root, "width", __bind_root("width", __h292_height, __ref_root, __ref_w3), __h292_height, [__ref_root, __ref_w3]]
    __bound[13] = [None, None, None, __ref_root, "height", __bind_root("height", __h292_height, __ref_root, __ref_w3), __h292_height, [__ref_root, __ref_w3]]
    __bound[14] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h294_foreground_color, __ref_root, __ref_w4), __h294_foreground_color, [__ref_root, __ref_w4]]
    __bound[15] = [None, None, None, __ref_root, "width", __bind_root("width", __h295_size_hint_y, __ref_root, __ref_w4), __h295_size_hint_y, [__ref_root, __ref_w4]]
    __bound[16] = [None, None, None, __ref_root, "height", __bind_root("height", __h295_size_hint_y, __ref_root, __ref_w4), __h295_size_hint_y, [__ref_root, __ref_w4]]
    __bound[17] = [None, None, None, __ref_root, "width", __bind_root("width", __h296_size_hint_x, __ref_root, __ref_w4), __h296_size_hint_x, [__ref_root, __ref_w4]]
    __bound[18] = [None, None, None, __ref_root, "height", __bind_root("height", __h296_size_hint_x, __ref_root, __ref_w4), __h296_size_hint_x, [__ref_root, __ref_w4]]
    __bound[19] = [None, None, None, __ref_root, "width", __bind_root("width", __h297_height, __ref_root, __ref_w4), __h297_height, [__ref_root, __ref_w4]]
    __bound[20] = [None, None, None, __ref_root, "height", __bind_root("height", __h297_height, __ref_root, __ref_w4), __h297_height, [__ref_root, __ref_w4]]
    __bound[21] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h299_foreground_color, __ref_root, __ref_w5), __h299_foreground_color, [__ref_root, __ref_w5]]
    __bound[22] = [None, None, None, __ref_root, "width", __bind_root("width", __h300_size_hint_y, __ref_root, __ref_w5), __h300_size_hint_y, [__ref_root, __ref_w5]]
    __bound[23] = [None, None, None, __ref_root, "height", __bind_root("height", __h300_size_hint_y, __ref_root, __ref_w5), __h300_size_hint_y, [__ref_root, __ref_w5]]
    __bound[24] = [None, None, None, __ref_root, "width", __bind_root("width", __h301_size_hint_x, __ref_root, __ref_w5), __h301_size_hint_x, [__ref_root, __ref_w5]]
    __bound[25] = [None, None, None, __ref_root, "height", __bind_root("height", __h301_size_hint_x, __ref_root, __ref_w5), __h301_size_hint_x, [__ref_root, __ref_w5]]
    __bound[26] = [None, None, None, __ref_root, "width", __bind_root("width", __h302_height, __ref_root, __ref_w5), __h302_height, [__ref_root, __ref_w5]]
    __bound[27] = [None, None, None, __ref_root, "height", __bind_root("height", __h302_height, __ref_root, __ref_w5), __h302_height, [__ref_root, __ref_w5]]
    __bound[28] = [None, None, None, __ref_root, "color", __bind_root("color", __h303_color, __ref_root, __ref_w6), __h303_color, [__ref_root, __ref_w6]]
    __bound[29] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h304_foreground_color, __ref_root, __ref_w6), __h304_foreground_color, [__ref_root, __ref_w6]]
    __bound[30] = [None, None, None, __ref_root, "width", __bind_root("width", __h305_size_hint_y, __ref_root, __ref_w6), __h305_size_hint_y, [__ref_root, __ref_w6]]
    __bound[31] = [None, None, None, __ref_root, "height", __bind_root("height", __h305_size_hint_y, __ref_root, __ref_w6), __h305_size_hint_y, [__ref_root, __ref_w6]]
    __bound[32] = [None, None, None, __ref_root, "width", __bind_root("width", __h306_size_hint_x, __ref_root, __ref_w6), __h306_size_hint_x, [__ref_root, __ref_w6]]
    __bound[33] = [None, None, None, __ref_root, "height", __bind_root("height", __h306_size_hint_x, __ref_root, __ref_w6), __h306_size_hint_x, [__ref_root, __ref_w6]]
    __bound[34] = [None, None, None, __ref_root, "width", __bind_root("width", __h307_height, __ref_root, __ref_w6), __h307_height, [__ref_root, __ref_w6]]
    __bound[35] = [None, None, None, __ref_root, "height", __bind_root("height", __h307_height, __ref_root, __ref_w6), __h307_height, [__ref_root, __ref_w6]]
    __bound[36] = [None, None, None, __ref_root, "hsv", __bind_root("hsv", __h308_color, __ref_root, __ref_w7), __h308_color, [__ref_root, __ref_w7]]
    __bound[37] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h309_foreground_color, __ref_root, __ref_w7), __h309_foreground_color, [__ref_root, __ref_w7]]
    __bound[38] = [None, None, None, __ref_root, "width", __bind_root("width", __h310_size_hint_y, __ref_root, __ref_w7), __h310_size_hint_y, [__ref_root, __ref_w7]]
    __bound[39] = [None, None, None, __ref_root, "height", __bind_root("height", __h310_size_hint_y, __ref_root, __ref_w7), __h310_size_hint_y, [__ref_root, __ref_w7]]
    __bound[40] = [None, None, None, __ref_root, "width", __bind_root("width", __h311_size_hint_x, __ref_root, __ref_w7), __h311_size_hint_x, [__ref_root, __ref_w7]]
    __bound[41] = [None, None, None, __ref_root, "height", __bind_root("height", __h311_size_hint_x, __ref_root, __ref_w7), __h311_size_hint_x, [__ref_root, __ref_w7]]
    __bound[42] = [None, None, None, __ref_root, "width", __bind_root("width", __h312_height, __ref_root, __ref_w7), __h312_height, [__ref_root, __ref_w7]]
    __bound[43] = [None, None, None, __ref_root, "height", __bind_root("height", __h312_height, __ref_root, __ref_w7), __h312_height, [__ref_root, __ref_w7]]
    __bound[44] = [None, None, None, __ref_root, "hsv", __bind_root("hsv", __h313_color, __ref_root, __ref_w8), __h313_color, [__ref_root, __ref_w8]]
    __bound[45] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h314_foreground_color, __ref_root, __ref_w8), __h314_foreground_color, [__ref_root, __ref_w8]]
    __bound[46] = [None, None, None, __ref_root, "width", __bind_root("width", __h315_size_hint_y, __ref_root, __ref_w8), __h315_size_hint_y, [__ref_root, __ref_w8]]
    __bound[47] = [None, None, None, __ref_root, "height", __bind_root("height", __h315_size_hint_y, __ref_root, __ref_w8), __h315_size_hint_y, [__ref_root, __ref_w8]]
    __bound[48] = [None, None, None, __ref_root, "width", __bind_root("width", __h316_size_hint_x, __ref_root, __ref_w8), __h316_size_hint_x, [__ref_root, __ref_w8]]
    __bound[49] = [None, None, None, __ref_root, "height", __bind_root("height", __h316_size_hint_x, __ref_root, __ref_w8), __h316_size_hint_x, [__ref_root, __ref_w8]]
    __bound[50] = [None, None, None, __ref_root, "width", __bind_root("width", __h317_height, __ref_root, __ref_w8), __h317_height, [__ref_root, __ref_w8]]
    __bound[51] = [None, None, None, __ref_root, "height", __bind_root("height", __h317_height, __ref_root, __ref_w8), __h317_height, [__ref_root, __ref_w8]]
    __bound[52] = [None, None, None, __ref_root, "hsv", __bind_root("hsv", __h318_color, __ref_root, __ref_w9), __h318_color, [__ref_root, __ref_w9]]
    __bound[53] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h319_foreground_color, __ref_root, __ref_w9), __h319_foreground_color, [__ref_root, __ref_w9]]
    __bound[54] = [None, None, None, __ref_root, "width", __bind_root("width", __h320_size_hint_y, __ref_root, __ref_w9), __h320_size_hint_y, [__ref_root, __ref_w9]]
    __bound[55] = [None, None, None, __ref_root, "height", __bind_root("height", __h320_size_hint_y, __ref_root, __ref_w9), __h320_size_hint_y, [__ref_root, __ref_w9]]
    __bound[56] = [None, None, None, __ref_root, "width", __bind_root("width", __h321_size_hint_x, __ref_root, __ref_w9), __h321_size_hint_x, [__ref_root, __ref_w9]]
    __bound[57] = [None, None, None, __ref_root, "height", __bind_root("height", __h321_size_hint_x, __ref_root, __ref_w9), __h321_size_hint_x, [__ref_root, __ref_w9]]
    __bound[58] = [None, None, None, __ref_root, "width", __bind_root("width", __h322_height, __ref_root, __ref_w9), __h322_height, [__ref_root, __ref_w9]]
    __bound[59] = [None, None, None, __ref_root, "height", __bind_root("height", __h322_height, __ref_root, __ref_w9), __h322_height, [__ref_root, __ref_w9]]
    __bound[60] = [None, None, None, __ref_root, "width", __bind_root("width", __h323_size_hint_y, __ref_root, __ref_w10), __h323_size_hint_y, [__ref_root, __ref_w10]]
    __bound[61] = [None, None, None, __ref_root, "height", __bind_root("height", __h323_size_hint_y, __ref_root, __ref_w10), __h323_size_hint_y, [__ref_root, __ref_w10]]
    __bound[62] = [None, None, None, __ref_root, "width", __bind_root("width", __h324_size_hint_x, __ref_root, __ref_w10), __h324_size_hint_x, [__ref_root, __ref_w10]]
    __bound[63] = [None, None, None, __ref_root, "height", __bind_root("height", __h324_size_hint_x, __ref_root, __ref_w10), __h324_size_hint_x, [__ref_root, __ref_w10]]
    __bound[64] = [None, None, None, __ref_root, "width", __bind_root("width", __h325_height, __ref_root, __ref_w10), __h325_height, [__ref_root, __ref_w10]]
    __bound[65] = [None, None, None, __ref_root, "height", __bind_root("height", __h325_height, __ref_root, __ref_w10), __h325_height, [__ref_root, __ref_w10]]
    __bound[66] = [None, None, None, __ref_root, "foreground_color", __bind_root("foreground_color", __h326_color, __ref_root, __ref_w11), __h326_color, [__ref_root, __ref_w11]]
    __bound[67] = [None, None, None, __ref_root, "hex_color", __bind_root("hex_color", __h327_text, __ref_root, __ref_w13), __h327_text, [__ref_root, __ref_w13]]
    __bound[68] = [None, None, None, __ref_root, "color", __bind_root("color", __delayed_call_fn, __delayed___h328_rgba), __delayed_call_fn, (__delayed___h328_rgba, )]
    __bound[69] = [None, None, None, __ref_root, "color", __bind_root("color", __h333_color, __ref_root, __ref_w16_wheel), __h333_color, [__ref_root, __ref_w16_wheel]]
    __handlers[w13.uid].append((__bound, (67, )))
    __handlers[w11.uid].append((__bound, (66, )))
    __handlers[w10.uid].append((__bound, (60, 61, 62, 63, 64, 65)))
    __handlers[w7.uid].append((__bound, (36, 37, 38, 39, 40, 41, 42, 43)))
    __handlers[w6.uid].append((__bound, (28, 29, 30, 31, 32, 33, 34, 35)))
    __handlers[w5.uid].append((__bound, (21, 22, 23, 24, 25, 26, 27)))
    __handlers[w4.uid].append((__bound, (14, 15, 16, 17, 18, 19, 20)))
    __handlers[w3.uid].append((__bound, (7, 8, 9, 10, 11, 12, 13)))
    __handlers[w2.uid].append((__bound, (3, 4, 5, 6)))
    __handlers[w1.uid].append((__bound, (1, 2)))
    __handlers[w16_wheel.uid].append((__bound, (69, )))
    __handlers[g14.uid].append((__bound, (68, )))
    __handlers[root.uid].append((__bound, (0, )))
    __handlers[w9.uid].append((__bound, (52, 53, 54, 55, 56, 57, 58, 59)))
    __handlers[w8.uid].append((__bound, (44, 45, 46, 47, 48, 49, 50, 51)))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w10, "height", w10.fast_bind("height", __h325_height, __ref_root, __ref_w10), __h325_height, [__ref_root, __ref_w10]]
    __handlers[w10.uid].append((__bound, (0, )))

    __bound = [None, ] * 7
    __bind_w16_wheel = w16_wheel.fast_bind
    __bound[0] = [None, None, None, __ref_w16_wheel, "a", __bind_w16_wheel("a", __h284_foreground_color, __ref_root, __ref_w16_wheel), __h284_foreground_color, [__ref_root, __ref_w16_wheel]]
    __bound[1] = [None, None, None, __ref_w16_wheel, "r", __bind_w16_wheel("r", __h288_color, __ref_w16_wheel, __ref_w3), __h288_color, [__ref_w16_wheel, __ref_w3]]
    __bound[2] = [None, None, None, __ref_w16_wheel, "g", __bind_w16_wheel("g", __h293_color, __ref_w16_wheel, __ref_w4), __h293_color, [__ref_w16_wheel, __ref_w4]]
    __bound[3] = [None, None, None, __ref_w16_wheel, "b", __bind_w16_wheel("b", __h298_color, __ref_w16_wheel, __ref_w5), __h298_color, [__ref_w16_wheel, __ref_w5]]
    __bound[4] = [None, None, None, __ref_w16_wheel, "center_y", __bind_w16_wheel("center_y", __h331__origin, __ref_w16_wheel), __h331__origin, (__ref_w16_wheel, )]
    __bound[5] = [None, None, None, __ref_w16_wheel, "center_x", __bind_w16_wheel("center_x", __h331__origin, __ref_w16_wheel), __h331__origin, (__ref_w16_wheel, )]
    __bound[6] = [None, None, None, __ref_w16_wheel, "size", __bind_w16_wheel("size", __h332__radius, __ref_w16_wheel), __h332__radius, (__ref_w16_wheel, )]
    __handlers[w3.uid].append((__bound, (1, )))
    __handlers[w5.uid].append((__bound, (3, )))
    __handlers[w4.uid].append((__bound, (2, )))
    __handlers[root.uid].append((__bound, (0, )))
    __handlers[w16_wheel.uid].append((__bound, (4, 5, 6)))

    __bound = [None, ] * 3
    __bind_w2 = w2.fast_bind
    __bound[0] = [None, None, None, __ref_w2, "height", __bind_w2("height", __h287_height, __ref_root, __ref_w2), __h287_height, [__ref_root, __ref_w2]]
    __bound[1] = [None, None, None, __ref_w2, "size", __bind_w2("size", __delayed_call_fn, __delayed___h329_size), __delayed_call_fn, (__delayed___h329_size, )]
    __bound[2] = [None, None, None, __ref_w2, "pos", __bind_w2("pos", __delayed_call_fn, __delayed___h330_pos), __delayed_call_fn, (__delayed___h330_pos, )]
    __handlers[g15.uid].append((__bound, (1, 2)))
    __handlers[w2.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w3, "height", w3.fast_bind("height", __h292_height, __ref_root, __ref_w3), __h292_height, [__ref_root, __ref_w3]]
    __handlers[w3.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w4, "height", w4.fast_bind("height", __h297_height, __ref_root, __ref_w4), __h297_height, [__ref_root, __ref_w4]]
    __handlers[w4.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w5, "height", w5.fast_bind("height", __h302_height, __ref_root, __ref_w5), __h302_height, [__ref_root, __ref_w5]]
    __handlers[w5.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w6, "height", w6.fast_bind("height", __h307_height, __ref_root, __ref_w6), __h307_height, [__ref_root, __ref_w6]]
    __handlers[w6.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w7, "height", w7.fast_bind("height", __h312_height, __ref_root, __ref_w7), __h312_height, [__ref_root, __ref_w7]]
    __handlers[w7.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w8, "height", w8.fast_bind("height", __h317_height, __ref_root, __ref_w8), __h317_height, [__ref_root, __ref_w8]]
    __handlers[w8.uid].append((__bound, (0, )))

    __bound = [None, ] * 1
    __bound[0] = [None, None, None, __ref_w9, "height", w9.fast_bind("height", __h322_height, __ref_root, __ref_w9), __h322_height, [__ref_root, __ref_w9]]
    __handlers[w9.uid].append((__bound, (0, )))

    '''Line 1256: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ on_text: root._trigger_update_hex(args[1]) '''
    __prop_init = __on_init[0]
    if __prop_init is None:
        w13.fast_bind("on_text", __h18_on_text, __ref_root)
    else:
        w13.fast_bind("text", __h18_on_text, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w13)

    '''Line 1264: <ColorPicker> -> BoxLayout -> ColorWheel @ on_color: root.color[:3] = args[1][:3] '''
    __prop_init = __on_init[1]
    if __prop_init is None:
        __bind_w16_wheel("on_color", __h19_on_color, __ref_root)
    else:
        __bind_w16_wheel("color", __h19_on_color, __ref_root)
        __prop_init[2] = __prop_init[0].dispatch_count(w16_wheel)

    return __partial(__d71, app, g14, g15, root, w1, w10, w11, w12, w13, w16_wheel, w2, w3, w4, w5, w6, w7, w8, w9, __on_init)

def __d71(app, g14, g15, root, w1, w10, w11, w12, w13, w16_wheel, w2, w3, w4, w5, w6, w7, w8, w9, __on_init):
    args = None, None

    '''Line 1151: <ColorPicker> @ foreground_color: (1, 1, 1, 1) if self.hsv[2] * wheel.a < .5 else (0, 0, 0, 1) '''
    root.foreground_color = (1, 1, 1, 1) if root.hsv[2] * w16_wheel.a < .5 else (0, 0, 0, 1)

    '''Line 1154: <ColorPicker> -> BoxLayout @ orientation: 'vertical' if root.width < root.height else 'horizontal' '''
    w1.orientation = 'vertical' if root.width < root.height else 'horizontal'

    '''Line 1158: <ColorPicker> -> BoxLayout -> StackLayout @ size_hint_y: None if root.width < root.height else 1 '''
    w2.size_hint_y = None if root.width < root.height else 1

    '''Line 1159: <ColorPicker> -> BoxLayout -> StackLayout @ height: sp(33) * 4 if root.width < root.height else self.height '''
    w2.height = sp(33) * 4 if root.width < root.height else w2.height

    '''Line 1171: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.r '''
    w3.color = w16_wheel.r

    '''Line 1172: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w3.foreground_color = root.foreground_color

    '''Line 1173: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w3.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1174: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w3.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1175: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w3.height = '33sp' if root.width < root.height else w3.height

    '''Line 1181: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.g '''
    w4.color = w16_wheel.g

    '''Line 1182: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w4.foreground_color = root.foreground_color

    '''Line 1183: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w4.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1184: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w4.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1185: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w4.height = '33sp' if root.width < root.height else w4.height

    '''Line 1191: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: wheel.b '''
    w5.color = w16_wheel.b

    '''Line 1192: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w5.foreground_color = root.foreground_color

    '''Line 1193: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w5.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1194: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w5.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1195: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w5.height = '33sp' if root.width < root.height else w5.height

    '''Line 1201: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.color[3] '''
    w6.color = root.color[3]

    '''Line 1202: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w6.foreground_color = root.foreground_color

    '''Line 1203: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w6.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1204: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w6.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1205: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w6.height = '33sp' if root.width < root.height else w6.height

    '''Line 1212: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[0] '''
    w7.color = root.hsv[0]

    '''Line 1213: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w7.foreground_color = root.foreground_color

    '''Line 1214: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w7.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1215: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w7.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1216: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w7.height = '33sp' if root.width < root.height else w7.height

    '''Line 1223: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[1] '''
    w8.color = root.hsv[1]

    '''Line 1224: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w8.foreground_color = root.foreground_color

    '''Line 1225: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w8.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1226: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w8.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1227: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w8.height = '33sp' if root.width < root.height else w8.height

    '''Line 1234: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ color: root.hsv[2] '''
    w9.color = root.hsv[2]

    '''Line 1235: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ foreground_color: root.foreground_color '''
    w9.foreground_color = root.foreground_color

    '''Line 1236: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_y: None if root.width < root.height else 0.125 '''
    w9.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1237: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ size_hint_x: .5 if root.width < root.height else 1 '''
    w9.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1238: <ColorPicker> -> BoxLayout -> StackLayout -> ColorPicker_Selector @ height: '33sp' if root.width < root.height else self.height '''
    w9.height = '33sp' if root.width < root.height else w9.height

    '''Line 1241: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_y: None if root.width < root.height else 0.125 '''
    w10.size_hint_y = None if root.width < root.height else 0.125

    '''Line 1242: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ size_hint_x: .5 if root.width < root.height else 1 '''
    w10.size_hint_x = .5 if root.width < root.height else 1

    '''Line 1243: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout @ height: '33sp' if root.width < root.height else self.height '''
    w10.height = '33sp' if root.width < root.height else w10.height

    '''Line 1249: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> ColorPicker_Label @ color: root.foreground_color '''
    w11.color = root.foreground_color

    '''Line 1255: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ text: str(root.hex_color) '''
    w13.text = str(root.hex_color)

    '''Line 1261: <ColorPicker> -> BoxLayout -> ColorWheel @ _origin: (self.center_x, self.center_y) '''
    w16_wheel._origin = (w16_wheel.center_x, w16_wheel.center_y)

    '''Line 1262: <ColorPicker> -> BoxLayout -> ColorWheel @ _radius: 0.45 * min(self.size) '''
    w16_wheel._radius = 0.45 * min(w16_wheel.size)

    '''Line 1263: <ColorPicker> -> BoxLayout -> ColorWheel @ color: root.color '''
    w16_wheel.color = root.color

    args = None,

    '''Line 1256: <ColorPicker> -> BoxLayout -> StackLayout -> BoxLayout -> AnchorLayout -> ColorPicker_Input @ on_text: root._trigger_update_hex(args[1]) '''
    if __on_init[0] is not None:
        __prop, s, e = __on_init[0]
        if s != e and __prop.dispatch_count(w13) == e:
            root._trigger_update_hex(args[1])

    '''Line 1264: <ColorPicker> -> BoxLayout -> ColorWheel @ on_color: root.color[:3] = args[1][:3] '''
    if __on_init[1] is not None:
        __prop, s, e = __on_init[1]
        if s != e and __prop.dispatch_count(w16_wheel) == e:
            root.color[:3] = args[1][:3]

    return (w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w16_wheel)


# register dynamic classes
Factory.register("ActionPreviousButton", baseclasses="Button", filename=__file__, warn=True)
Factory.register("ColorPicker_Input", baseclasses="TextInput", filename=__file__, warn=True)
Factory.register("ColorPicker_Selector", baseclasses="BoxLayout", filename=__file__, warn=True)
Factory.register("ColorPicker_Label", baseclasses="Label", filename=__file__, warn=True)
Factory.register("ActionPreviousImage", baseclasses="Image", filename=__file__, warn=True)

# registration (selector, rule, avoid_previous_rules)
rules = (
    (__ParserSelectorName("label"), __r0, False),
    (__ParserSelectorName("button"), __r1, True),
    (__ParserSelectorName("-togglebutton"), __r1, True),
    (__ParserSelectorName("bubblecontent"), __r2, False),
    (__ParserSelectorName("bubblebutton"), __r3, False),
    (__ParserSelectorName("slider"), __r4, False),
    (__ParserSelectorName("progressbar"), __r5, False),
    (__ParserSelectorName("splitterstrip"), __r6, False),
    (__ParserSelectorName("scatter"), __r7, False),
    (__ParserSelectorName("relativelayout"), __r8, False),
    (__ParserSelectorName("image"), __r9, False),
    (__ParserSelectorName("asyncimage"), __r9, False),
    (__ParserSelectorName("effectwidget"), __r10, False),
    (__ParserSelectorName("tabbedpanelcontent"), __r11, False),
    (__ParserSelectorName("tabbedpanelstrip"), __r12, False),
    (__ParserSelectorName("striplayout"), __r13, False),
    (__ParserSelectorName("tabbedpanelheader"), __r14, False),
    (__ParserSelectorName("selector"), __r15, False),
    (__ParserSelectorName("textinput"), __r16, False),
    (__ParserSelectorName("textinputcutcopypaste"), __r17, False),
    (__ParserSelectorName("codeinput"), __r18, False),
    (__ParserSelectorName("treeviewnode"), __r19, False),
    (__ParserSelectorName("treeviewlabel"), __r20, False),
    (__ParserSelectorName("stencilview"), __r21, False),
    (__ParserSelectorName("filechooserlistlayout"), __r22, False),
    (__ParserSelectorName("filechooserlistview"), __r23, False),
    (__ParserSelectorName("filechoosericonlayout"), __r24, False),
    (__ParserSelectorName("filechoosericonview"), __r25, False),
    (__ParserSelectorName("filechooserprogress"), __r26, False),
    (__ParserSelectorName("switch"), __r27, False),
    (__ParserSelectorName("modalview"), __r28, False),
    (__ParserSelectorName("popup"), __r29, False),
    (__ParserSelectorName("spinneroption"), __r30, False),
    (__ParserSelectorName("spinner"), __r31, False),
    (__ParserSelectorName("actionbar"), __r32, False),
    (__ParserSelectorName("actionview"), __r33, False),
    (__ParserSelectorName("actionseparator"), __r34, False),
    (__ParserSelectorName("actionbutton"), __r35, False),
    (__ParserSelectorName("actiontogglebutton"), __r35, False),
    (__ParserSelectorName("actionlabel"), __r36, False),
    (__ParserSelectorName("actiongroup"), __r37, False),
    (__ParserSelectorName("actioncheck"), __r38, False),
    (__ParserSelectorName("actionpreviousimage"), __r39, False),
    (__ParserSelectorName("actionpreviousbutton"), __r40, False),
    (__ParserSelectorName("actionprevious"), __r41, False),
    (__ParserSelectorName("actiongroup"), __r42, False),
    (__ParserSelectorName("actionoverflow"), __r43, False),
    (__ParserSelectorName("actiondropdown"), __r44, False),
    (__ParserSelectorName("accordionitem"), __r45, False),
    (__ParserSelectorName("settingspacer"), __r46, False),
    (__ParserSelectorName("settingitem"), __r47, False),
    (__ParserSelectorName("settingboolean"), __r48, False),
    (__ParserSelectorName("settingstring"), __r49, False),
    (__ParserSelectorName("settingpath"), __r50, False),
    (__ParserSelectorName("settingoptions"), __r51, False),
    (__ParserSelectorName("settingtitle"), __r52, False),
    (__ParserSelectorName("settingsidebarlabel"), __r53, False),
    (__ParserSelectorName("settingspanel"), __r54, False),
    (__ParserSelectorName("settings"), __r55, False),
    (__ParserSelectorName("interfacewithsidebar"), __r56, False),
    (__ParserSelectorName("interfacewithspinner"), __r57, False),
    (__ParserSelectorName("menuspinner"), __r58, False),
    (__ParserSelectorName("menusidebar"), __r59, False),
    (__ParserSelectorName("contentpanel"), __r60, False),
    (__ParserSelectorName("interfacewithtabbedpanel"), __r61, False),
    (__ParserSelectorName("scrollview"), __r62, False),
    (__ParserSelectorName("videoplayerpreview"), __r63, False),
    (__ParserSelectorName("videoplayerannotation"), __r64, False),
    (__ParserSelectorName("videoplayer"), __r65, False),
    (__ParserSelectorName("checkbox"), __r66, False),
    (__ParserSelectorName("screenmanager"), __r67, False),
    (__ParserSelectorName("colorpicker_input"), __r68, False),
    (__ParserSelectorName("colorpicker_label"), __r69, False),
    (__ParserSelectorName("colorpicker_selector"), __r70, False),
    (__ParserSelectorName("colorpicker"), __r71, False),
)


def get_root():
    pass


__Builder.load_string('''
[FileListEntry@FloatLayout+TreeViewNode]:
    locked: False
    entries: []
    path: ctx.path
    # FIXME: is_selected is actually a read_only treeview property. In this
    # case, however, we're doing this because treeview only has single-selection
    # hardcoded in it. The fix to this would be to update treeview to allow
    # multiple selection.
    is_selected: self.path in ctx.controller().selection

    orientation: 'horizontal'
    size_hint_y: None
    height: '48dp' if dp(1) > 1 else '24dp'
    # Don't allow expansion of the ../ node
    is_leaf: not ctx.isdir or ctx.name.endswith('..' + ctx.sep) or self.locked
    on_touch_down: self.collide_point(*args[1].pos) and ctx.controller().entry_touched(self, args[1])
    on_touch_up: self.collide_point(*args[1].pos) and ctx.controller().entry_released(self, args[1])
    BoxLayout:
        pos: root.pos
        Label:
            id: filename
            width: (self.texture_size[0] + dp(4)) if self.texture_size else dp(10)
            halign: 'left'
            shorten: True
            text: ctx.name
        Label:
            text_size: self.width, None
            size_hint_x: None
            halign: 'right'
            text: '{}'.format(ctx.get_nice_size())
''')


__Builder.load_string('''
[FileIconEntry@Widget]:
    locked: False
    path: ctx.path
    selected: self.path in ctx.controller().selection
    size_hint: None, None

    on_touch_down: self.collide_point(*args[1].pos) and ctx.controller().entry_touched(self, args[1])
    on_touch_up: self.collide_point(*args[1].pos) and ctx.controller().entry_released(self, args[1])
    size: '100dp', '100dp'

    canvas:
        Color:
            rgba: 1, 1, 1, 1 if self.selected else 0
        BorderImage:
            border: 8, 8, 8, 8
            pos: root.pos
            size: root.size
            source: 'atlas://data/images/defaulttheme/filechooser_selected'

    Image:
        size: '48dp', '48dp'
        source: 'atlas://data/images/defaulttheme/filechooser_%s' % ('folder' if ctx.isdir else 'file')
        pos: root.x + dp(24), root.y + dp(40)
    Label:
        text: ctx.name
        text_size: (root.width, self.height)
        halign: 'center'
        shorten: True
        size: '100dp', '16dp'
        pos: root.x, root.y + dp(16)

    Label:
        text: '{}'.format(ctx.get_nice_size())
        font_size: '11sp'
        color: .8, .8, .8, 1
        size: '100dp', '16sp'
        pos: root.pos
        halign: 'center'
''')


__Builder.load_string('''
[AccordionItemTitle@Label]:
    text: ctx.title
    normal_background: ctx.item.background_normal if ctx.item.collapse else ctx.item.background_selected
    disabled_background: ctx.item.background_disabled_normal if ctx.item.collapse else ctx.item.background_disabled_selected
    canvas.before:
        Color:
            rgba: self.disabled_color if self.disabled else self.color
        BorderImage:
            source: self.disabled_background if self.disabled else self.normal_background
            pos: self.pos
            size: self.size
        PushMatrix
        Translate:
            xy: self.center_x, self.center_y
        Rotate:
            angle: 90 if ctx.item.orientation == 'horizontal' else 0
            axis: 0, 0, 1
        Translate:
            xy: -self.center_x, -self.center_y
    canvas.after:
        PopMatrix
''')
